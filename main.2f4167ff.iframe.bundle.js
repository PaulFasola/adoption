(window.webpackJsonp=window.webpackJsonp||[]).push([[1],{1001:function(module,exports){},1002:function(module,exports){},1007:function(module,exports){},1009:function(module,exports){},1028:function(module,exports){},1040:function(module,exports){},1043:function(module,exports){},1055:function(module,exports,__webpack_require__){var map={"./nestedObjectAssign":543,"./nestedObjectAssign.js":543};function webpackContext(req){var id=webpackContextResolve(req);return __webpack_require__(id)}function webpackContextResolve(req){if(!__webpack_require__.o(map,req)){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}return map[req]}webpackContext.keys=function webpackContextKeys(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id=1055},1068:function(module,exports,__webpack_require__){"use strict";(function(module){(0,__webpack_require__(242).configure)([__webpack_require__(1069)],module,!1)}).call(this,__webpack_require__(82)(module))},1069:function(module,exports,__webpack_require__){var map={"./components/CurrencySwap/index.stories.tsx":1087,"./components/PaymentRequest/index.stories.tsx":1073,"./components/ProtocolSelector/index.stories.tsx":1082,"./components/TransactionStatus/index.stories.tsx":1093,"./providers/localization/localizationProvider.stories.tsx":1094,"./providers/theme/themeProvider.stories.tsx":1083};function webpackContext(req){var id=webpackContextResolve(req);return __webpack_require__(id)}function webpackContextResolve(req){if(!__webpack_require__.o(map,req)){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}return map[req]}webpackContext.keys=function webpackContextKeys(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id=1069},1073:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Basic",(function(){return Basic})),__webpack_require__.d(__webpack_exports__,"Detailed",(function(){return Detailed})),__webpack_require__.d(__webpack_exports__,"AnimatedStatus",(function(){return AnimatedStatus})),__webpack_require__.d(__webpack_exports__,"Transacted",(function(){return Transacted})),__webpack_require__.d(__webpack_exports__,"Completed",(function(){return Completed})),__webpack_require__.d(__webpack_exports__,"WithActions",(function(){return WithActions})),__webpack_require__.d(__webpack_exports__,"CustomStrings",(function(){return CustomStrings})),__webpack_require__.d(__webpack_exports__,"Scenario",(function(){return Scenario}));__webpack_require__(86),__webpack_require__(27),__webpack_require__(28),__webpack_require__(14),__webpack_require__(54),__webpack_require__(32),__webpack_require__(30),__webpack_require__(34),__webpack_require__(25),__webpack_require__(12),__webpack_require__(65),__webpack_require__(17),__webpack_require__(106),__webpack_require__(9),__webpack_require__(1074),__webpack_require__(105);var _parameters,react__WEBPACK_IMPORTED_MODULE_16__=__webpack_require__(0),_providers_localization_localizationProvider__WEBPACK_IMPORTED_MODULE_17__=__webpack_require__(123),_PaymentRequest__WEBPACK_IMPORTED_MODULE_18__=__webpack_require__(77),_enums_paymentStatus__WEBPACK_IMPORTED_MODULE_19__=__webpack_require__(48),_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_20__=__webpack_require__(88),_assets_fictiveCompany_png__WEBPACK_IMPORTED_MODULE_21__=__webpack_require__(146),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_22__=__webpack_require__(1);function _slicedToArray(arr,i){return function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}(arr)||function _iterableToArrayLimit(arr,i){if("undefined"==typeof Symbol||!(Symbol.iterator in Object(arr)))return;var _arr=[],_n=!0,_d=!1,_e=void 0;try{for(var _s,_i=arr[Symbol.iterator]();!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}(arr,i)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr,i)||function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}__webpack_exports__.default={parameters:(_parameters={storySource:{source:'\n    \n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = "\\n    \\n    // @ts-nocheck\\n    // @ts-ignore\\n    var __STORY__ = \\"import React, { Fragment, useState } from \'react\';\\\\nimport { ILocalizedStrings } from \'../../providers/localization/ILocalizedStrings\';\\\\nimport { LocalizationProvider } from \'../../providers/localization/localizationProvider\';\\\\nimport { PaymentRequest } from \'../PaymentRequest\';\\\\nimport { PaymentStatus } from \'./enums/paymentStatus\';\\\\nimport { IProps, ITransaction } from \'./interfaces\';\\\\nimport { Meta, Story } from \'@storybook/react\';\\\\nimport { action } from \'@storybook/addon-actions\';\\\\n\\\\nimport companyLogo from \'../../assets/fictiveCompany.png\';\\\\n\\\\nexport default {\\\\n  title: \'Components/PaymentRequest\',\\\\n} as Meta;\\\\n\\\\nconst argTypes = {\\\\n  status: {\\\\n    control: {\\\\n      type: \'select\',\\\\n      options: Object.keys(PaymentStatus),\\\\n    },\\\\n  },\\\\n};\\\\n\\\\nconst controlsToProps = (args: IProps) => {\\\\n  if (args.status && PaymentStatus[args.status]) {\\\\n    args.status = PaymentStatus[args.status];\\\\n  }\\\\n\\\\n  return args;\\\\n};\\\\n\\\\nconst dueDate = new Date();\\\\ndueDate.setTime(dueDate.setMinutes(dueDate.getMinutes() + 15));\\\\n\\\\nexport const Basic: Story<IProps> = (args) => <PaymentRequest {...controlsToProps(args)} />;\\\\nBasic.argTypes = argTypes;\\\\nBasic.args = {\\\\n  symbol: \'BTC\',\\\\n  decimalPlaces: 8,\\\\n  logos: {\\\\n    coin: \'https://upload.wikimedia.org/wikipedia/commons/c/c5/Bitcoin_logo.svg\',\\\\n  },\\\\n  address: \'1BitcoinEaterAddressDontSendf59kuE\',\\\\n  amount: {\\\\n    toPay: 0.9,\\\\n  },\\\\n  noShadow: false,\\\\n};\\\\n\\\\nexport const Detailed: Story<IProps> = (args) => (\\\\n  <PaymentRequest status={PaymentStatus.PENDING} {...controlsToProps(args)} />\\\\n);\\\\nDetailed.argTypes = argTypes;\\\\nDetailed.args = {\\\\n  ...Basic.args,\\\\n  showQRCode: true,\\\\n  status: PaymentStatus.PENDING,\\\\n  sellerName: \'Such Company LTD\',\\\\n  logos: {\\\\n    coin: \'https://upload.wikimedia.org/wikipedia/commons/c/c5/Bitcoin_logo.svg\',\\\\n    company: companyLogo,\\\\n  },\\\\n  amount: { toPay: 0.9, received: 0 },\\\\n  deadline: {\\\\n    dateLocale: \'en-US\',\\\\n    datetime: dueDate,\\\\n    humanized: true,\\\\n  },\\\\n};\\\\n\\\\nexport const AnimatedStatus: Story<IProps> = (args) => (\\\\n  <PaymentRequest waitAnimation {...controlsToProps(args)} />\\\\n);\\\\nAnimatedStatus.argTypes = argTypes;\\\\nAnimatedStatus.args = {\\\\n  ...Detailed.args,\\\\n  waitAnimation: true,\\\\n};\\\\n\\\\nexport const Transacted: Story<IProps> = (args) => <PaymentRequest {...controlsToProps(args)} />;\\\\nTransacted.argTypes = argTypes;\\\\nTransacted.args = {\\\\n  ...Detailed.args,\\\\n  amount: {\\\\n    toPay: 0.9,\\\\n    received: 0.2,\\\\n  },\\\\n};\\\\n\\\\nconst txs = new Array<ITransaction>(30).fill(\\\\n  {\\\\n    txHash: \'369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\',\\\\n    txUrl:\\\\n      \'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\',\\\\n    amount: 0.01,\\\\n  },\\\\n  0,\\\\n  20\\\\n);\\\\n\\\\nexport const Completed: Story<IProps> = (args) => <PaymentRequest {...controlsToProps(args)} />;\\\\nCompleted.argTypes = argTypes;\\\\nCompleted.args = {\\\\n  ...Detailed.args,\\\\n  status: PaymentStatus.COMPLETE,\\\\n  transactions: txs,\\\\n  amount: {\\\\n    toPay: 0.2,\\\\n    received: 0.2,\\\\n  },\\\\n};\\\\n\\\\nexport const WithActions: Story<IProps> = (args) => <PaymentRequest {...controlsToProps(args)} />;\\\\nWithActions.argTypes = argTypes;\\\\nWithActions.args = {\\\\n  ...Detailed.args,\\\\n  transactions: [\\\\n    {\\\\n      txHash: \'369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\',\\\\n      txUrl:\\\\n        \'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\',\\\\n      amount: 0.1,\\\\n    },\\\\n    {\\\\n      txHash: \'519f6c9581ce27e0a59f5f8e427b672087e1f2eb1aead0d66288de62ed3e9647\',\\\\n      txUrl:\\\\n        \'https://www.blockchain.com/btc/tx/519f6c9581ce27e0a59f5f8e427b672087e1f2eb1aead0d66288de62ed3e9647\',\\\\n      amount: 0.1,\\\\n    },\\\\n  ],\\\\n  helpUrl: \'https://github.com/PaulFasola/adoption/blob/master/README.md\',\\\\n  onCancel: () => {\\\\n    action(\'onCancel\');\\\\n    alert(\'User wants to cancel, do something here!\');\\\\n  },\\\\n};\\\\n\\\\nexport const CustomStrings: Story<IProps> = (args) => {\\\\n  const locales: Record<string, Partial<ILocalizedStrings>> = {\\\\n    [\'en-US\']: {\\\\n      paymentRequest: {\\\\n        cancel: \'Very cancelling\',\\\\n        seller: \'Seller\',\\\\n        deadline: \'Deadline\',\\\\n        // txStatus is overriden by customStatusText props in this example.\\\\n        txStatus: {\\\\n          complete: \'Done o/\',\\\\n          failed: \'Failed :(\',\\\\n          pending: \'is pending...\',\\\\n        },\\\\n        request: \'Pay {amount} {symbol} to get your item\',\\\\n        help: \'Wow, help here\',\\\\n        status: \'Transaction\',\\\\n        receivedAmount: \'Received:\',\\\\n        remainingAmount: \'Remaining:\',\\\\n        transactions: \'{txAmount} transactions\',\\\\n      },\\\\n    },\\\\n  };\\\\n\\\\n  return (\\\\n    <LocalizationProvider customLocales={locales}>\\\\n      <PaymentRequest {...controlsToProps(args)} />\\\\n    </LocalizationProvider>\\\\n  );\\\\n};\\\\nCustomStrings.argTypes = argTypes;\\\\nCustomStrings.args = {\\\\n  ...WithActions.args,\\\\n  customStatusText: \'Custom status message\',\\\\n};\\\\n\\\\nexport const Scenario: Story<IProps> = () => {\\\\n  const [status, setStatus] = useState<PaymentStatus>();\\\\n\\\\n  const handleClick = (status: PaymentStatus) => (): void => setStatus(status);\\\\n\\\\n  return (\\\\n    <Fragment>\\\\n      <div style={{ marginBottom: \'20px\' }}>\\\\n        <button onClick={handleClick(PaymentStatus.COMPLETE)}>Trigger success</button>\\\\n        <button onClick={handleClick(PaymentStatus.FAILED)}>Trigger failure</button>\\\\n      </div>\\\\n      <PaymentRequest\\\\n        symbol=\'BTC\'\\\\n        decimalPlaces={8}\\\\n        sellerName=\'Such Company LTD\'\\\\n        logos={{\\\\n          coin: \'https://upload.wikimedia.org/wikipedia/commons/c/c5/Bitcoin_logo.svg\',\\\\n          company: companyLogo,\\\\n        }}\\\\n        address=\'1BitcoinEaterAddressDontSendf59kuE\'\\\\n        amount={{ toPay: 0.9, received: 0.2 }}\\\\n        transactions={[\\\\n          {\\\\n            txHash: \'369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\',\\\\n            txUrl:\\\\n              \'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\',\\\\n            amount: 0.1,\\\\n          },\\\\n          {\\\\n            txHash: \'519f6c9581ce27e0a59f5f8e427b672087e1f2eb1aead0d66288de62ed3e9647\',\\\\n            txUrl:\\\\n              \'https://www.blockchain.com/btc/tx/519f6c9581ce27e0a59f5f8e427b672087e1f2eb1aead0d66288de62ed3e9647\',\\\\n            amount: 0.1,\\\\n          },\\\\n        ]}\\\\n        helpUrl=\'https://github.com/PaulFasola/adoption/blob/master/README.md\'\\\\n        deadline={{\\\\n          dateLocale: \'en-US\',\\\\n          datetime: dueDate,\\\\n          humanized: true,\\\\n        }}\\\\n        status={status}\\\\n      />\\\\n    </Fragment>\\\\n  );\\\\n};\\\\nScenario.parameters = {\\\\n  controls: { hideNoControlsWarning: true },\\\\n};\\\\n\\";\\n    // @ts-ignore\\n    var __LOCATIONS_MAP__ = {\\"Basic\\":{\\"startLoc\\":{\\"col\\":36,\\"line\\":36},\\"endLoc\\":{\\"col\\":91,\\"line\\":36},\\"startBody\\":{\\"col\\":36,\\"line\\":36},\\"endBody\\":{\\"col\\":91,\\"line\\":36}},\\"Detailed\\":{\\"startLoc\\":{\\"col\\":39,\\"line\\":51},\\"endLoc\\":{\\"col\\":1,\\"line\\":53},\\"startBody\\":{\\"col\\":39,\\"line\\":51},\\"endBody\\":{\\"col\\":1,\\"line\\":53}},\\"AnimatedStatus\\":{\\"startLoc\\":{\\"col\\":45,\\"line\\":72},\\"endLoc\\":{\\"col\\":1,\\"line\\":74},\\"startBody\\":{\\"col\\":45,\\"line\\":72},\\"endBody\\":{\\"col\\":1,\\"line\\":74}},\\"Transacted\\":{\\"startLoc\\":{\\"col\\":41,\\"line\\":81},\\"endLoc\\":{\\"col\\":96,\\"line\\":81},\\"startBody\\":{\\"col\\":41,\\"line\\":81},\\"endBody\\":{\\"col\\":96,\\"line\\":81}},\\"Completed\\":{\\"startLoc\\":{\\"col\\":40,\\"line\\":102},\\"endLoc\\":{\\"col\\":95,\\"line\\":102},\\"startBody\\":{\\"col\\":40,\\"line\\":102},\\"endBody\\":{\\"col\\":95,\\"line\\":102}},\\"WithActions\\":{\\"startLoc\\":{\\"col\\":42,\\"line\\":114},\\"endLoc\\":{\\"col\\":97,\\"line\\":114},\\"startBody\\":{\\"col\\":42,\\"line\\":114},\\"endBody\\":{\\"col\\":97,\\"line\\":114}},\\"CustomStrings\\":{\\"startLoc\\":{\\"col\\":44,\\"line\\":139},\\"endLoc\\":{\\"col\\":1,\\"line\\":167},\\"startBody\\":{\\"col\\":44,\\"line\\":139},\\"endBody\\":{\\"col\\":1,\\"line\\":167}},\\"Scenario\\":{\\"startLoc\\":{\\"col\\":39,\\"line\\":174},\\"endLoc\\":{\\"col\\":1,\\"line\\":219},\\"startBody\\":{\\"col\\":39,\\"line\\":174},\\"endBody\\":{\\"col\\":1,\\"line\\":219}}};\\n    \\nimport React, { Fragment, useState } from \'react\';\\nimport { ILocalizedStrings } from \'../../providers/localization/ILocalizedStrings\';\\nimport { LocalizationProvider } from \'../../providers/localization/localizationProvider\';\\nimport { PaymentRequest } from \'../PaymentRequest\';\\nimport { PaymentStatus } from \'./enums/paymentStatus\';\\nimport { IProps, ITransaction } from \'./interfaces\';\\nimport { Meta, Story } from \'@storybook/react\';\\nimport { action } from \'@storybook/addon-actions\';\\n\\nimport companyLogo from \'../../assets/fictiveCompany.png\';\\n\\nexport default {parameters: {\\"storySource\\":{\\"source\\":\\"import React, { Fragment, useState } from \'react\';\\\\nimport { ILocalizedStrings } from \'../../providers/localization/ILocalizedStrings\';\\\\nimport { LocalizationProvider } from \'../../providers/localization/localizationProvider\';\\\\nimport { PaymentRequest } from \'../PaymentRequest\';\\\\nimport { PaymentStatus } from \'./enums/paymentStatus\';\\\\nimport { IProps, ITransaction } from \'./interfaces\';\\\\nimport { Meta, Story } from \'@storybook/react\';\\\\nimport { action } from \'@storybook/addon-actions\';\\\\n\\\\nimport companyLogo from \'../../assets/fictiveCompany.png\';\\\\n\\\\nexport default {\\\\n  title: \'Components/PaymentRequest\',\\\\n} as Meta;\\\\n\\\\nconst argTypes = {\\\\n  status: {\\\\n    control: {\\\\n      type: \'select\',\\\\n      options: Object.keys(PaymentStatus),\\\\n    },\\\\n  },\\\\n};\\\\n\\\\nconst controlsToProps = (args: IProps) => {\\\\n  if (args.status && PaymentStatus[args.status]) {\\\\n    args.status = PaymentStatus[args.status];\\\\n  }\\\\n\\\\n  return args;\\\\n};\\\\n\\\\nconst dueDate = new Date();\\\\ndueDate.setTime(dueDate.setMinutes(dueDate.getMinutes() + 15));\\\\n\\\\nexport const Basic: Story<IProps> = (args) => <PaymentRequest {...controlsToProps(args)} />;\\\\nBasic.argTypes = argTypes;\\\\nBasic.args = {\\\\n  symbol: \'BTC\',\\\\n  decimalPlaces: 8,\\\\n  logos: {\\\\n    coin: \'https://upload.wikimedia.org/wikipedia/commons/c/c5/Bitcoin_logo.svg\',\\\\n  },\\\\n  address: \'1BitcoinEaterAddressDontSendf59kuE\',\\\\n  amount: {\\\\n    toPay: 0.9,\\\\n  },\\\\n  noShadow: false,\\\\n};\\\\n\\\\nexport const Detailed: Story<IProps> = (args) => (\\\\n  <PaymentRequest status={PaymentStatus.PENDING} {...controlsToProps(args)} />\\\\n);\\\\nDetailed.argTypes = argTypes;\\\\nDetailed.args = {\\\\n  ...Basic.args,\\\\n  showQRCode: true,\\\\n  status: PaymentStatus.PENDING,\\\\n  sellerName: \'Such Company LTD\',\\\\n  logos: {\\\\n    coin: \'https://upload.wikimedia.org/wikipedia/commons/c/c5/Bitcoin_logo.svg\',\\\\n    company: companyLogo,\\\\n  },\\\\n  amount: { toPay: 0.9, received: 0 },\\\\n  deadline: {\\\\n    dateLocale: \'en-US\',\\\\n    datetime: dueDate,\\\\n    humanized: true,\\\\n  },\\\\n};\\\\n\\\\nexport const AnimatedStatus: Story<IProps> = (args) => (\\\\n  <PaymentRequest waitAnimation {...controlsToProps(args)} />\\\\n);\\\\nAnimatedStatus.argTypes = argTypes;\\\\nAnimatedStatus.args = {\\\\n  ...Detailed.args,\\\\n  waitAnimation: true,\\\\n};\\\\n\\\\nexport const Transacted: Story<IProps> = (args) => <PaymentRequest {...controlsToProps(args)} />;\\\\nTransacted.argTypes = argTypes;\\\\nTransacted.args = {\\\\n  ...Detailed.args,\\\\n  amount: {\\\\n    toPay: 0.9,\\\\n    received: 0.2,\\\\n  },\\\\n};\\\\n\\\\nconst txs = new Array<ITransaction>(30).fill(\\\\n  {\\\\n    txHash: \'369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\',\\\\n    txUrl:\\\\n      \'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\',\\\\n    amount: 0.01,\\\\n  },\\\\n  0,\\\\n  20\\\\n);\\\\n\\\\nexport const Completed: Story<IProps> = (args) => <PaymentRequest {...controlsToProps(args)} />;\\\\nCompleted.argTypes = argTypes;\\\\nCompleted.args = {\\\\n  ...Detailed.args,\\\\n  status: PaymentStatus.COMPLETE,\\\\n  transactions: txs,\\\\n  amount: {\\\\n    toPay: 0.2,\\\\n    received: 0.2,\\\\n  },\\\\n};\\\\n\\\\nexport const WithActions: Story<IProps> = (args) => <PaymentRequest {...controlsToProps(args)} />;\\\\nWithActions.argTypes = argTypes;\\\\nWithActions.args = {\\\\n  ...Detailed.args,\\\\n  transactions: [\\\\n    {\\\\n      txHash: \'369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\',\\\\n      txUrl:\\\\n        \'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\',\\\\n      amount: 0.1,\\\\n    },\\\\n    {\\\\n      txHash: \'519f6c9581ce27e0a59f5f8e427b672087e1f2eb1aead0d66288de62ed3e9647\',\\\\n      txUrl:\\\\n        \'https://www.blockchain.com/btc/tx/519f6c9581ce27e0a59f5f8e427b672087e1f2eb1aead0d66288de62ed3e9647\',\\\\n      amount: 0.1,\\\\n    },\\\\n  ],\\\\n  helpUrl: \'https://github.com/PaulFasola/adoption/blob/master/README.md\',\\\\n  onCancel: () => {\\\\n    action(\'onCancel\');\\\\n    alert(\'User wants to cancel, do something here!\');\\\\n  },\\\\n};\\\\n\\\\nexport const CustomStrings: Story<IProps> = (args) => {\\\\n  const locales: Record<string, Partial<ILocalizedStrings>> = {\\\\n    [\'en-US\']: {\\\\n      paymentRequest: {\\\\n        cancel: \'Very cancelling\',\\\\n        seller: \'Seller\',\\\\n        deadline: \'Deadline\',\\\\n        // txStatus is overriden by customStatusText props in this example.\\\\n        txStatus: {\\\\n          complete: \'Done o/\',\\\\n          failed: \'Failed :(\',\\\\n          pending: \'is pending...\',\\\\n        },\\\\n        request: \'Pay {amount} {symbol} to get your item\',\\\\n        help: \'Wow, help here\',\\\\n        status: \'Transaction\',\\\\n        receivedAmount: \'Received:\',\\\\n        remainingAmount: \'Remaining:\',\\\\n        transactions: \'{txAmount} transactions\',\\\\n      },\\\\n    },\\\\n  };\\\\n\\\\n  return (\\\\n    <LocalizationProvider customLocales={locales}>\\\\n      <PaymentRequest {...controlsToProps(args)} />\\\\n    </LocalizationProvider>\\\\n  );\\\\n};\\\\nCustomStrings.argTypes = argTypes;\\\\nCustomStrings.args = {\\\\n  ...WithActions.args,\\\\n  customStatusText: \'Custom status message\',\\\\n};\\\\n\\\\nexport const Scenario: Story<IProps> = () => {\\\\n  const [status, setStatus] = useState<PaymentStatus>();\\\\n\\\\n  const handleClick = (status: PaymentStatus) => (): void => setStatus(status);\\\\n\\\\n  return (\\\\n    <Fragment>\\\\n      <div style={{ marginBottom: \'20px\' }}>\\\\n        <button onClick={handleClick(PaymentStatus.COMPLETE)}>Trigger success</button>\\\\n        <button onClick={handleClick(PaymentStatus.FAILED)}>Trigger failure</button>\\\\n      </div>\\\\n      <PaymentRequest\\\\n        symbol=\'BTC\'\\\\n        decimalPlaces={8}\\\\n        sellerName=\'Such Company LTD\'\\\\n        logos={{\\\\n          coin: \'https://upload.wikimedia.org/wikipedia/commons/c/c5/Bitcoin_logo.svg\',\\\\n          company: companyLogo,\\\\n        }}\\\\n        address=\'1BitcoinEaterAddressDontSendf59kuE\'\\\\n        amount={{ toPay: 0.9, received: 0.2 }}\\\\n        transactions={[\\\\n          {\\\\n            txHash: \'369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\',\\\\n            txUrl:\\\\n              \'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\',\\\\n            amount: 0.1,\\\\n          },\\\\n          {\\\\n            txHash: \'519f6c9581ce27e0a59f5f8e427b672087e1f2eb1aead0d66288de62ed3e9647\',\\\\n            txUrl:\\\\n              \'https://www.blockchain.com/btc/tx/519f6c9581ce27e0a59f5f8e427b672087e1f2eb1aead0d66288de62ed3e9647\',\\\\n            amount: 0.1,\\\\n          },\\\\n        ]}\\\\n        helpUrl=\'https://github.com/PaulFasola/adoption/blob/master/README.md\'\\\\n        deadline={{\\\\n          dateLocale: \'en-US\',\\\\n          datetime: dueDate,\\\\n          humanized: true,\\\\n        }}\\\\n        status={status}\\\\n      />\\\\n    </Fragment>\\\\n  );\\\\n};\\\\nScenario.parameters = {\\\\n  controls: { hideNoControlsWarning: true },\\\\n};\\\\n\\",\\"locationsMap\\":{\\"basic\\":{\\"startLoc\\":{\\"col\\":36,\\"line\\":36},\\"endLoc\\":{\\"col\\":91,\\"line\\":36},\\"startBody\\":{\\"col\\":36,\\"line\\":36},\\"endBody\\":{\\"col\\":91,\\"line\\":36}},\\"detailed\\":{\\"startLoc\\":{\\"col\\":39,\\"line\\":51},\\"endLoc\\":{\\"col\\":1,\\"line\\":53},\\"startBody\\":{\\"col\\":39,\\"line\\":51},\\"endBody\\":{\\"col\\":1,\\"line\\":53}},\\"animated-status\\":{\\"startLoc\\":{\\"col\\":45,\\"line\\":72},\\"endLoc\\":{\\"col\\":1,\\"line\\":74},\\"startBody\\":{\\"col\\":45,\\"line\\":72},\\"endBody\\":{\\"col\\":1,\\"line\\":74}},\\"transacted\\":{\\"startLoc\\":{\\"col\\":41,\\"line\\":81},\\"endLoc\\":{\\"col\\":96,\\"line\\":81},\\"startBody\\":{\\"col\\":41,\\"line\\":81},\\"endBody\\":{\\"col\\":96,\\"line\\":81}},\\"completed\\":{\\"startLoc\\":{\\"col\\":40,\\"line\\":102},\\"endLoc\\":{\\"col\\":95,\\"line\\":102},\\"startBody\\":{\\"col\\":40,\\"line\\":102},\\"endBody\\":{\\"col\\":95,\\"line\\":102}},\\"with-actions\\":{\\"startLoc\\":{\\"col\\":42,\\"line\\":114},\\"endLoc\\":{\\"col\\":97,\\"line\\":114},\\"startBody\\":{\\"col\\":42,\\"line\\":114},\\"endBody\\":{\\"col\\":97,\\"line\\":114}},\\"custom-strings\\":{\\"startLoc\\":{\\"col\\":44,\\"line\\":139},\\"endLoc\\":{\\"col\\":1,\\"line\\":167},\\"startBody\\":{\\"col\\":44,\\"line\\":139},\\"endBody\\":{\\"col\\":1,\\"line\\":167}},\\"scenario\\":{\\"startLoc\\":{\\"col\\":39,\\"line\\":174},\\"endLoc\\":{\\"col\\":1,\\"line\\":219},\\"startBody\\":{\\"col\\":39,\\"line\\":174},\\"endBody\\":{\\"col\\":1,\\"line\\":219}}}},},\\n  title: \'Components/PaymentRequest\',\\n} as Meta;\\n\\nconst argTypes = {\\n  status: {\\n    control: {\\n      type: \'select\',\\n      options: Object.keys(PaymentStatus),\\n    },\\n  },\\n};\\n\\nconst controlsToProps = (args: IProps) => {\\n  if (args.status && PaymentStatus[args.status]) {\\n    args.status = PaymentStatus[args.status];\\n  }\\n\\n  return args;\\n};\\n\\nconst dueDate = new Date();\\ndueDate.setTime(dueDate.setMinutes(dueDate.getMinutes() + 15));\\n\\nexport const Basic: Story<IProps> = (args) => <PaymentRequest {...controlsToProps(args)} />;;\\nBasic.argTypes = argTypes;\\nBasic.args = {\\n  symbol: \'BTC\',\\n  decimalPlaces: 8,\\n  logos: {\\n    coin: \'https://upload.wikimedia.org/wikipedia/commons/c/c5/Bitcoin_logo.svg\',\\n  },\\n  address: \'1BitcoinEaterAddressDontSendf59kuE\',\\n  amount: {\\n    toPay: 0.9,\\n  },\\n  noShadow: false,\\n};\\n\\nexport const Detailed: Story<IProps> = (args) => (\\n  <PaymentRequest status={PaymentStatus.PENDING} {...controlsToProps(args)} />\\n);;\\nDetailed.argTypes = argTypes;\\nDetailed.args = {\\n  ...Basic.args,\\n  showQRCode: true,\\n  status: PaymentStatus.PENDING,\\n  sellerName: \'Such Company LTD\',\\n  logos: {\\n    coin: \'https://upload.wikimedia.org/wikipedia/commons/c/c5/Bitcoin_logo.svg\',\\n    company: companyLogo,\\n  },\\n  amount: { toPay: 0.9, received: 0 },\\n  deadline: {\\n    dateLocale: \'en-US\',\\n    datetime: dueDate,\\n    humanized: true,\\n  },\\n};\\n\\nexport const AnimatedStatus: Story<IProps> = (args) => (\\n  <PaymentRequest waitAnimation {...controlsToProps(args)} />\\n);;\\nAnimatedStatus.argTypes = argTypes;\\nAnimatedStatus.args = {\\n  ...Detailed.args,\\n  waitAnimation: true,\\n};\\n\\nexport const Transacted: Story<IProps> = (args) => <PaymentRequest {...controlsToProps(args)} />;;\\nTransacted.argTypes = argTypes;\\nTransacted.args = {\\n  ...Detailed.args,\\n  amount: {\\n    toPay: 0.9,\\n    received: 0.2,\\n  },\\n};\\n\\nconst txs = new Array<ITransaction>(30).fill(\\n  {\\n    txHash: \'369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\',\\n    txUrl:\\n      \'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\',\\n    amount: 0.01,\\n  },\\n  0,\\n  20\\n);\\n\\nexport const Completed: Story<IProps> = (args) => <PaymentRequest {...controlsToProps(args)} />;;\\nCompleted.argTypes = argTypes;\\nCompleted.args = {\\n  ...Detailed.args,\\n  status: PaymentStatus.COMPLETE,\\n  transactions: txs,\\n  amount: {\\n    toPay: 0.2,\\n    received: 0.2,\\n  },\\n};\\n\\nexport const WithActions: Story<IProps> = (args) => <PaymentRequest {...controlsToProps(args)} />;;\\nWithActions.argTypes = argTypes;\\nWithActions.args = {\\n  ...Detailed.args,\\n  transactions: [\\n    {\\n      txHash: \'369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\',\\n      txUrl:\\n        \'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\',\\n      amount: 0.1,\\n    },\\n    {\\n      txHash: \'519f6c9581ce27e0a59f5f8e427b672087e1f2eb1aead0d66288de62ed3e9647\',\\n      txUrl:\\n        \'https://www.blockchain.com/btc/tx/519f6c9581ce27e0a59f5f8e427b672087e1f2eb1aead0d66288de62ed3e9647\',\\n      amount: 0.1,\\n    },\\n  ],\\n  helpUrl: \'https://github.com/PaulFasola/adoption/blob/master/README.md\',\\n  onCancel: () => {\\n    action(\'onCancel\');\\n    alert(\'User wants to cancel, do something here!\');\\n  },\\n};\\n\\nexport const CustomStrings: Story<IProps> = (args) => {\\n  const locales: Record<string, Partial<ILocalizedStrings>> = {\\n    [\'en-US\']: {\\n      paymentRequest: {\\n        cancel: \'Very cancelling\',\\n        seller: \'Seller\',\\n        deadline: \'Deadline\',\\n        // txStatus is overriden by customStatusText props in this example.\\n        txStatus: {\\n          complete: \'Done o/\',\\n          failed: \'Failed :(\',\\n          pending: \'is pending...\',\\n        },\\n        request: \'Pay {amount} {symbol} to get your item\',\\n        help: \'Wow, help here\',\\n        status: \'Transaction\',\\n        receivedAmount: \'Received:\',\\n        remainingAmount: \'Remaining:\',\\n        transactions: \'{txAmount} transactions\',\\n      },\\n    },\\n  };\\n\\n  return (\\n    <LocalizationProvider customLocales={locales}>\\n      <PaymentRequest {...controlsToProps(args)} />\\n    </LocalizationProvider>\\n  );\\n};;\\nCustomStrings.argTypes = argTypes;\\nCustomStrings.args = {\\n  ...WithActions.args,\\n  customStatusText: \'Custom status message\',\\n};\\n\\nexport const Scenario: Story<IProps> = () => {\\n  const [status, setStatus] = useState<PaymentStatus>();\\n\\n  const handleClick = (status: PaymentStatus) => (): void => setStatus(status);\\n\\n  return (\\n    <Fragment>\\n      <div style={{ marginBottom: \'20px\' }}>\\n        <button onClick={handleClick(PaymentStatus.COMPLETE)}>Trigger success</button>\\n        <button onClick={handleClick(PaymentStatus.FAILED)}>Trigger failure</button>\\n      </div>\\n      <PaymentRequest\\n        symbol=\'BTC\'\\n        decimalPlaces={8}\\n        sellerName=\'Such Company LTD\'\\n        logos={{\\n          coin: \'https://upload.wikimedia.org/wikipedia/commons/c/c5/Bitcoin_logo.svg\',\\n          company: companyLogo,\\n        }}\\n        address=\'1BitcoinEaterAddressDontSendf59kuE\'\\n        amount={{ toPay: 0.9, received: 0.2 }}\\n        transactions={[\\n          {\\n            txHash: \'369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\',\\n            txUrl:\\n              \'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\',\\n            amount: 0.1,\\n          },\\n          {\\n            txHash: \'519f6c9581ce27e0a59f5f8e427b672087e1f2eb1aead0d66288de62ed3e9647\',\\n            txUrl:\\n              \'https://www.blockchain.com/btc/tx/519f6c9581ce27e0a59f5f8e427b672087e1f2eb1aead0d66288de62ed3e9647\',\\n            amount: 0.1,\\n          },\\n        ]}\\n        helpUrl=\'https://github.com/PaulFasola/adoption/blob/master/README.md\'\\n        deadline={{\\n          dateLocale: \'en-US\',\\n          datetime: dueDate,\\n          humanized: true,\\n        }}\\n        status={status}\\n      />\\n    </Fragment>\\n  );\\n};\\nScenario.parameters = {\\n  controls: { hideNoControlsWarning: true },\\n};\\n";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {"Basic":{"startLoc":{"col":36,"line":44},"endLoc":{"col":91,"line":44},"startBody":{"col":36,"line":44},"endBody":{"col":91,"line":44}},"Detailed":{"startLoc":{"col":39,"line":59},"endLoc":{"col":1,"line":61},"startBody":{"col":39,"line":59},"endBody":{"col":1,"line":61}},"AnimatedStatus":{"startLoc":{"col":45,"line":80},"endLoc":{"col":1,"line":82},"startBody":{"col":45,"line":80},"endBody":{"col":1,"line":82}},"Transacted":{"startLoc":{"col":41,"line":89},"endLoc":{"col":96,"line":89},"startBody":{"col":41,"line":89},"endBody":{"col":96,"line":89}},"Completed":{"startLoc":{"col":40,"line":110},"endLoc":{"col":95,"line":110},"startBody":{"col":40,"line":110},"endBody":{"col":95,"line":110}},"WithActions":{"startLoc":{"col":42,"line":122},"endLoc":{"col":97,"line":122},"startBody":{"col":42,"line":122},"endBody":{"col":97,"line":122}},"CustomStrings":{"startLoc":{"col":44,"line":147},"endLoc":{"col":1,"line":175},"startBody":{"col":44,"line":147},"endBody":{"col":1,"line":175}},"Scenario":{"startLoc":{"col":39,"line":182},"endLoc":{"col":1,"line":227},"startBody":{"col":39,"line":182},"endBody":{"col":1,"line":227}}};\n    \n\n    \n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = "import React, { Fragment, useState } from \'react\';\\nimport { ILocalizedStrings } from \'../../providers/localization/ILocalizedStrings\';\\nimport { LocalizationProvider } from \'../../providers/localization/localizationProvider\';\\nimport { PaymentRequest } from \'../PaymentRequest\';\\nimport { PaymentStatus } from \'./enums/paymentStatus\';\\nimport { IProps, ITransaction } from \'./interfaces\';\\nimport { Meta, Story } from \'@storybook/react\';\\nimport { action } from \'@storybook/addon-actions\';\\n\\nimport companyLogo from \'../../assets/fictiveCompany.png\';\\n\\nexport default {\\n  title: \'Components/PaymentRequest\',\\n} as Meta;\\n\\nconst argTypes = {\\n  status: {\\n    control: {\\n      type: \'select\',\\n      options: Object.keys(PaymentStatus),\\n    },\\n  },\\n};\\n\\nconst controlsToProps = (args: IProps) => {\\n  if (args.status && PaymentStatus[args.status]) {\\n    args.status = PaymentStatus[args.status];\\n  }\\n\\n  return args;\\n};\\n\\nconst dueDate = new Date();\\ndueDate.setTime(dueDate.setMinutes(dueDate.getMinutes() + 15));\\n\\nexport const Basic: Story<IProps> = (args) => <PaymentRequest {...controlsToProps(args)} />;\\nBasic.argTypes = argTypes;\\nBasic.args = {\\n  symbol: \'BTC\',\\n  decimalPlaces: 8,\\n  logos: {\\n    coin: \'https://upload.wikimedia.org/wikipedia/commons/c/c5/Bitcoin_logo.svg\',\\n  },\\n  address: \'1BitcoinEaterAddressDontSendf59kuE\',\\n  amount: {\\n    toPay: 0.9,\\n  },\\n  noShadow: false,\\n};\\n\\nexport const Detailed: Story<IProps> = (args) => (\\n  <PaymentRequest status={PaymentStatus.PENDING} {...controlsToProps(args)} />\\n);\\nDetailed.argTypes = argTypes;\\nDetailed.args = {\\n  ...Basic.args,\\n  showQRCode: true,\\n  status: PaymentStatus.PENDING,\\n  sellerName: \'Such Company LTD\',\\n  logos: {\\n    coin: \'https://upload.wikimedia.org/wikipedia/commons/c/c5/Bitcoin_logo.svg\',\\n    company: companyLogo,\\n  },\\n  amount: { toPay: 0.9, received: 0 },\\n  deadline: {\\n    dateLocale: \'en-US\',\\n    datetime: dueDate,\\n    humanized: true,\\n  },\\n};\\n\\nexport const AnimatedStatus: Story<IProps> = (args) => (\\n  <PaymentRequest waitAnimation {...controlsToProps(args)} />\\n);\\nAnimatedStatus.argTypes = argTypes;\\nAnimatedStatus.args = {\\n  ...Detailed.args,\\n  waitAnimation: true,\\n};\\n\\nexport const Transacted: Story<IProps> = (args) => <PaymentRequest {...controlsToProps(args)} />;\\nTransacted.argTypes = argTypes;\\nTransacted.args = {\\n  ...Detailed.args,\\n  amount: {\\n    toPay: 0.9,\\n    received: 0.2,\\n  },\\n};\\n\\nconst txs = new Array<ITransaction>(30).fill(\\n  {\\n    txHash: \'369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\',\\n    txUrl:\\n      \'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\',\\n    amount: 0.01,\\n  },\\n  0,\\n  20\\n);\\n\\nexport const Completed: Story<IProps> = (args) => <PaymentRequest {...controlsToProps(args)} />;\\nCompleted.argTypes = argTypes;\\nCompleted.args = {\\n  ...Detailed.args,\\n  status: PaymentStatus.COMPLETE,\\n  transactions: txs,\\n  amount: {\\n    toPay: 0.2,\\n    received: 0.2,\\n  },\\n};\\n\\nexport const WithActions: Story<IProps> = (args) => <PaymentRequest {...controlsToProps(args)} />;\\nWithActions.argTypes = argTypes;\\nWithActions.args = {\\n  ...Detailed.args,\\n  transactions: [\\n    {\\n      txHash: \'369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\',\\n      txUrl:\\n        \'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\',\\n      amount: 0.1,\\n    },\\n    {\\n      txHash: \'519f6c9581ce27e0a59f5f8e427b672087e1f2eb1aead0d66288de62ed3e9647\',\\n      txUrl:\\n        \'https://www.blockchain.com/btc/tx/519f6c9581ce27e0a59f5f8e427b672087e1f2eb1aead0d66288de62ed3e9647\',\\n      amount: 0.1,\\n    },\\n  ],\\n  helpUrl: \'https://github.com/PaulFasola/adoption/blob/master/README.md\',\\n  onCancel: () => {\\n    action(\'onCancel\');\\n    alert(\'User wants to cancel, do something here!\');\\n  },\\n};\\n\\nexport const CustomStrings: Story<IProps> = (args) => {\\n  const locales: Record<string, Partial<ILocalizedStrings>> = {\\n    [\'en-US\']: {\\n      paymentRequest: {\\n        cancel: \'Very cancelling\',\\n        seller: \'Seller\',\\n        deadline: \'Deadline\',\\n        // txStatus is overriden by customStatusText props in this example.\\n        txStatus: {\\n          complete: \'Done o/\',\\n          failed: \'Failed :(\',\\n          pending: \'is pending...\',\\n        },\\n        request: \'Pay {amount} {symbol} to get your item\',\\n        help: \'Wow, help here\',\\n        status: \'Transaction\',\\n        receivedAmount: \'Received:\',\\n        remainingAmount: \'Remaining:\',\\n        transactions: \'{txAmount} transactions\',\\n      },\\n    },\\n  };\\n\\n  return (\\n    <LocalizationProvider customLocales={locales}>\\n      <PaymentRequest {...controlsToProps(args)} />\\n    </LocalizationProvider>\\n  );\\n};\\nCustomStrings.argTypes = argTypes;\\nCustomStrings.args = {\\n  ...WithActions.args,\\n  customStatusText: \'Custom status message\',\\n};\\n\\nexport const Scenario: Story<IProps> = () => {\\n  const [status, setStatus] = useState<PaymentStatus>();\\n\\n  const handleClick = (status: PaymentStatus) => (): void => setStatus(status);\\n\\n  return (\\n    <Fragment>\\n      <div style={{ marginBottom: \'20px\' }}>\\n        <button onClick={handleClick(PaymentStatus.COMPLETE)}>Trigger success</button>\\n        <button onClick={handleClick(PaymentStatus.FAILED)}>Trigger failure</button>\\n      </div>\\n      <PaymentRequest\\n        symbol=\'BTC\'\\n        decimalPlaces={8}\\n        sellerName=\'Such Company LTD\'\\n        logos={{\\n          coin: \'https://upload.wikimedia.org/wikipedia/commons/c/c5/Bitcoin_logo.svg\',\\n          company: companyLogo,\\n        }}\\n        address=\'1BitcoinEaterAddressDontSendf59kuE\'\\n        amount={{ toPay: 0.9, received: 0.2 }}\\n        transactions={[\\n          {\\n            txHash: \'369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\',\\n            txUrl:\\n              \'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\',\\n            amount: 0.1,\\n          },\\n          {\\n            txHash: \'519f6c9581ce27e0a59f5f8e427b672087e1f2eb1aead0d66288de62ed3e9647\',\\n            txUrl:\\n              \'https://www.blockchain.com/btc/tx/519f6c9581ce27e0a59f5f8e427b672087e1f2eb1aead0d66288de62ed3e9647\',\\n            amount: 0.1,\\n          },\\n        ]}\\n        helpUrl=\'https://github.com/PaulFasola/adoption/blob/master/README.md\'\\n        deadline={{\\n          dateLocale: \'en-US\',\\n          datetime: dueDate,\\n          humanized: true,\\n        }}\\n        status={status}\\n      />\\n    </Fragment>\\n  );\\n};\\nScenario.parameters = {\\n  controls: { hideNoControlsWarning: true },\\n};\\n";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {"Basic":{"startLoc":{"col":36,"line":36},"endLoc":{"col":91,"line":36},"startBody":{"col":36,"line":36},"endBody":{"col":91,"line":36}},"Detailed":{"startLoc":{"col":39,"line":51},"endLoc":{"col":1,"line":53},"startBody":{"col":39,"line":51},"endBody":{"col":1,"line":53}},"AnimatedStatus":{"startLoc":{"col":45,"line":72},"endLoc":{"col":1,"line":74},"startBody":{"col":45,"line":72},"endBody":{"col":1,"line":74}},"Transacted":{"startLoc":{"col":41,"line":81},"endLoc":{"col":96,"line":81},"startBody":{"col":41,"line":81},"endBody":{"col":96,"line":81}},"Completed":{"startLoc":{"col":40,"line":102},"endLoc":{"col":95,"line":102},"startBody":{"col":40,"line":102},"endBody":{"col":95,"line":102}},"WithActions":{"startLoc":{"col":42,"line":114},"endLoc":{"col":97,"line":114},"startBody":{"col":42,"line":114},"endBody":{"col":97,"line":114}},"CustomStrings":{"startLoc":{"col":44,"line":139},"endLoc":{"col":1,"line":167},"startBody":{"col":44,"line":139},"endBody":{"col":1,"line":167}},"Scenario":{"startLoc":{"col":39,"line":174},"endLoc":{"col":1,"line":219},"startBody":{"col":39,"line":174},"endBody":{"col":1,"line":219}}};\n    \nimport React, { Fragment, useState } from \'react\';\nimport { ILocalizedStrings } from \'../../providers/localization/ILocalizedStrings\';\nimport { LocalizationProvider } from \'../../providers/localization/localizationProvider\';\nimport { PaymentRequest } from \'../PaymentRequest\';\nimport { PaymentStatus } from \'./enums/paymentStatus\';\nimport { IProps, ITransaction } from \'./interfaces\';\nimport { Meta, Story } from \'@storybook/react\';\nimport { action } from \'@storybook/addon-actions\';\n\nimport companyLogo from \'../../assets/fictiveCompany.png\';\n\nexport default {parameters: {"storySource":{"source":"\\n    \\n    // @ts-nocheck\\n    // @ts-ignore\\n    var __STORY__ = \\"import React, { Fragment, useState } from \'react\';\\\\nimport { ILocalizedStrings } from \'../../providers/localization/ILocalizedStrings\';\\\\nimport { LocalizationProvider } from \'../../providers/localization/localizationProvider\';\\\\nimport { PaymentRequest } from \'../PaymentRequest\';\\\\nimport { PaymentStatus } from \'./enums/paymentStatus\';\\\\nimport { IProps, ITransaction } from \'./interfaces\';\\\\nimport { Meta, Story } from \'@storybook/react\';\\\\nimport { action } from \'@storybook/addon-actions\';\\\\n\\\\nimport companyLogo from \'../../assets/fictiveCompany.png\';\\\\n\\\\nexport default {\\\\n  title: \'Components/PaymentRequest\',\\\\n} as Meta;\\\\n\\\\nconst argTypes = {\\\\n  status: {\\\\n    control: {\\\\n      type: \'select\',\\\\n      options: Object.keys(PaymentStatus),\\\\n    },\\\\n  },\\\\n};\\\\n\\\\nconst controlsToProps = (args: IProps) => {\\\\n  if (args.status && PaymentStatus[args.status]) {\\\\n    args.status = PaymentStatus[args.status];\\\\n  }\\\\n\\\\n  return args;\\\\n};\\\\n\\\\nconst dueDate = new Date();\\\\ndueDate.setTime(dueDate.setMinutes(dueDate.getMinutes() + 15));\\\\n\\\\nexport const Basic: Story<IProps> = (args) => <PaymentRequest {...controlsToProps(args)} />;\\\\nBasic.argTypes = argTypes;\\\\nBasic.args = {\\\\n  symbol: \'BTC\',\\\\n  decimalPlaces: 8,\\\\n  logos: {\\\\n    coin: \'https://upload.wikimedia.org/wikipedia/commons/c/c5/Bitcoin_logo.svg\',\\\\n  },\\\\n  address: \'1BitcoinEaterAddressDontSendf59kuE\',\\\\n  amount: {\\\\n    toPay: 0.9,\\\\n  },\\\\n  noShadow: false,\\\\n};\\\\n\\\\nexport const Detailed: Story<IProps> = (args) => (\\\\n  <PaymentRequest status={PaymentStatus.PENDING} {...controlsToProps(args)} />\\\\n);\\\\nDetailed.argTypes = argTypes;\\\\nDetailed.args = {\\\\n  ...Basic.args,\\\\n  showQRCode: true,\\\\n  status: PaymentStatus.PENDING,\\\\n  sellerName: \'Such Company LTD\',\\\\n  logos: {\\\\n    coin: \'https://upload.wikimedia.org/wikipedia/commons/c/c5/Bitcoin_logo.svg\',\\\\n    company: companyLogo,\\\\n  },\\\\n  amount: { toPay: 0.9, received: 0 },\\\\n  deadline: {\\\\n    dateLocale: \'en-US\',\\\\n    datetime: dueDate,\\\\n    humanized: true,\\\\n  },\\\\n};\\\\n\\\\nexport const AnimatedStatus: Story<IProps> = (args) => (\\\\n  <PaymentRequest waitAnimation {...controlsToProps(args)} />\\\\n);\\\\nAnimatedStatus.argTypes = argTypes;\\\\nAnimatedStatus.args = {\\\\n  ...Detailed.args,\\\\n  waitAnimation: true,\\\\n};\\\\n\\\\nexport const Transacted: Story<IProps> = (args) => <PaymentRequest {...controlsToProps(args)} />;\\\\nTransacted.argTypes = argTypes;\\\\nTransacted.args = {\\\\n  ...Detailed.args,\\\\n  amount: {\\\\n    toPay: 0.9,\\\\n    received: 0.2,\\\\n  },\\\\n};\\\\n\\\\nconst txs = new Array<ITransaction>(30).fill(\\\\n  {\\\\n    txHash: \'369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\',\\\\n    txUrl:\\\\n      \'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\',\\\\n    amount: 0.01,\\\\n  },\\\\n  0,\\\\n  20\\\\n);\\\\n\\\\nexport const Completed: Story<IProps> = (args) => <PaymentRequest {...controlsToProps(args)} />;\\\\nCompleted.argTypes = argTypes;\\\\nCompleted.args = {\\\\n  ...Detailed.args,\\\\n  status: PaymentStatus.COMPLETE,\\\\n  transactions: txs,\\\\n  amount: {\\\\n    toPay: 0.2,\\\\n    received: 0.2,\\\\n  },\\\\n};\\\\n\\\\nexport const WithActions: Story<IProps> = (args) => <PaymentRequest {...controlsToProps(args)} />;\\\\nWithActions.argTypes = argTypes;\\\\nWithActions.args = {\\\\n  ...Detailed.args,\\\\n  transactions: [\\\\n    {\\\\n      txHash: \'369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\',\\\\n      txUrl:\\\\n        \'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\',\\\\n      amount: 0.1,\\\\n    },\\\\n    {\\\\n      txHash: \'519f6c9581ce27e0a59f5f8e427b672087e1f2eb1aead0d66288de62ed3e9647\',\\\\n      txUrl:\\\\n        \'https://www.blockchain.com/btc/tx/519f6c9581ce27e0a59f5f8e427b672087e1f2eb1aead0d66288de62ed3e9647\',\\\\n      amount: 0.1,\\\\n    },\\\\n  ],\\\\n  helpUrl: \'https://github.com/PaulFasola/adoption/blob/master/README.md\',\\\\n  onCancel: () => {\\\\n    action(\'onCancel\');\\\\n    alert(\'User wants to cancel, do something here!\');\\\\n  },\\\\n};\\\\n\\\\nexport const CustomStrings: Story<IProps> = (args) => {\\\\n  const locales: Record<string, Partial<ILocalizedStrings>> = {\\\\n    [\'en-US\']: {\\\\n      paymentRequest: {\\\\n        cancel: \'Very cancelling\',\\\\n        seller: \'Seller\',\\\\n        deadline: \'Deadline\',\\\\n        // txStatus is overriden by customStatusText props in this example.\\\\n        txStatus: {\\\\n          complete: \'Done o/\',\\\\n          failed: \'Failed :(\',\\\\n          pending: \'is pending...\',\\\\n        },\\\\n        request: \'Pay {amount} {symbol} to get your item\',\\\\n        help: \'Wow, help here\',\\\\n        status: \'Transaction\',\\\\n        receivedAmount: \'Received:\',\\\\n        remainingAmount: \'Remaining:\',\\\\n        transactions: \'{txAmount} transactions\',\\\\n      },\\\\n    },\\\\n  };\\\\n\\\\n  return (\\\\n    <LocalizationProvider customLocales={locales}>\\\\n      <PaymentRequest {...controlsToProps(args)} />\\\\n    </LocalizationProvider>\\\\n  );\\\\n};\\\\nCustomStrings.argTypes = argTypes;\\\\nCustomStrings.args = {\\\\n  ...WithActions.args,\\\\n  customStatusText: \'Custom status message\',\\\\n};\\\\n\\\\nexport const Scenario: Story<IProps> = () => {\\\\n  const [status, setStatus] = useState<PaymentStatus>();\\\\n\\\\n  const handleClick = (status: PaymentStatus) => (): void => setStatus(status);\\\\n\\\\n  return (\\\\n    <Fragment>\\\\n      <div style={{ marginBottom: \'20px\' }}>\\\\n        <button onClick={handleClick(PaymentStatus.COMPLETE)}>Trigger success</button>\\\\n        <button onClick={handleClick(PaymentStatus.FAILED)}>Trigger failure</button>\\\\n      </div>\\\\n      <PaymentRequest\\\\n        symbol=\'BTC\'\\\\n        decimalPlaces={8}\\\\n        sellerName=\'Such Company LTD\'\\\\n        logos={{\\\\n          coin: \'https://upload.wikimedia.org/wikipedia/commons/c/c5/Bitcoin_logo.svg\',\\\\n          company: companyLogo,\\\\n        }}\\\\n        address=\'1BitcoinEaterAddressDontSendf59kuE\'\\\\n        amount={{ toPay: 0.9, received: 0.2 }}\\\\n        transactions={[\\\\n          {\\\\n            txHash: \'369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\',\\\\n            txUrl:\\\\n              \'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\',\\\\n            amount: 0.1,\\\\n          },\\\\n          {\\\\n            txHash: \'519f6c9581ce27e0a59f5f8e427b672087e1f2eb1aead0d66288de62ed3e9647\',\\\\n            txUrl:\\\\n              \'https://www.blockchain.com/btc/tx/519f6c9581ce27e0a59f5f8e427b672087e1f2eb1aead0d66288de62ed3e9647\',\\\\n            amount: 0.1,\\\\n          },\\\\n        ]}\\\\n        helpUrl=\'https://github.com/PaulFasola/adoption/blob/master/README.md\'\\\\n        deadline={{\\\\n          dateLocale: \'en-US\',\\\\n          datetime: dueDate,\\\\n          humanized: true,\\\\n        }}\\\\n        status={status}\\\\n      />\\\\n    </Fragment>\\\\n  );\\\\n};\\\\nScenario.parameters = {\\\\n  controls: { hideNoControlsWarning: true },\\\\n};\\\\n\\";\\n    // @ts-ignore\\n    var __LOCATIONS_MAP__ = {\\"Basic\\":{\\"startLoc\\":{\\"col\\":36,\\"line\\":36},\\"endLoc\\":{\\"col\\":91,\\"line\\":36},\\"startBody\\":{\\"col\\":36,\\"line\\":36},\\"endBody\\":{\\"col\\":91,\\"line\\":36}},\\"Detailed\\":{\\"startLoc\\":{\\"col\\":39,\\"line\\":51},\\"endLoc\\":{\\"col\\":1,\\"line\\":53},\\"startBody\\":{\\"col\\":39,\\"line\\":51},\\"endBody\\":{\\"col\\":1,\\"line\\":53}},\\"AnimatedStatus\\":{\\"startLoc\\":{\\"col\\":45,\\"line\\":72},\\"endLoc\\":{\\"col\\":1,\\"line\\":74},\\"startBody\\":{\\"col\\":45,\\"line\\":72},\\"endBody\\":{\\"col\\":1,\\"line\\":74}},\\"Transacted\\":{\\"startLoc\\":{\\"col\\":41,\\"line\\":81},\\"endLoc\\":{\\"col\\":96,\\"line\\":81},\\"startBody\\":{\\"col\\":41,\\"line\\":81},\\"endBody\\":{\\"col\\":96,\\"line\\":81}},\\"Completed\\":{\\"startLoc\\":{\\"col\\":40,\\"line\\":102},\\"endLoc\\":{\\"col\\":95,\\"line\\":102},\\"startBody\\":{\\"col\\":40,\\"line\\":102},\\"endBody\\":{\\"col\\":95,\\"line\\":102}},\\"WithActions\\":{\\"startLoc\\":{\\"col\\":42,\\"line\\":114},\\"endLoc\\":{\\"col\\":97,\\"line\\":114},\\"startBody\\":{\\"col\\":42,\\"line\\":114},\\"endBody\\":{\\"col\\":97,\\"line\\":114}},\\"CustomStrings\\":{\\"startLoc\\":{\\"col\\":44,\\"line\\":139},\\"endLoc\\":{\\"col\\":1,\\"line\\":167},\\"startBody\\":{\\"col\\":44,\\"line\\":139},\\"endBody\\":{\\"col\\":1,\\"line\\":167}},\\"Scenario\\":{\\"startLoc\\":{\\"col\\":39,\\"line\\":174},\\"endLoc\\":{\\"col\\":1,\\"line\\":219},\\"startBody\\":{\\"col\\":39,\\"line\\":174},\\"endBody\\":{\\"col\\":1,\\"line\\":219}}};\\n    \\nimport React, { Fragment, useState } from \'react\';\\nimport { ILocalizedStrings } from \'../../providers/localization/ILocalizedStrings\';\\nimport { LocalizationProvider } from \'../../providers/localization/localizationProvider\';\\nimport { PaymentRequest } from \'../PaymentRequest\';\\nimport { PaymentStatus } from \'./enums/paymentStatus\';\\nimport { IProps, ITransaction } from \'./interfaces\';\\nimport { Meta, Story } from \'@storybook/react\';\\nimport { action } from \'@storybook/addon-actions\';\\n\\nimport companyLogo from \'../../assets/fictiveCompany.png\';\\n\\nexport default {parameters: {\\"storySource\\":{\\"source\\":\\"import React, { Fragment, useState } from \'react\';\\\\nimport { ILocalizedStrings } from \'../../providers/localization/ILocalizedStrings\';\\\\nimport { LocalizationProvider } from \'../../providers/localization/localizationProvider\';\\\\nimport { PaymentRequest } from \'../PaymentRequest\';\\\\nimport { PaymentStatus } from \'./enums/paymentStatus\';\\\\nimport { IProps, ITransaction } from \'./interfaces\';\\\\nimport { Meta, Story } from \'@storybook/react\';\\\\nimport { action } from \'@storybook/addon-actions\';\\\\n\\\\nimport companyLogo from \'../../assets/fictiveCompany.png\';\\\\n\\\\nexport default {\\\\n  title: \'Components/PaymentRequest\',\\\\n} as Meta;\\\\n\\\\nconst argTypes = {\\\\n  status: {\\\\n    control: {\\\\n      type: \'select\',\\\\n      options: Object.keys(PaymentStatus),\\\\n    },\\\\n  },\\\\n};\\\\n\\\\nconst controlsToProps = (args: IProps) => {\\\\n  if (args.status && PaymentStatus[args.status]) {\\\\n    args.status = PaymentStatus[args.status];\\\\n  }\\\\n\\\\n  return args;\\\\n};\\\\n\\\\nconst dueDate = new Date();\\\\ndueDate.setTime(dueDate.setMinutes(dueDate.getMinutes() + 15));\\\\n\\\\nexport const Basic: Story<IProps> = (args) => <PaymentRequest {...controlsToProps(args)} />;\\\\nBasic.argTypes = argTypes;\\\\nBasic.args = {\\\\n  symbol: \'BTC\',\\\\n  decimalPlaces: 8,\\\\n  logos: {\\\\n    coin: \'https://upload.wikimedia.org/wikipedia/commons/c/c5/Bitcoin_logo.svg\',\\\\n  },\\\\n  address: \'1BitcoinEaterAddressDontSendf59kuE\',\\\\n  amount: {\\\\n    toPay: 0.9,\\\\n  },\\\\n  noShadow: false,\\\\n};\\\\n\\\\nexport const Detailed: Story<IProps> = (args) => (\\\\n  <PaymentRequest status={PaymentStatus.PENDING} {...controlsToProps(args)} />\\\\n);\\\\nDetailed.argTypes = argTypes;\\\\nDetailed.args = {\\\\n  ...Basic.args,\\\\n  showQRCode: true,\\\\n  status: PaymentStatus.PENDING,\\\\n  sellerName: \'Such Company LTD\',\\\\n  logos: {\\\\n    coin: \'https://upload.wikimedia.org/wikipedia/commons/c/c5/Bitcoin_logo.svg\',\\\\n    company: companyLogo,\\\\n  },\\\\n  amount: { toPay: 0.9, received: 0 },\\\\n  deadline: {\\\\n    dateLocale: \'en-US\',\\\\n    datetime: dueDate,\\\\n    humanized: true,\\\\n  },\\\\n};\\\\n\\\\nexport const AnimatedStatus: Story<IProps> = (args) => (\\\\n  <PaymentRequest waitAnimation {...controlsToProps(args)} />\\\\n);\\\\nAnimatedStatus.argTypes = argTypes;\\\\nAnimatedStatus.args = {\\\\n  ...Detailed.args,\\\\n  waitAnimation: true,\\\\n};\\\\n\\\\nexport const Transacted: Story<IProps> = (args) => <PaymentRequest {...controlsToProps(args)} />;\\\\nTransacted.argTypes = argTypes;\\\\nTransacted.args = {\\\\n  ...Detailed.args,\\\\n  amount: {\\\\n    toPay: 0.9,\\\\n    received: 0.2,\\\\n  },\\\\n};\\\\n\\\\nconst txs = new Array<ITransaction>(30).fill(\\\\n  {\\\\n    txHash: \'369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\',\\\\n    txUrl:\\\\n      \'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\',\\\\n    amount: 0.01,\\\\n  },\\\\n  0,\\\\n  20\\\\n);\\\\n\\\\nexport const Completed: Story<IProps> = (args) => <PaymentRequest {...controlsToProps(args)} />;\\\\nCompleted.argTypes = argTypes;\\\\nCompleted.args = {\\\\n  ...Detailed.args,\\\\n  status: PaymentStatus.COMPLETE,\\\\n  transactions: txs,\\\\n  amount: {\\\\n    toPay: 0.2,\\\\n    received: 0.2,\\\\n  },\\\\n};\\\\n\\\\nexport const WithActions: Story<IProps> = (args) => <PaymentRequest {...controlsToProps(args)} />;\\\\nWithActions.argTypes = argTypes;\\\\nWithActions.args = {\\\\n  ...Detailed.args,\\\\n  transactions: [\\\\n    {\\\\n      txHash: \'369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\',\\\\n      txUrl:\\\\n        \'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\',\\\\n      amount: 0.1,\\\\n    },\\\\n    {\\\\n      txHash: \'519f6c9581ce27e0a59f5f8e427b672087e1f2eb1aead0d66288de62ed3e9647\',\\\\n      txUrl:\\\\n        \'https://www.blockchain.com/btc/tx/519f6c9581ce27e0a59f5f8e427b672087e1f2eb1aead0d66288de62ed3e9647\',\\\\n      amount: 0.1,\\\\n    },\\\\n  ],\\\\n  helpUrl: \'https://github.com/PaulFasola/adoption/blob/master/README.md\',\\\\n  onCancel: () => {\\\\n    action(\'onCancel\');\\\\n    alert(\'User wants to cancel, do something here!\');\\\\n  },\\\\n};\\\\n\\\\nexport const CustomStrings: Story<IProps> = (args) => {\\\\n  const locales: Record<string, Partial<ILocalizedStrings>> = {\\\\n    [\'en-US\']: {\\\\n      paymentRequest: {\\\\n        cancel: \'Very cancelling\',\\\\n        seller: \'Seller\',\\\\n        deadline: \'Deadline\',\\\\n        // txStatus is overriden by customStatusText props in this example.\\\\n        txStatus: {\\\\n          complete: \'Done o/\',\\\\n          failed: \'Failed :(\',\\\\n          pending: \'is pending...\',\\\\n        },\\\\n        request: \'Pay {amount} {symbol} to get your item\',\\\\n        help: \'Wow, help here\',\\\\n        status: \'Transaction\',\\\\n        receivedAmount: \'Received:\',\\\\n        remainingAmount: \'Remaining:\',\\\\n        transactions: \'{txAmount} transactions\',\\\\n      },\\\\n    },\\\\n  };\\\\n\\\\n  return (\\\\n    <LocalizationProvider customLocales={locales}>\\\\n      <PaymentRequest {...controlsToProps(args)} />\\\\n    </LocalizationProvider>\\\\n  );\\\\n};\\\\nCustomStrings.argTypes = argTypes;\\\\nCustomStrings.args = {\\\\n  ...WithActions.args,\\\\n  customStatusText: \'Custom status message\',\\\\n};\\\\n\\\\nexport const Scenario: Story<IProps> = () => {\\\\n  const [status, setStatus] = useState<PaymentStatus>();\\\\n\\\\n  const handleClick = (status: PaymentStatus) => (): void => setStatus(status);\\\\n\\\\n  return (\\\\n    <Fragment>\\\\n      <div style={{ marginBottom: \'20px\' }}>\\\\n        <button onClick={handleClick(PaymentStatus.COMPLETE)}>Trigger success</button>\\\\n        <button onClick={handleClick(PaymentStatus.FAILED)}>Trigger failure</button>\\\\n      </div>\\\\n      <PaymentRequest\\\\n        symbol=\'BTC\'\\\\n        decimalPlaces={8}\\\\n        sellerName=\'Such Company LTD\'\\\\n        logos={{\\\\n          coin: \'https://upload.wikimedia.org/wikipedia/commons/c/c5/Bitcoin_logo.svg\',\\\\n          company: companyLogo,\\\\n        }}\\\\n        address=\'1BitcoinEaterAddressDontSendf59kuE\'\\\\n        amount={{ toPay: 0.9, received: 0.2 }}\\\\n        transactions={[\\\\n          {\\\\n            txHash: \'369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\',\\\\n            txUrl:\\\\n              \'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\',\\\\n            amount: 0.1,\\\\n          },\\\\n          {\\\\n            txHash: \'519f6c9581ce27e0a59f5f8e427b672087e1f2eb1aead0d66288de62ed3e9647\',\\\\n            txUrl:\\\\n              \'https://www.blockchain.com/btc/tx/519f6c9581ce27e0a59f5f8e427b672087e1f2eb1aead0d66288de62ed3e9647\',\\\\n            amount: 0.1,\\\\n          },\\\\n        ]}\\\\n        helpUrl=\'https://github.com/PaulFasola/adoption/blob/master/README.md\'\\\\n        deadline={{\\\\n          dateLocale: \'en-US\',\\\\n          datetime: dueDate,\\\\n          humanized: true,\\\\n        }}\\\\n        status={status}\\\\n      />\\\\n    </Fragment>\\\\n  );\\\\n};\\\\nScenario.parameters = {\\\\n  controls: { hideNoControlsWarning: true },\\\\n};\\\\n\\",\\"locationsMap\\":{\\"basic\\":{\\"startLoc\\":{\\"col\\":36,\\"line\\":36},\\"endLoc\\":{\\"col\\":91,\\"line\\":36},\\"startBody\\":{\\"col\\":36,\\"line\\":36},\\"endBody\\":{\\"col\\":91,\\"line\\":36}},\\"detailed\\":{\\"startLoc\\":{\\"col\\":39,\\"line\\":51},\\"endLoc\\":{\\"col\\":1,\\"line\\":53},\\"startBody\\":{\\"col\\":39,\\"line\\":51},\\"endBody\\":{\\"col\\":1,\\"line\\":53}},\\"animated-status\\":{\\"startLoc\\":{\\"col\\":45,\\"line\\":72},\\"endLoc\\":{\\"col\\":1,\\"line\\":74},\\"startBody\\":{\\"col\\":45,\\"line\\":72},\\"endBody\\":{\\"col\\":1,\\"line\\":74}},\\"transacted\\":{\\"startLoc\\":{\\"col\\":41,\\"line\\":81},\\"endLoc\\":{\\"col\\":96,\\"line\\":81},\\"startBody\\":{\\"col\\":41,\\"line\\":81},\\"endBody\\":{\\"col\\":96,\\"line\\":81}},\\"completed\\":{\\"startLoc\\":{\\"col\\":40,\\"line\\":102},\\"endLoc\\":{\\"col\\":95,\\"line\\":102},\\"startBody\\":{\\"col\\":40,\\"line\\":102},\\"endBody\\":{\\"col\\":95,\\"line\\":102}},\\"with-actions\\":{\\"startLoc\\":{\\"col\\":42,\\"line\\":114},\\"endLoc\\":{\\"col\\":97,\\"line\\":114},\\"startBody\\":{\\"col\\":42,\\"line\\":114},\\"endBody\\":{\\"col\\":97,\\"line\\":114}},\\"custom-strings\\":{\\"startLoc\\":{\\"col\\":44,\\"line\\":139},\\"endLoc\\":{\\"col\\":1,\\"line\\":167},\\"startBody\\":{\\"col\\":44,\\"line\\":139},\\"endBody\\":{\\"col\\":1,\\"line\\":167}},\\"scenario\\":{\\"startLoc\\":{\\"col\\":39,\\"line\\":174},\\"endLoc\\":{\\"col\\":1,\\"line\\":219},\\"startBody\\":{\\"col\\":39,\\"line\\":174},\\"endBody\\":{\\"col\\":1,\\"line\\":219}}}},},\\n  title: \'Components/PaymentRequest\',\\n} as Meta;\\n\\nconst argTypes = {\\n  status: {\\n    control: {\\n      type: \'select\',\\n      options: Object.keys(PaymentStatus),\\n    },\\n  },\\n};\\n\\nconst controlsToProps = (args: IProps) => {\\n  if (args.status && PaymentStatus[args.status]) {\\n    args.status = PaymentStatus[args.status];\\n  }\\n\\n  return args;\\n};\\n\\nconst dueDate = new Date();\\ndueDate.setTime(dueDate.setMinutes(dueDate.getMinutes() + 15));\\n\\nexport const Basic: Story<IProps> = (args) => <PaymentRequest {...controlsToProps(args)} />;;\\nBasic.argTypes = argTypes;\\nBasic.args = {\\n  symbol: \'BTC\',\\n  decimalPlaces: 8,\\n  logos: {\\n    coin: \'https://upload.wikimedia.org/wikipedia/commons/c/c5/Bitcoin_logo.svg\',\\n  },\\n  address: \'1BitcoinEaterAddressDontSendf59kuE\',\\n  amount: {\\n    toPay: 0.9,\\n  },\\n  noShadow: false,\\n};\\n\\nexport const Detailed: Story<IProps> = (args) => (\\n  <PaymentRequest status={PaymentStatus.PENDING} {...controlsToProps(args)} />\\n);;\\nDetailed.argTypes = argTypes;\\nDetailed.args = {\\n  ...Basic.args,\\n  showQRCode: true,\\n  status: PaymentStatus.PENDING,\\n  sellerName: \'Such Company LTD\',\\n  logos: {\\n    coin: \'https://upload.wikimedia.org/wikipedia/commons/c/c5/Bitcoin_logo.svg\',\\n    company: companyLogo,\\n  },\\n  amount: { toPay: 0.9, received: 0 },\\n  deadline: {\\n    dateLocale: \'en-US\',\\n    datetime: dueDate,\\n    humanized: true,\\n  },\\n};\\n\\nexport const AnimatedStatus: Story<IProps> = (args) => (\\n  <PaymentRequest waitAnimation {...controlsToProps(args)} />\\n);;\\nAnimatedStatus.argTypes = argTypes;\\nAnimatedStatus.args = {\\n  ...Detailed.args,\\n  waitAnimation: true,\\n};\\n\\nexport const Transacted: Story<IProps> = (args) => <PaymentRequest {...controlsToProps(args)} />;;\\nTransacted.argTypes = argTypes;\\nTransacted.args = {\\n  ...Detailed.args,\\n  amount: {\\n    toPay: 0.9,\\n    received: 0.2,\\n  },\\n};\\n\\nconst txs = new Array<ITransaction>(30).fill(\\n  {\\n    txHash: \'369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\',\\n    txUrl:\\n      \'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\',\\n    amount: 0.01,\\n  },\\n  0,\\n  20\\n);\\n\\nexport const Completed: Story<IProps> = (args) => <PaymentRequest {...controlsToProps(args)} />;;\\nCompleted.argTypes = argTypes;\\nCompleted.args = {\\n  ...Detailed.args,\\n  status: PaymentStatus.COMPLETE,\\n  transactions: txs,\\n  amount: {\\n    toPay: 0.2,\\n    received: 0.2,\\n  },\\n};\\n\\nexport const WithActions: Story<IProps> = (args) => <PaymentRequest {...controlsToProps(args)} />;;\\nWithActions.argTypes = argTypes;\\nWithActions.args = {\\n  ...Detailed.args,\\n  transactions: [\\n    {\\n      txHash: \'369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\',\\n      txUrl:\\n        \'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\',\\n      amount: 0.1,\\n    },\\n    {\\n      txHash: \'519f6c9581ce27e0a59f5f8e427b672087e1f2eb1aead0d66288de62ed3e9647\',\\n      txUrl:\\n        \'https://www.blockchain.com/btc/tx/519f6c9581ce27e0a59f5f8e427b672087e1f2eb1aead0d66288de62ed3e9647\',\\n      amount: 0.1,\\n    },\\n  ],\\n  helpUrl: \'https://github.com/PaulFasola/adoption/blob/master/README.md\',\\n  onCancel: () => {\\n    action(\'onCancel\');\\n    alert(\'User wants to cancel, do something here!\');\\n  },\\n};\\n\\nexport const CustomStrings: Story<IProps> = (args) => {\\n  const locales: Record<string, Partial<ILocalizedStrings>> = {\\n    [\'en-US\']: {\\n      paymentRequest: {\\n        cancel: \'Very cancelling\',\\n        seller: \'Seller\',\\n        deadline: \'Deadline\',\\n        // txStatus is overriden by customStatusText props in this example.\\n        txStatus: {\\n          complete: \'Done o/\',\\n          failed: \'Failed :(\',\\n          pending: \'is pending...\',\\n        },\\n        request: \'Pay {amount} {symbol} to get your item\',\\n        help: \'Wow, help here\',\\n        status: \'Transaction\',\\n        receivedAmount: \'Received:\',\\n        remainingAmount: \'Remaining:\',\\n        transactions: \'{txAmount} transactions\',\\n      },\\n    },\\n  };\\n\\n  return (\\n    <LocalizationProvider customLocales={locales}>\\n      <PaymentRequest {...controlsToProps(args)} />\\n    </LocalizationProvider>\\n  );\\n};;\\nCustomStrings.argTypes = argTypes;\\nCustomStrings.args = {\\n  ...WithActions.args,\\n  customStatusText: \'Custom status message\',\\n};\\n\\nexport const Scenario: Story<IProps> = () => {\\n  const [status, setStatus] = useState<PaymentStatus>();\\n\\n  const handleClick = (status: PaymentStatus) => (): void => setStatus(status);\\n\\n  return (\\n    <Fragment>\\n      <div style={{ marginBottom: \'20px\' }}>\\n        <button onClick={handleClick(PaymentStatus.COMPLETE)}>Trigger success</button>\\n        <button onClick={handleClick(PaymentStatus.FAILED)}>Trigger failure</button>\\n      </div>\\n      <PaymentRequest\\n        symbol=\'BTC\'\\n        decimalPlaces={8}\\n        sellerName=\'Such Company LTD\'\\n        logos={{\\n          coin: \'https://upload.wikimedia.org/wikipedia/commons/c/c5/Bitcoin_logo.svg\',\\n          company: companyLogo,\\n        }}\\n        address=\'1BitcoinEaterAddressDontSendf59kuE\'\\n        amount={{ toPay: 0.9, received: 0.2 }}\\n        transactions={[\\n          {\\n            txHash: \'369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\',\\n            txUrl:\\n              \'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\',\\n            amount: 0.1,\\n          },\\n          {\\n            txHash: \'519f6c9581ce27e0a59f5f8e427b672087e1f2eb1aead0d66288de62ed3e9647\',\\n            txUrl:\\n              \'https://www.blockchain.com/btc/tx/519f6c9581ce27e0a59f5f8e427b672087e1f2eb1aead0d66288de62ed3e9647\',\\n            amount: 0.1,\\n          },\\n        ]}\\n        helpUrl=\'https://github.com/PaulFasola/adoption/blob/master/README.md\'\\n        deadline={{\\n          dateLocale: \'en-US\',\\n          datetime: dueDate,\\n          humanized: true,\\n        }}\\n        status={status}\\n      />\\n    </Fragment>\\n  );\\n};\\nScenario.parameters = {\\n  controls: { hideNoControlsWarning: true },\\n};\\n","locationsMap":{"basic":{"startLoc":{"col":36,"line":44},"endLoc":{"col":91,"line":44},"startBody":{"col":36,"line":44},"endBody":{"col":91,"line":44}},"detailed":{"startLoc":{"col":39,"line":59},"endLoc":{"col":1,"line":61},"startBody":{"col":39,"line":59},"endBody":{"col":1,"line":61}},"animated-status":{"startLoc":{"col":45,"line":80},"endLoc":{"col":1,"line":82},"startBody":{"col":45,"line":80},"endBody":{"col":1,"line":82}},"transacted":{"startLoc":{"col":41,"line":89},"endLoc":{"col":96,"line":89},"startBody":{"col":41,"line":89},"endBody":{"col":96,"line":89}},"completed":{"startLoc":{"col":40,"line":110},"endLoc":{"col":95,"line":110},"startBody":{"col":40,"line":110},"endBody":{"col":95,"line":110}},"with-actions":{"startLoc":{"col":42,"line":122},"endLoc":{"col":97,"line":122},"startBody":{"col":42,"line":122},"endBody":{"col":97,"line":122}},"custom-strings":{"startLoc":{"col":44,"line":147},"endLoc":{"col":1,"line":175},"startBody":{"col":44,"line":147},"endBody":{"col":1,"line":175}},"scenario":{"startLoc":{"col":39,"line":182},"endLoc":{"col":1,"line":227},"startBody":{"col":39,"line":182},"endBody":{"col":1,"line":227}}}},"storySource":{"source":"import React, { Fragment, useState } from \'react\';\\nimport { ILocalizedStrings } from \'../../providers/localization/ILocalizedStrings\';\\nimport { LocalizationProvider } from \'../../providers/localization/localizationProvider\';\\nimport { PaymentRequest } from \'../PaymentRequest\';\\nimport { PaymentStatus } from \'./enums/paymentStatus\';\\nimport { IProps, ITransaction } from \'./interfaces\';\\nimport { Meta, Story } from \'@storybook/react\';\\nimport { action } from \'@storybook/addon-actions\';\\n\\nimport companyLogo from \'../../assets/fictiveCompany.png\';\\n\\nexport default {\\n  title: \'Components/PaymentRequest\',\\n} as Meta;\\n\\nconst argTypes = {\\n  status: {\\n    control: {\\n      type: \'select\',\\n      options: Object.keys(PaymentStatus),\\n    },\\n  },\\n};\\n\\nconst controlsToProps = (args: IProps) => {\\n  if (args.status && PaymentStatus[args.status]) {\\n    args.status = PaymentStatus[args.status];\\n  }\\n\\n  return args;\\n};\\n\\nconst dueDate = new Date();\\ndueDate.setTime(dueDate.setMinutes(dueDate.getMinutes() + 15));\\n\\nexport const Basic: Story<IProps> = (args) => <PaymentRequest {...controlsToProps(args)} />;\\nBasic.argTypes = argTypes;\\nBasic.args = {\\n  symbol: \'BTC\',\\n  decimalPlaces: 8,\\n  logos: {\\n    coin: \'https://upload.wikimedia.org/wikipedia/commons/c/c5/Bitcoin_logo.svg\',\\n  },\\n  address: \'1BitcoinEaterAddressDontSendf59kuE\',\\n  amount: {\\n    toPay: 0.9,\\n  },\\n  noShadow: false,\\n};\\n\\nexport const Detailed: Story<IProps> = (args) => (\\n  <PaymentRequest status={PaymentStatus.PENDING} {...controlsToProps(args)} />\\n);\\nDetailed.argTypes = argTypes;\\nDetailed.args = {\\n  ...Basic.args,\\n  showQRCode: true,\\n  status: PaymentStatus.PENDING,\\n  sellerName: \'Such Company LTD\',\\n  logos: {\\n    coin: \'https://upload.wikimedia.org/wikipedia/commons/c/c5/Bitcoin_logo.svg\',\\n    company: companyLogo,\\n  },\\n  amount: { toPay: 0.9, received: 0 },\\n  deadline: {\\n    dateLocale: \'en-US\',\\n    datetime: dueDate,\\n    humanized: true,\\n  },\\n};\\n\\nexport const AnimatedStatus: Story<IProps> = (args) => (\\n  <PaymentRequest waitAnimation {...controlsToProps(args)} />\\n);\\nAnimatedStatus.argTypes = argTypes;\\nAnimatedStatus.args = {\\n  ...Detailed.args,\\n  waitAnimation: true,\\n};\\n\\nexport const Transacted: Story<IProps> = (args) => <PaymentRequest {...controlsToProps(args)} />;\\nTransacted.argTypes = argTypes;\\nTransacted.args = {\\n  ...Detailed.args,\\n  amount: {\\n    toPay: 0.9,\\n    received: 0.2,\\n  },\\n};\\n\\nconst txs = new Array<ITransaction>(30).fill(\\n  {\\n    txHash: \'369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\',\\n    txUrl:\\n      \'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\',\\n    amount: 0.01,\\n  },\\n  0,\\n  20\\n);\\n\\nexport const Completed: Story<IProps> = (args) => <PaymentRequest {...controlsToProps(args)} />;\\nCompleted.argTypes = argTypes;\\nCompleted.args = {\\n  ...Detailed.args,\\n  status: PaymentStatus.COMPLETE,\\n  transactions: txs,\\n  amount: {\\n    toPay: 0.2,\\n    received: 0.2,\\n  },\\n};\\n\\nexport const WithActions: Story<IProps> = (args) => <PaymentRequest {...controlsToProps(args)} />;\\nWithActions.argTypes = argTypes;\\nWithActions.args = {\\n  ...Detailed.args,\\n  transactions: [\\n    {\\n      txHash: \'369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\',\\n      txUrl:\\n        \'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\',\\n      amount: 0.1,\\n    },\\n    {\\n      txHash: \'519f6c9581ce27e0a59f5f8e427b672087e1f2eb1aead0d66288de62ed3e9647\',\\n      txUrl:\\n        \'https://www.blockchain.com/btc/tx/519f6c9581ce27e0a59f5f8e427b672087e1f2eb1aead0d66288de62ed3e9647\',\\n      amount: 0.1,\\n    },\\n  ],\\n  helpUrl: \'https://github.com/PaulFasola/adoption/blob/master/README.md\',\\n  onCancel: () => {\\n    action(\'onCancel\');\\n    alert(\'User wants to cancel, do something here!\');\\n  },\\n};\\n\\nexport const CustomStrings: Story<IProps> = (args) => {\\n  const locales: Record<string, Partial<ILocalizedStrings>> = {\\n    [\'en-US\']: {\\n      paymentRequest: {\\n        cancel: \'Very cancelling\',\\n        seller: \'Seller\',\\n        deadline: \'Deadline\',\\n        // txStatus is overriden by customStatusText props in this example.\\n        txStatus: {\\n          complete: \'Done o/\',\\n          failed: \'Failed :(\',\\n          pending: \'is pending...\',\\n        },\\n        request: \'Pay {amount} {symbol} to get your item\',\\n        help: \'Wow, help here\',\\n        status: \'Transaction\',\\n        receivedAmount: \'Received:\',\\n        remainingAmount: \'Remaining:\',\\n        transactions: \'{txAmount} transactions\',\\n      },\\n    },\\n  };\\n\\n  return (\\n    <LocalizationProvider customLocales={locales}>\\n      <PaymentRequest {...controlsToProps(args)} />\\n    </LocalizationProvider>\\n  );\\n};\\nCustomStrings.argTypes = argTypes;\\nCustomStrings.args = {\\n  ...WithActions.args,\\n  customStatusText: \'Custom status message\',\\n};\\n\\nexport const Scenario: Story<IProps> = () => {\\n  const [status, setStatus] = useState<PaymentStatus>();\\n\\n  const handleClick = (status: PaymentStatus) => (): void => setStatus(status);\\n\\n  return (\\n    <Fragment>\\n      <div style={{ marginBottom: \'20px\' }}>\\n        <button onClick={handleClick(PaymentStatus.COMPLETE)}>Trigger success</button>\\n        <button onClick={handleClick(PaymentStatus.FAILED)}>Trigger failure</button>\\n      </div>\\n      <PaymentRequest\\n        symbol=\'BTC\'\\n        decimalPlaces={8}\\n        sellerName=\'Such Company LTD\'\\n        logos={{\\n          coin: \'https://upload.wikimedia.org/wikipedia/commons/c/c5/Bitcoin_logo.svg\',\\n          company: companyLogo,\\n        }}\\n        address=\'1BitcoinEaterAddressDontSendf59kuE\'\\n        amount={{ toPay: 0.9, received: 0.2 }}\\n        transactions={[\\n          {\\n            txHash: \'369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\',\\n            txUrl:\\n              \'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\',\\n            amount: 0.1,\\n          },\\n          {\\n            txHash: \'519f6c9581ce27e0a59f5f8e427b672087e1f2eb1aead0d66288de62ed3e9647\',\\n            txUrl:\\n              \'https://www.blockchain.com/btc/tx/519f6c9581ce27e0a59f5f8e427b672087e1f2eb1aead0d66288de62ed3e9647\',\\n            amount: 0.1,\\n          },\\n        ]}\\n        helpUrl=\'https://github.com/PaulFasola/adoption/blob/master/README.md\'\\n        deadline={{\\n          dateLocale: \'en-US\',\\n          datetime: dueDate,\\n          humanized: true,\\n        }}\\n        status={status}\\n      />\\n    </Fragment>\\n  );\\n};\\nScenario.parameters = {\\n  controls: { hideNoControlsWarning: true },\\n};\\n","locationsMap":{"basic":{"startLoc":{"col":36,"line":36},"endLoc":{"col":91,"line":36},"startBody":{"col":36,"line":36},"endBody":{"col":91,"line":36}},"detailed":{"startLoc":{"col":39,"line":51},"endLoc":{"col":1,"line":53},"startBody":{"col":39,"line":51},"endBody":{"col":1,"line":53}},"animated-status":{"startLoc":{"col":45,"line":72},"endLoc":{"col":1,"line":74},"startBody":{"col":45,"line":72},"endBody":{"col":1,"line":74}},"transacted":{"startLoc":{"col":41,"line":81},"endLoc":{"col":96,"line":81},"startBody":{"col":41,"line":81},"endBody":{"col":96,"line":81}},"completed":{"startLoc":{"col":40,"line":102},"endLoc":{"col":95,"line":102},"startBody":{"col":40,"line":102},"endBody":{"col":95,"line":102}},"with-actions":{"startLoc":{"col":42,"line":114},"endLoc":{"col":97,"line":114},"startBody":{"col":42,"line":114},"endBody":{"col":97,"line":114}},"custom-strings":{"startLoc":{"col":44,"line":139},"endLoc":{"col":1,"line":167},"startBody":{"col":44,"line":139},"endBody":{"col":1,"line":167}},"scenario":{"startLoc":{"col":39,"line":174},"endLoc":{"col":1,"line":219},"startBody":{"col":39,"line":174},"endBody":{"col":1,"line":219}}}},},\n  title: \'Components/PaymentRequest\',\n} as Meta;\n\nconst argTypes = {\n  status: {\n    control: {\n      type: \'select\',\n      options: Object.keys(PaymentStatus),\n    },\n  },\n};\n\nconst controlsToProps = (args: IProps) => {\n  if (args.status && PaymentStatus[args.status]) {\n    args.status = PaymentStatus[args.status];\n  }\n\n  return args;\n};\n\nconst dueDate = new Date();\ndueDate.setTime(dueDate.setMinutes(dueDate.getMinutes() + 15));\n\nexport const Basic: Story<IProps> = (args) => <PaymentRequest {...controlsToProps(args)} />;;;\nBasic.argTypes = argTypes;\nBasic.args = {\n  symbol: \'BTC\',\n  decimalPlaces: 8,\n  logos: {\n    coin: \'https://upload.wikimedia.org/wikipedia/commons/c/c5/Bitcoin_logo.svg\',\n  },\n  address: \'1BitcoinEaterAddressDontSendf59kuE\',\n  amount: {\n    toPay: 0.9,\n  },\n  noShadow: false,\n};\n\nexport const Detailed: Story<IProps> = (args) => (\n  <PaymentRequest status={PaymentStatus.PENDING} {...controlsToProps(args)} />\n);;;\nDetailed.argTypes = argTypes;\nDetailed.args = {\n  ...Basic.args,\n  showQRCode: true,\n  status: PaymentStatus.PENDING,\n  sellerName: \'Such Company LTD\',\n  logos: {\n    coin: \'https://upload.wikimedia.org/wikipedia/commons/c/c5/Bitcoin_logo.svg\',\n    company: companyLogo,\n  },\n  amount: { toPay: 0.9, received: 0 },\n  deadline: {\n    dateLocale: \'en-US\',\n    datetime: dueDate,\n    humanized: true,\n  },\n};\n\nexport const AnimatedStatus: Story<IProps> = (args) => (\n  <PaymentRequest waitAnimation {...controlsToProps(args)} />\n);;;\nAnimatedStatus.argTypes = argTypes;\nAnimatedStatus.args = {\n  ...Detailed.args,\n  waitAnimation: true,\n};\n\nexport const Transacted: Story<IProps> = (args) => <PaymentRequest {...controlsToProps(args)} />;;;\nTransacted.argTypes = argTypes;\nTransacted.args = {\n  ...Detailed.args,\n  amount: {\n    toPay: 0.9,\n    received: 0.2,\n  },\n};\n\nconst txs = new Array<ITransaction>(30).fill(\n  {\n    txHash: \'369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\',\n    txUrl:\n      \'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\',\n    amount: 0.01,\n  },\n  0,\n  20\n);\n\nexport const Completed: Story<IProps> = (args) => <PaymentRequest {...controlsToProps(args)} />;;;\nCompleted.argTypes = argTypes;\nCompleted.args = {\n  ...Detailed.args,\n  status: PaymentStatus.COMPLETE,\n  transactions: txs,\n  amount: {\n    toPay: 0.2,\n    received: 0.2,\n  },\n};\n\nexport const WithActions: Story<IProps> = (args) => <PaymentRequest {...controlsToProps(args)} />;;;\nWithActions.argTypes = argTypes;\nWithActions.args = {\n  ...Detailed.args,\n  transactions: [\n    {\n      txHash: \'369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\',\n      txUrl:\n        \'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\',\n      amount: 0.1,\n    },\n    {\n      txHash: \'519f6c9581ce27e0a59f5f8e427b672087e1f2eb1aead0d66288de62ed3e9647\',\n      txUrl:\n        \'https://www.blockchain.com/btc/tx/519f6c9581ce27e0a59f5f8e427b672087e1f2eb1aead0d66288de62ed3e9647\',\n      amount: 0.1,\n    },\n  ],\n  helpUrl: \'https://github.com/PaulFasola/adoption/blob/master/README.md\',\n  onCancel: () => {\n    action(\'onCancel\');\n    alert(\'User wants to cancel, do something here!\');\n  },\n};\n\nexport const CustomStrings: Story<IProps> = (args) => {\n  const locales: Record<string, Partial<ILocalizedStrings>> = {\n    [\'en-US\']: {\n      paymentRequest: {\n        cancel: \'Very cancelling\',\n        seller: \'Seller\',\n        deadline: \'Deadline\',\n        // txStatus is overriden by customStatusText props in this example.\n        txStatus: {\n          complete: \'Done o/\',\n          failed: \'Failed :(\',\n          pending: \'is pending...\',\n        },\n        request: \'Pay {amount} {symbol} to get your item\',\n        help: \'Wow, help here\',\n        status: \'Transaction\',\n        receivedAmount: \'Received:\',\n        remainingAmount: \'Remaining:\',\n        transactions: \'{txAmount} transactions\',\n      },\n    },\n  };\n\n  return (\n    <LocalizationProvider customLocales={locales}>\n      <PaymentRequest {...controlsToProps(args)} />\n    </LocalizationProvider>\n  );\n};;;\nCustomStrings.argTypes = argTypes;\nCustomStrings.args = {\n  ...WithActions.args,\n  customStatusText: \'Custom status message\',\n};\n\nexport const Scenario: Story<IProps> = () => {\n  const [status, setStatus] = useState<PaymentStatus>();\n\n  const handleClick = (status: PaymentStatus) => (): void => setStatus(status);\n\n  return (\n    <Fragment>\n      <div style={{ marginBottom: \'20px\' }}>\n        <button onClick={handleClick(PaymentStatus.COMPLETE)}>Trigger success</button>\n        <button onClick={handleClick(PaymentStatus.FAILED)}>Trigger failure</button>\n      </div>\n      <PaymentRequest\n        symbol=\'BTC\'\n        decimalPlaces={8}\n        sellerName=\'Such Company LTD\'\n        logos={{\n          coin: \'https://upload.wikimedia.org/wikipedia/commons/c/c5/Bitcoin_logo.svg\',\n          company: companyLogo,\n        }}\n        address=\'1BitcoinEaterAddressDontSendf59kuE\'\n        amount={{ toPay: 0.9, received: 0.2 }}\n        transactions={[\n          {\n            txHash: \'369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\',\n            txUrl:\n              \'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\',\n            amount: 0.1,\n          },\n          {\n            txHash: \'519f6c9581ce27e0a59f5f8e427b672087e1f2eb1aead0d66288de62ed3e9647\',\n            txUrl:\n              \'https://www.blockchain.com/btc/tx/519f6c9581ce27e0a59f5f8e427b672087e1f2eb1aead0d66288de62ed3e9647\',\n            amount: 0.1,\n          },\n        ]}\n        helpUrl=\'https://github.com/PaulFasola/adoption/blob/master/README.md\'\n        deadline={{\n          dateLocale: \'en-US\',\n          datetime: dueDate,\n          humanized: true,\n        }}\n        status={status}\n      />\n    </Fragment>\n  );\n};\nScenario.parameters = {\n  controls: { hideNoControlsWarning: true },\n};\n',locationsMap:{basic:{startLoc:{col:36,line:52},endLoc:{col:91,line:52},startBody:{col:36,line:52},endBody:{col:91,line:52}},detailed:{startLoc:{col:39,line:67},endLoc:{col:1,line:69},startBody:{col:39,line:67},endBody:{col:1,line:69}},"animated-status":{startLoc:{col:45,line:88},endLoc:{col:1,line:90},startBody:{col:45,line:88},endBody:{col:1,line:90}},transacted:{startLoc:{col:41,line:97},endLoc:{col:96,line:97},startBody:{col:41,line:97},endBody:{col:96,line:97}},completed:{startLoc:{col:40,line:118},endLoc:{col:95,line:118},startBody:{col:40,line:118},endBody:{col:95,line:118}},"with-actions":{startLoc:{col:42,line:130},endLoc:{col:97,line:130},startBody:{col:42,line:130},endBody:{col:97,line:130}},"custom-strings":{startLoc:{col:44,line:155},endLoc:{col:1,line:183},startBody:{col:44,line:155},endBody:{col:1,line:183}},scenario:{startLoc:{col:39,line:190},endLoc:{col:1,line:235},startBody:{col:39,line:190},endBody:{col:1,line:235}}}}},_defineProperty(_parameters,"storySource",{source:'\n    \n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = "import React, { Fragment, useState } from \'react\';\\nimport { ILocalizedStrings } from \'../../providers/localization/ILocalizedStrings\';\\nimport { LocalizationProvider } from \'../../providers/localization/localizationProvider\';\\nimport { PaymentRequest } from \'../PaymentRequest\';\\nimport { PaymentStatus } from \'./enums/paymentStatus\';\\nimport { IProps, ITransaction } from \'./interfaces\';\\nimport { Meta, Story } from \'@storybook/react\';\\nimport { action } from \'@storybook/addon-actions\';\\n\\nimport companyLogo from \'../../assets/fictiveCompany.png\';\\n\\nexport default {\\n  title: \'Components/PaymentRequest\',\\n} as Meta;\\n\\nconst argTypes = {\\n  status: {\\n    control: {\\n      type: \'select\',\\n      options: Object.keys(PaymentStatus),\\n    },\\n  },\\n};\\n\\nconst controlsToProps = (args: IProps) => {\\n  if (args.status && PaymentStatus[args.status]) {\\n    args.status = PaymentStatus[args.status];\\n  }\\n\\n  return args;\\n};\\n\\nconst dueDate = new Date();\\ndueDate.setTime(dueDate.setMinutes(dueDate.getMinutes() + 15));\\n\\nexport const Basic: Story<IProps> = (args) => <PaymentRequest {...controlsToProps(args)} />;\\nBasic.argTypes = argTypes;\\nBasic.args = {\\n  symbol: \'BTC\',\\n  decimalPlaces: 8,\\n  logos: {\\n    coin: \'https://upload.wikimedia.org/wikipedia/commons/c/c5/Bitcoin_logo.svg\',\\n  },\\n  address: \'1BitcoinEaterAddressDontSendf59kuE\',\\n  amount: {\\n    toPay: 0.9,\\n  },\\n  noShadow: false,\\n};\\n\\nexport const Detailed: Story<IProps> = (args) => (\\n  <PaymentRequest status={PaymentStatus.PENDING} {...controlsToProps(args)} />\\n);\\nDetailed.argTypes = argTypes;\\nDetailed.args = {\\n  ...Basic.args,\\n  showQRCode: true,\\n  status: PaymentStatus.PENDING,\\n  sellerName: \'Such Company LTD\',\\n  logos: {\\n    coin: \'https://upload.wikimedia.org/wikipedia/commons/c/c5/Bitcoin_logo.svg\',\\n    company: companyLogo,\\n  },\\n  amount: { toPay: 0.9, received: 0 },\\n  deadline: {\\n    dateLocale: \'en-US\',\\n    datetime: dueDate,\\n    humanized: true,\\n  },\\n};\\n\\nexport const AnimatedStatus: Story<IProps> = (args) => (\\n  <PaymentRequest waitAnimation {...controlsToProps(args)} />\\n);\\nAnimatedStatus.argTypes = argTypes;\\nAnimatedStatus.args = {\\n  ...Detailed.args,\\n  waitAnimation: true,\\n};\\n\\nexport const Transacted: Story<IProps> = (args) => <PaymentRequest {...controlsToProps(args)} />;\\nTransacted.argTypes = argTypes;\\nTransacted.args = {\\n  ...Detailed.args,\\n  amount: {\\n    toPay: 0.9,\\n    received: 0.2,\\n  },\\n};\\n\\nconst txs = new Array<ITransaction>(30).fill(\\n  {\\n    txHash: \'369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\',\\n    txUrl:\\n      \'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\',\\n    amount: 0.01,\\n  },\\n  0,\\n  20\\n);\\n\\nexport const Completed: Story<IProps> = (args) => <PaymentRequest {...controlsToProps(args)} />;\\nCompleted.argTypes = argTypes;\\nCompleted.args = {\\n  ...Detailed.args,\\n  status: PaymentStatus.COMPLETE,\\n  transactions: txs,\\n  amount: {\\n    toPay: 0.2,\\n    received: 0.2,\\n  },\\n};\\n\\nexport const WithActions: Story<IProps> = (args) => <PaymentRequest {...controlsToProps(args)} />;\\nWithActions.argTypes = argTypes;\\nWithActions.args = {\\n  ...Detailed.args,\\n  transactions: [\\n    {\\n      txHash: \'369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\',\\n      txUrl:\\n        \'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\',\\n      amount: 0.1,\\n    },\\n    {\\n      txHash: \'519f6c9581ce27e0a59f5f8e427b672087e1f2eb1aead0d66288de62ed3e9647\',\\n      txUrl:\\n        \'https://www.blockchain.com/btc/tx/519f6c9581ce27e0a59f5f8e427b672087e1f2eb1aead0d66288de62ed3e9647\',\\n      amount: 0.1,\\n    },\\n  ],\\n  helpUrl: \'https://github.com/PaulFasola/adoption/blob/master/README.md\',\\n  onCancel: () => {\\n    action(\'onCancel\');\\n    alert(\'User wants to cancel, do something here!\');\\n  },\\n};\\n\\nexport const CustomStrings: Story<IProps> = (args) => {\\n  const locales: Record<string, Partial<ILocalizedStrings>> = {\\n    [\'en-US\']: {\\n      paymentRequest: {\\n        cancel: \'Very cancelling\',\\n        seller: \'Seller\',\\n        deadline: \'Deadline\',\\n        // txStatus is overriden by customStatusText props in this example.\\n        txStatus: {\\n          complete: \'Done o/\',\\n          failed: \'Failed :(\',\\n          pending: \'is pending...\',\\n        },\\n        request: \'Pay {amount} {symbol} to get your item\',\\n        help: \'Wow, help here\',\\n        status: \'Transaction\',\\n        receivedAmount: \'Received:\',\\n        remainingAmount: \'Remaining:\',\\n        transactions: \'{txAmount} transactions\',\\n      },\\n    },\\n  };\\n\\n  return (\\n    <LocalizationProvider customLocales={locales}>\\n      <PaymentRequest {...controlsToProps(args)} />\\n    </LocalizationProvider>\\n  );\\n};\\nCustomStrings.argTypes = argTypes;\\nCustomStrings.args = {\\n  ...WithActions.args,\\n  customStatusText: \'Custom status message\',\\n};\\n\\nexport const Scenario: Story<IProps> = () => {\\n  const [status, setStatus] = useState<PaymentStatus>();\\n\\n  const handleClick = (status: PaymentStatus) => (): void => setStatus(status);\\n\\n  return (\\n    <Fragment>\\n      <div style={{ marginBottom: \'20px\' }}>\\n        <button onClick={handleClick(PaymentStatus.COMPLETE)}>Trigger success</button>\\n        <button onClick={handleClick(PaymentStatus.FAILED)}>Trigger failure</button>\\n      </div>\\n      <PaymentRequest\\n        symbol=\'BTC\'\\n        decimalPlaces={8}\\n        sellerName=\'Such Company LTD\'\\n        logos={{\\n          coin: \'https://upload.wikimedia.org/wikipedia/commons/c/c5/Bitcoin_logo.svg\',\\n          company: companyLogo,\\n        }}\\n        address=\'1BitcoinEaterAddressDontSendf59kuE\'\\n        amount={{ toPay: 0.9, received: 0.2 }}\\n        transactions={[\\n          {\\n            txHash: \'369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\',\\n            txUrl:\\n              \'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\',\\n            amount: 0.1,\\n          },\\n          {\\n            txHash: \'519f6c9581ce27e0a59f5f8e427b672087e1f2eb1aead0d66288de62ed3e9647\',\\n            txUrl:\\n              \'https://www.blockchain.com/btc/tx/519f6c9581ce27e0a59f5f8e427b672087e1f2eb1aead0d66288de62ed3e9647\',\\n            amount: 0.1,\\n          },\\n        ]}\\n        helpUrl=\'https://github.com/PaulFasola/adoption/blob/master/README.md\'\\n        deadline={{\\n          dateLocale: \'en-US\',\\n          datetime: dueDate,\\n          humanized: true,\\n        }}\\n        status={status}\\n      />\\n    </Fragment>\\n  );\\n};\\nScenario.parameters = {\\n  controls: { hideNoControlsWarning: true },\\n};\\n";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {"Basic":{"startLoc":{"col":36,"line":36},"endLoc":{"col":91,"line":36},"startBody":{"col":36,"line":36},"endBody":{"col":91,"line":36}},"Detailed":{"startLoc":{"col":39,"line":51},"endLoc":{"col":1,"line":53},"startBody":{"col":39,"line":51},"endBody":{"col":1,"line":53}},"AnimatedStatus":{"startLoc":{"col":45,"line":72},"endLoc":{"col":1,"line":74},"startBody":{"col":45,"line":72},"endBody":{"col":1,"line":74}},"Transacted":{"startLoc":{"col":41,"line":81},"endLoc":{"col":96,"line":81},"startBody":{"col":41,"line":81},"endBody":{"col":96,"line":81}},"Completed":{"startLoc":{"col":40,"line":102},"endLoc":{"col":95,"line":102},"startBody":{"col":40,"line":102},"endBody":{"col":95,"line":102}},"WithActions":{"startLoc":{"col":42,"line":114},"endLoc":{"col":97,"line":114},"startBody":{"col":42,"line":114},"endBody":{"col":97,"line":114}},"CustomStrings":{"startLoc":{"col":44,"line":139},"endLoc":{"col":1,"line":167},"startBody":{"col":44,"line":139},"endBody":{"col":1,"line":167}},"Scenario":{"startLoc":{"col":39,"line":174},"endLoc":{"col":1,"line":219},"startBody":{"col":39,"line":174},"endBody":{"col":1,"line":219}}};\n    \nimport React, { Fragment, useState } from \'react\';\nimport { ILocalizedStrings } from \'../../providers/localization/ILocalizedStrings\';\nimport { LocalizationProvider } from \'../../providers/localization/localizationProvider\';\nimport { PaymentRequest } from \'../PaymentRequest\';\nimport { PaymentStatus } from \'./enums/paymentStatus\';\nimport { IProps, ITransaction } from \'./interfaces\';\nimport { Meta, Story } from \'@storybook/react\';\nimport { action } from \'@storybook/addon-actions\';\n\nimport companyLogo from \'../../assets/fictiveCompany.png\';\n\nexport default {parameters: {"storySource":{"source":"import React, { Fragment, useState } from \'react\';\\nimport { ILocalizedStrings } from \'../../providers/localization/ILocalizedStrings\';\\nimport { LocalizationProvider } from \'../../providers/localization/localizationProvider\';\\nimport { PaymentRequest } from \'../PaymentRequest\';\\nimport { PaymentStatus } from \'./enums/paymentStatus\';\\nimport { IProps, ITransaction } from \'./interfaces\';\\nimport { Meta, Story } from \'@storybook/react\';\\nimport { action } from \'@storybook/addon-actions\';\\n\\nimport companyLogo from \'../../assets/fictiveCompany.png\';\\n\\nexport default {\\n  title: \'Components/PaymentRequest\',\\n} as Meta;\\n\\nconst argTypes = {\\n  status: {\\n    control: {\\n      type: \'select\',\\n      options: Object.keys(PaymentStatus),\\n    },\\n  },\\n};\\n\\nconst controlsToProps = (args: IProps) => {\\n  if (args.status && PaymentStatus[args.status]) {\\n    args.status = PaymentStatus[args.status];\\n  }\\n\\n  return args;\\n};\\n\\nconst dueDate = new Date();\\ndueDate.setTime(dueDate.setMinutes(dueDate.getMinutes() + 15));\\n\\nexport const Basic: Story<IProps> = (args) => <PaymentRequest {...controlsToProps(args)} />;\\nBasic.argTypes = argTypes;\\nBasic.args = {\\n  symbol: \'BTC\',\\n  decimalPlaces: 8,\\n  logos: {\\n    coin: \'https://upload.wikimedia.org/wikipedia/commons/c/c5/Bitcoin_logo.svg\',\\n  },\\n  address: \'1BitcoinEaterAddressDontSendf59kuE\',\\n  amount: {\\n    toPay: 0.9,\\n  },\\n  noShadow: false,\\n};\\n\\nexport const Detailed: Story<IProps> = (args) => (\\n  <PaymentRequest status={PaymentStatus.PENDING} {...controlsToProps(args)} />\\n);\\nDetailed.argTypes = argTypes;\\nDetailed.args = {\\n  ...Basic.args,\\n  showQRCode: true,\\n  status: PaymentStatus.PENDING,\\n  sellerName: \'Such Company LTD\',\\n  logos: {\\n    coin: \'https://upload.wikimedia.org/wikipedia/commons/c/c5/Bitcoin_logo.svg\',\\n    company: companyLogo,\\n  },\\n  amount: { toPay: 0.9, received: 0 },\\n  deadline: {\\n    dateLocale: \'en-US\',\\n    datetime: dueDate,\\n    humanized: true,\\n  },\\n};\\n\\nexport const AnimatedStatus: Story<IProps> = (args) => (\\n  <PaymentRequest waitAnimation {...controlsToProps(args)} />\\n);\\nAnimatedStatus.argTypes = argTypes;\\nAnimatedStatus.args = {\\n  ...Detailed.args,\\n  waitAnimation: true,\\n};\\n\\nexport const Transacted: Story<IProps> = (args) => <PaymentRequest {...controlsToProps(args)} />;\\nTransacted.argTypes = argTypes;\\nTransacted.args = {\\n  ...Detailed.args,\\n  amount: {\\n    toPay: 0.9,\\n    received: 0.2,\\n  },\\n};\\n\\nconst txs = new Array<ITransaction>(30).fill(\\n  {\\n    txHash: \'369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\',\\n    txUrl:\\n      \'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\',\\n    amount: 0.01,\\n  },\\n  0,\\n  20\\n);\\n\\nexport const Completed: Story<IProps> = (args) => <PaymentRequest {...controlsToProps(args)} />;\\nCompleted.argTypes = argTypes;\\nCompleted.args = {\\n  ...Detailed.args,\\n  status: PaymentStatus.COMPLETE,\\n  transactions: txs,\\n  amount: {\\n    toPay: 0.2,\\n    received: 0.2,\\n  },\\n};\\n\\nexport const WithActions: Story<IProps> = (args) => <PaymentRequest {...controlsToProps(args)} />;\\nWithActions.argTypes = argTypes;\\nWithActions.args = {\\n  ...Detailed.args,\\n  transactions: [\\n    {\\n      txHash: \'369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\',\\n      txUrl:\\n        \'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\',\\n      amount: 0.1,\\n    },\\n    {\\n      txHash: \'519f6c9581ce27e0a59f5f8e427b672087e1f2eb1aead0d66288de62ed3e9647\',\\n      txUrl:\\n        \'https://www.blockchain.com/btc/tx/519f6c9581ce27e0a59f5f8e427b672087e1f2eb1aead0d66288de62ed3e9647\',\\n      amount: 0.1,\\n    },\\n  ],\\n  helpUrl: \'https://github.com/PaulFasola/adoption/blob/master/README.md\',\\n  onCancel: () => {\\n    action(\'onCancel\');\\n    alert(\'User wants to cancel, do something here!\');\\n  },\\n};\\n\\nexport const CustomStrings: Story<IProps> = (args) => {\\n  const locales: Record<string, Partial<ILocalizedStrings>> = {\\n    [\'en-US\']: {\\n      paymentRequest: {\\n        cancel: \'Very cancelling\',\\n        seller: \'Seller\',\\n        deadline: \'Deadline\',\\n        // txStatus is overriden by customStatusText props in this example.\\n        txStatus: {\\n          complete: \'Done o/\',\\n          failed: \'Failed :(\',\\n          pending: \'is pending...\',\\n        },\\n        request: \'Pay {amount} {symbol} to get your item\',\\n        help: \'Wow, help here\',\\n        status: \'Transaction\',\\n        receivedAmount: \'Received:\',\\n        remainingAmount: \'Remaining:\',\\n        transactions: \'{txAmount} transactions\',\\n      },\\n    },\\n  };\\n\\n  return (\\n    <LocalizationProvider customLocales={locales}>\\n      <PaymentRequest {...controlsToProps(args)} />\\n    </LocalizationProvider>\\n  );\\n};\\nCustomStrings.argTypes = argTypes;\\nCustomStrings.args = {\\n  ...WithActions.args,\\n  customStatusText: \'Custom status message\',\\n};\\n\\nexport const Scenario: Story<IProps> = () => {\\n  const [status, setStatus] = useState<PaymentStatus>();\\n\\n  const handleClick = (status: PaymentStatus) => (): void => setStatus(status);\\n\\n  return (\\n    <Fragment>\\n      <div style={{ marginBottom: \'20px\' }}>\\n        <button onClick={handleClick(PaymentStatus.COMPLETE)}>Trigger success</button>\\n        <button onClick={handleClick(PaymentStatus.FAILED)}>Trigger failure</button>\\n      </div>\\n      <PaymentRequest\\n        symbol=\'BTC\'\\n        decimalPlaces={8}\\n        sellerName=\'Such Company LTD\'\\n        logos={{\\n          coin: \'https://upload.wikimedia.org/wikipedia/commons/c/c5/Bitcoin_logo.svg\',\\n          company: companyLogo,\\n        }}\\n        address=\'1BitcoinEaterAddressDontSendf59kuE\'\\n        amount={{ toPay: 0.9, received: 0.2 }}\\n        transactions={[\\n          {\\n            txHash: \'369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\',\\n            txUrl:\\n              \'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\',\\n            amount: 0.1,\\n          },\\n          {\\n            txHash: \'519f6c9581ce27e0a59f5f8e427b672087e1f2eb1aead0d66288de62ed3e9647\',\\n            txUrl:\\n              \'https://www.blockchain.com/btc/tx/519f6c9581ce27e0a59f5f8e427b672087e1f2eb1aead0d66288de62ed3e9647\',\\n            amount: 0.1,\\n          },\\n        ]}\\n        helpUrl=\'https://github.com/PaulFasola/adoption/blob/master/README.md\'\\n        deadline={{\\n          dateLocale: \'en-US\',\\n          datetime: dueDate,\\n          humanized: true,\\n        }}\\n        status={status}\\n      />\\n    </Fragment>\\n  );\\n};\\nScenario.parameters = {\\n  controls: { hideNoControlsWarning: true },\\n};\\n","locationsMap":{"basic":{"startLoc":{"col":36,"line":36},"endLoc":{"col":91,"line":36},"startBody":{"col":36,"line":36},"endBody":{"col":91,"line":36}},"detailed":{"startLoc":{"col":39,"line":51},"endLoc":{"col":1,"line":53},"startBody":{"col":39,"line":51},"endBody":{"col":1,"line":53}},"animated-status":{"startLoc":{"col":45,"line":72},"endLoc":{"col":1,"line":74},"startBody":{"col":45,"line":72},"endBody":{"col":1,"line":74}},"transacted":{"startLoc":{"col":41,"line":81},"endLoc":{"col":96,"line":81},"startBody":{"col":41,"line":81},"endBody":{"col":96,"line":81}},"completed":{"startLoc":{"col":40,"line":102},"endLoc":{"col":95,"line":102},"startBody":{"col":40,"line":102},"endBody":{"col":95,"line":102}},"with-actions":{"startLoc":{"col":42,"line":114},"endLoc":{"col":97,"line":114},"startBody":{"col":42,"line":114},"endBody":{"col":97,"line":114}},"custom-strings":{"startLoc":{"col":44,"line":139},"endLoc":{"col":1,"line":167},"startBody":{"col":44,"line":139},"endBody":{"col":1,"line":167}},"scenario":{"startLoc":{"col":39,"line":174},"endLoc":{"col":1,"line":219},"startBody":{"col":39,"line":174},"endBody":{"col":1,"line":219}}}},},\n  title: \'Components/PaymentRequest\',\n} as Meta;\n\nconst argTypes = {\n  status: {\n    control: {\n      type: \'select\',\n      options: Object.keys(PaymentStatus),\n    },\n  },\n};\n\nconst controlsToProps = (args: IProps) => {\n  if (args.status && PaymentStatus[args.status]) {\n    args.status = PaymentStatus[args.status];\n  }\n\n  return args;\n};\n\nconst dueDate = new Date();\ndueDate.setTime(dueDate.setMinutes(dueDate.getMinutes() + 15));\n\nexport const Basic: Story<IProps> = (args) => <PaymentRequest {...controlsToProps(args)} />;;\nBasic.argTypes = argTypes;\nBasic.args = {\n  symbol: \'BTC\',\n  decimalPlaces: 8,\n  logos: {\n    coin: \'https://upload.wikimedia.org/wikipedia/commons/c/c5/Bitcoin_logo.svg\',\n  },\n  address: \'1BitcoinEaterAddressDontSendf59kuE\',\n  amount: {\n    toPay: 0.9,\n  },\n  noShadow: false,\n};\n\nexport const Detailed: Story<IProps> = (args) => (\n  <PaymentRequest status={PaymentStatus.PENDING} {...controlsToProps(args)} />\n);;\nDetailed.argTypes = argTypes;\nDetailed.args = {\n  ...Basic.args,\n  showQRCode: true,\n  status: PaymentStatus.PENDING,\n  sellerName: \'Such Company LTD\',\n  logos: {\n    coin: \'https://upload.wikimedia.org/wikipedia/commons/c/c5/Bitcoin_logo.svg\',\n    company: companyLogo,\n  },\n  amount: { toPay: 0.9, received: 0 },\n  deadline: {\n    dateLocale: \'en-US\',\n    datetime: dueDate,\n    humanized: true,\n  },\n};\n\nexport const AnimatedStatus: Story<IProps> = (args) => (\n  <PaymentRequest waitAnimation {...controlsToProps(args)} />\n);;\nAnimatedStatus.argTypes = argTypes;\nAnimatedStatus.args = {\n  ...Detailed.args,\n  waitAnimation: true,\n};\n\nexport const Transacted: Story<IProps> = (args) => <PaymentRequest {...controlsToProps(args)} />;;\nTransacted.argTypes = argTypes;\nTransacted.args = {\n  ...Detailed.args,\n  amount: {\n    toPay: 0.9,\n    received: 0.2,\n  },\n};\n\nconst txs = new Array<ITransaction>(30).fill(\n  {\n    txHash: \'369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\',\n    txUrl:\n      \'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\',\n    amount: 0.01,\n  },\n  0,\n  20\n);\n\nexport const Completed: Story<IProps> = (args) => <PaymentRequest {...controlsToProps(args)} />;;\nCompleted.argTypes = argTypes;\nCompleted.args = {\n  ...Detailed.args,\n  status: PaymentStatus.COMPLETE,\n  transactions: txs,\n  amount: {\n    toPay: 0.2,\n    received: 0.2,\n  },\n};\n\nexport const WithActions: Story<IProps> = (args) => <PaymentRequest {...controlsToProps(args)} />;;\nWithActions.argTypes = argTypes;\nWithActions.args = {\n  ...Detailed.args,\n  transactions: [\n    {\n      txHash: \'369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\',\n      txUrl:\n        \'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\',\n      amount: 0.1,\n    },\n    {\n      txHash: \'519f6c9581ce27e0a59f5f8e427b672087e1f2eb1aead0d66288de62ed3e9647\',\n      txUrl:\n        \'https://www.blockchain.com/btc/tx/519f6c9581ce27e0a59f5f8e427b672087e1f2eb1aead0d66288de62ed3e9647\',\n      amount: 0.1,\n    },\n  ],\n  helpUrl: \'https://github.com/PaulFasola/adoption/blob/master/README.md\',\n  onCancel: () => {\n    action(\'onCancel\');\n    alert(\'User wants to cancel, do something here!\');\n  },\n};\n\nexport const CustomStrings: Story<IProps> = (args) => {\n  const locales: Record<string, Partial<ILocalizedStrings>> = {\n    [\'en-US\']: {\n      paymentRequest: {\n        cancel: \'Very cancelling\',\n        seller: \'Seller\',\n        deadline: \'Deadline\',\n        // txStatus is overriden by customStatusText props in this example.\n        txStatus: {\n          complete: \'Done o/\',\n          failed: \'Failed :(\',\n          pending: \'is pending...\',\n        },\n        request: \'Pay {amount} {symbol} to get your item\',\n        help: \'Wow, help here\',\n        status: \'Transaction\',\n        receivedAmount: \'Received:\',\n        remainingAmount: \'Remaining:\',\n        transactions: \'{txAmount} transactions\',\n      },\n    },\n  };\n\n  return (\n    <LocalizationProvider customLocales={locales}>\n      <PaymentRequest {...controlsToProps(args)} />\n    </LocalizationProvider>\n  );\n};;\nCustomStrings.argTypes = argTypes;\nCustomStrings.args = {\n  ...WithActions.args,\n  customStatusText: \'Custom status message\',\n};\n\nexport const Scenario: Story<IProps> = () => {\n  const [status, setStatus] = useState<PaymentStatus>();\n\n  const handleClick = (status: PaymentStatus) => (): void => setStatus(status);\n\n  return (\n    <Fragment>\n      <div style={{ marginBottom: \'20px\' }}>\n        <button onClick={handleClick(PaymentStatus.COMPLETE)}>Trigger success</button>\n        <button onClick={handleClick(PaymentStatus.FAILED)}>Trigger failure</button>\n      </div>\n      <PaymentRequest\n        symbol=\'BTC\'\n        decimalPlaces={8}\n        sellerName=\'Such Company LTD\'\n        logos={{\n          coin: \'https://upload.wikimedia.org/wikipedia/commons/c/c5/Bitcoin_logo.svg\',\n          company: companyLogo,\n        }}\n        address=\'1BitcoinEaterAddressDontSendf59kuE\'\n        amount={{ toPay: 0.9, received: 0.2 }}\n        transactions={[\n          {\n            txHash: \'369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\',\n            txUrl:\n              \'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\',\n            amount: 0.1,\n          },\n          {\n            txHash: \'519f6c9581ce27e0a59f5f8e427b672087e1f2eb1aead0d66288de62ed3e9647\',\n            txUrl:\n              \'https://www.blockchain.com/btc/tx/519f6c9581ce27e0a59f5f8e427b672087e1f2eb1aead0d66288de62ed3e9647\',\n            amount: 0.1,\n          },\n        ]}\n        helpUrl=\'https://github.com/PaulFasola/adoption/blob/master/README.md\'\n        deadline={{\n          dateLocale: \'en-US\',\n          datetime: dueDate,\n          humanized: true,\n        }}\n        status={status}\n      />\n    </Fragment>\n  );\n};\nScenario.parameters = {\n  controls: { hideNoControlsWarning: true },\n};\n',locationsMap:{basic:{startLoc:{col:36,line:44},endLoc:{col:91,line:44},startBody:{col:36,line:44},endBody:{col:91,line:44}},detailed:{startLoc:{col:39,line:59},endLoc:{col:1,line:61},startBody:{col:39,line:59},endBody:{col:1,line:61}},"animated-status":{startLoc:{col:45,line:80},endLoc:{col:1,line:82},startBody:{col:45,line:80},endBody:{col:1,line:82}},transacted:{startLoc:{col:41,line:89},endLoc:{col:96,line:89},startBody:{col:41,line:89},endBody:{col:96,line:89}},completed:{startLoc:{col:40,line:110},endLoc:{col:95,line:110},startBody:{col:40,line:110},endBody:{col:95,line:110}},"with-actions":{startLoc:{col:42,line:122},endLoc:{col:97,line:122},startBody:{col:42,line:122},endBody:{col:97,line:122}},"custom-strings":{startLoc:{col:44,line:147},endLoc:{col:1,line:175},startBody:{col:44,line:147},endBody:{col:1,line:175}},scenario:{startLoc:{col:39,line:182},endLoc:{col:1,line:227},startBody:{col:39,line:182},endBody:{col:1,line:227}}}}),_defineProperty(_parameters,"storySource",{source:"import React, { Fragment, useState } from 'react';\nimport { ILocalizedStrings } from '../../providers/localization/ILocalizedStrings';\nimport { LocalizationProvider } from '../../providers/localization/localizationProvider';\nimport { PaymentRequest } from '../PaymentRequest';\nimport { PaymentStatus } from './enums/paymentStatus';\nimport { IProps, ITransaction } from './interfaces';\nimport { Meta, Story } from '@storybook/react';\nimport { action } from '@storybook/addon-actions';\n\nimport companyLogo from '../../assets/fictiveCompany.png';\n\nexport default {\n  title: 'Components/PaymentRequest',\n} as Meta;\n\nconst argTypes = {\n  status: {\n    control: {\n      type: 'select',\n      options: Object.keys(PaymentStatus),\n    },\n  },\n};\n\nconst controlsToProps = (args: IProps) => {\n  if (args.status && PaymentStatus[args.status]) {\n    args.status = PaymentStatus[args.status];\n  }\n\n  return args;\n};\n\nconst dueDate = new Date();\ndueDate.setTime(dueDate.setMinutes(dueDate.getMinutes() + 15));\n\nexport const Basic: Story<IProps> = (args) => <PaymentRequest {...controlsToProps(args)} />;\nBasic.argTypes = argTypes;\nBasic.args = {\n  symbol: 'BTC',\n  decimalPlaces: 8,\n  logos: {\n    coin: 'https://upload.wikimedia.org/wikipedia/commons/c/c5/Bitcoin_logo.svg',\n  },\n  address: '1BitcoinEaterAddressDontSendf59kuE',\n  amount: {\n    toPay: 0.9,\n  },\n  noShadow: false,\n};\n\nexport const Detailed: Story<IProps> = (args) => (\n  <PaymentRequest status={PaymentStatus.PENDING} {...controlsToProps(args)} />\n);\nDetailed.argTypes = argTypes;\nDetailed.args = {\n  ...Basic.args,\n  showQRCode: true,\n  status: PaymentStatus.PENDING,\n  sellerName: 'Such Company LTD',\n  logos: {\n    coin: 'https://upload.wikimedia.org/wikipedia/commons/c/c5/Bitcoin_logo.svg',\n    company: companyLogo,\n  },\n  amount: { toPay: 0.9, received: 0 },\n  deadline: {\n    dateLocale: 'en-US',\n    datetime: dueDate,\n    humanized: true,\n  },\n};\n\nexport const AnimatedStatus: Story<IProps> = (args) => (\n  <PaymentRequest waitAnimation {...controlsToProps(args)} />\n);\nAnimatedStatus.argTypes = argTypes;\nAnimatedStatus.args = {\n  ...Detailed.args,\n  waitAnimation: true,\n};\n\nexport const Transacted: Story<IProps> = (args) => <PaymentRequest {...controlsToProps(args)} />;\nTransacted.argTypes = argTypes;\nTransacted.args = {\n  ...Detailed.args,\n  amount: {\n    toPay: 0.9,\n    received: 0.2,\n  },\n};\n\nconst txs = new Array<ITransaction>(30).fill(\n  {\n    txHash: '369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1',\n    txUrl:\n      'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1',\n    amount: 0.01,\n  },\n  0,\n  20\n);\n\nexport const Completed: Story<IProps> = (args) => <PaymentRequest {...controlsToProps(args)} />;\nCompleted.argTypes = argTypes;\nCompleted.args = {\n  ...Detailed.args,\n  status: PaymentStatus.COMPLETE,\n  transactions: txs,\n  amount: {\n    toPay: 0.2,\n    received: 0.2,\n  },\n};\n\nexport const WithActions: Story<IProps> = (args) => <PaymentRequest {...controlsToProps(args)} />;\nWithActions.argTypes = argTypes;\nWithActions.args = {\n  ...Detailed.args,\n  transactions: [\n    {\n      txHash: '369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1',\n      txUrl:\n        'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1',\n      amount: 0.1,\n    },\n    {\n      txHash: '519f6c9581ce27e0a59f5f8e427b672087e1f2eb1aead0d66288de62ed3e9647',\n      txUrl:\n        'https://www.blockchain.com/btc/tx/519f6c9581ce27e0a59f5f8e427b672087e1f2eb1aead0d66288de62ed3e9647',\n      amount: 0.1,\n    },\n  ],\n  helpUrl: 'https://github.com/PaulFasola/adoption/blob/master/README.md',\n  onCancel: () => {\n    action('onCancel');\n    alert('User wants to cancel, do something here!');\n  },\n};\n\nexport const CustomStrings: Story<IProps> = (args) => {\n  const locales: Record<string, Partial<ILocalizedStrings>> = {\n    ['en-US']: {\n      paymentRequest: {\n        cancel: 'Very cancelling',\n        seller: 'Seller',\n        deadline: 'Deadline',\n        // txStatus is overriden by customStatusText props in this example.\n        txStatus: {\n          complete: 'Done o/',\n          failed: 'Failed :(',\n          pending: 'is pending...',\n        },\n        request: 'Pay {amount} {symbol} to get your item',\n        help: 'Wow, help here',\n        status: 'Transaction',\n        receivedAmount: 'Received:',\n        remainingAmount: 'Remaining:',\n        transactions: '{txAmount} transactions',\n      },\n    },\n  };\n\n  return (\n    <LocalizationProvider customLocales={locales}>\n      <PaymentRequest {...controlsToProps(args)} />\n    </LocalizationProvider>\n  );\n};\nCustomStrings.argTypes = argTypes;\nCustomStrings.args = {\n  ...WithActions.args,\n  customStatusText: 'Custom status message',\n};\n\nexport const Scenario: Story<IProps> = () => {\n  const [status, setStatus] = useState<PaymentStatus>();\n\n  const handleClick = (status: PaymentStatus) => (): void => setStatus(status);\n\n  return (\n    <Fragment>\n      <div style={{ marginBottom: '20px' }}>\n        <button onClick={handleClick(PaymentStatus.COMPLETE)}>Trigger success</button>\n        <button onClick={handleClick(PaymentStatus.FAILED)}>Trigger failure</button>\n      </div>\n      <PaymentRequest\n        symbol='BTC'\n        decimalPlaces={8}\n        sellerName='Such Company LTD'\n        logos={{\n          coin: 'https://upload.wikimedia.org/wikipedia/commons/c/c5/Bitcoin_logo.svg',\n          company: companyLogo,\n        }}\n        address='1BitcoinEaterAddressDontSendf59kuE'\n        amount={{ toPay: 0.9, received: 0.2 }}\n        transactions={[\n          {\n            txHash: '369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1',\n            txUrl:\n              'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1',\n            amount: 0.1,\n          },\n          {\n            txHash: '519f6c9581ce27e0a59f5f8e427b672087e1f2eb1aead0d66288de62ed3e9647',\n            txUrl:\n              'https://www.blockchain.com/btc/tx/519f6c9581ce27e0a59f5f8e427b672087e1f2eb1aead0d66288de62ed3e9647',\n            amount: 0.1,\n          },\n        ]}\n        helpUrl='https://github.com/PaulFasola/adoption/blob/master/README.md'\n        deadline={{\n          dateLocale: 'en-US',\n          datetime: dueDate,\n          humanized: true,\n        }}\n        status={status}\n      />\n    </Fragment>\n  );\n};\nScenario.parameters = {\n  controls: { hideNoControlsWarning: true },\n};\n",locationsMap:{basic:{startLoc:{col:36,line:36},endLoc:{col:91,line:36},startBody:{col:36,line:36},endBody:{col:91,line:36}},detailed:{startLoc:{col:39,line:51},endLoc:{col:1,line:53},startBody:{col:39,line:51},endBody:{col:1,line:53}},"animated-status":{startLoc:{col:45,line:72},endLoc:{col:1,line:74},startBody:{col:45,line:72},endBody:{col:1,line:74}},transacted:{startLoc:{col:41,line:81},endLoc:{col:96,line:81},startBody:{col:41,line:81},endBody:{col:96,line:81}},completed:{startLoc:{col:40,line:102},endLoc:{col:95,line:102},startBody:{col:40,line:102},endBody:{col:95,line:102}},"with-actions":{startLoc:{col:42,line:114},endLoc:{col:97,line:114},startBody:{col:42,line:114},endBody:{col:97,line:114}},"custom-strings":{startLoc:{col:44,line:139},endLoc:{col:1,line:167},startBody:{col:44,line:139},endBody:{col:1,line:167}},scenario:{startLoc:{col:39,line:174},endLoc:{col:1,line:219},startBody:{col:39,line:174},endBody:{col:1,line:219}}}}),_parameters),title:"Components/PaymentRequest"};var argTypes={status:{control:{type:"select",options:Object.keys(_enums_paymentStatus__WEBPACK_IMPORTED_MODULE_19__.a)}}},controlsToProps=function controlsToProps(args){return args.status&&_enums_paymentStatus__WEBPACK_IMPORTED_MODULE_19__.a[args.status]&&(args.status=_enums_paymentStatus__WEBPACK_IMPORTED_MODULE_19__.a[args.status]),args},dueDate=new Date;dueDate.setTime(dueDate.setMinutes(dueDate.getMinutes()+15));var Basic=function Basic(args){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_22__.jsx)(_PaymentRequest__WEBPACK_IMPORTED_MODULE_18__.a,Object.assign({},controlsToProps(args)))};Basic.displayName="Basic",Basic.argTypes=argTypes,Basic.args={symbol:"BTC",decimalPlaces:8,logos:{coin:"https://upload.wikimedia.org/wikipedia/commons/c/c5/Bitcoin_logo.svg"},address:"1BitcoinEaterAddressDontSendf59kuE",amount:{toPay:.9},noShadow:!1};var Detailed=function Detailed(args){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_22__.jsx)(_PaymentRequest__WEBPACK_IMPORTED_MODULE_18__.a,Object.assign({status:_enums_paymentStatus__WEBPACK_IMPORTED_MODULE_19__.a.PENDING},controlsToProps(args)))};Detailed.displayName="Detailed",Detailed.argTypes=argTypes,Detailed.args=Object.assign({},Basic.args,{showQRCode:!0,status:_enums_paymentStatus__WEBPACK_IMPORTED_MODULE_19__.a.PENDING,sellerName:"Such Company LTD",logos:{coin:"https://upload.wikimedia.org/wikipedia/commons/c/c5/Bitcoin_logo.svg",company:_assets_fictiveCompany_png__WEBPACK_IMPORTED_MODULE_21__.a},amount:{toPay:.9,received:0},deadline:{dateLocale:"en-US",datetime:dueDate,humanized:!0}});var AnimatedStatus=function AnimatedStatus(args){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_22__.jsx)(_PaymentRequest__WEBPACK_IMPORTED_MODULE_18__.a,Object.assign({waitAnimation:!0},controlsToProps(args)))};AnimatedStatus.displayName="AnimatedStatus",AnimatedStatus.argTypes=argTypes,AnimatedStatus.args=Object.assign({},Detailed.args,{waitAnimation:!0});var Transacted=function Transacted(args){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_22__.jsx)(_PaymentRequest__WEBPACK_IMPORTED_MODULE_18__.a,Object.assign({},controlsToProps(args)))};Transacted.displayName="Transacted",Transacted.argTypes=argTypes,Transacted.args=Object.assign({},Detailed.args,{amount:{toPay:.9,received:.2}});var txs=new Array(30).fill({txHash:"369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1",txUrl:"https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1",amount:.01},0,20),Completed=function Completed(args){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_22__.jsx)(_PaymentRequest__WEBPACK_IMPORTED_MODULE_18__.a,Object.assign({},controlsToProps(args)))};Completed.displayName="Completed",Completed.argTypes=argTypes,Completed.args=Object.assign({},Detailed.args,{status:_enums_paymentStatus__WEBPACK_IMPORTED_MODULE_19__.a.COMPLETE,transactions:txs,amount:{toPay:.2,received:.2}});var WithActions=function WithActions(args){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_22__.jsx)(_PaymentRequest__WEBPACK_IMPORTED_MODULE_18__.a,Object.assign({},controlsToProps(args)))};WithActions.displayName="WithActions",WithActions.argTypes=argTypes,WithActions.args=Object.assign({},Detailed.args,{transactions:[{txHash:"369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1",txUrl:"https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1",amount:.1},{txHash:"519f6c9581ce27e0a59f5f8e427b672087e1f2eb1aead0d66288de62ed3e9647",txUrl:"https://www.blockchain.com/btc/tx/519f6c9581ce27e0a59f5f8e427b672087e1f2eb1aead0d66288de62ed3e9647",amount:.1}],helpUrl:"https://github.com/PaulFasola/adoption/blob/master/README.md",onCancel:function onCancel(){Object(_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_20__.action)("onCancel"),alert("User wants to cancel, do something here!")}});var CustomStrings=function CustomStrings(args){var locales=_defineProperty({},"en-US",{paymentRequest:{cancel:"Very cancelling",seller:"Seller",deadline:"Deadline",txStatus:{complete:"Done o/",failed:"Failed :(",pending:"is pending..."},request:"Pay {amount} {symbol} to get your item",help:"Wow, help here",status:"Transaction",receivedAmount:"Received:",remainingAmount:"Remaining:",transactions:"{txAmount} transactions"}});return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_22__.jsx)(_providers_localization_localizationProvider__WEBPACK_IMPORTED_MODULE_17__.b,{customLocales:locales,children:Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_22__.jsx)(_PaymentRequest__WEBPACK_IMPORTED_MODULE_18__.a,Object.assign({},controlsToProps(args)))})};CustomStrings.displayName="CustomStrings",CustomStrings.argTypes=argTypes,CustomStrings.args=Object.assign({},WithActions.args,{customStatusText:"Custom status message"});var Scenario=function Scenario(){var _useState2=_slicedToArray(Object(react__WEBPACK_IMPORTED_MODULE_16__.useState)(),2),status=_useState2[0],setStatus=_useState2[1],handleClick=function handleClick(status){return function(){return setStatus(status)}};return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_22__.jsxs)(react__WEBPACK_IMPORTED_MODULE_16__.Fragment,{children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_22__.jsxs)("div",{style:{marginBottom:"20px"},children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_22__.jsx)("button",{onClick:handleClick(_enums_paymentStatus__WEBPACK_IMPORTED_MODULE_19__.a.COMPLETE),children:"Trigger success"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_22__.jsx)("button",{onClick:handleClick(_enums_paymentStatus__WEBPACK_IMPORTED_MODULE_19__.a.FAILED),children:"Trigger failure"})]}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_22__.jsx)(_PaymentRequest__WEBPACK_IMPORTED_MODULE_18__.a,{symbol:"BTC",decimalPlaces:8,sellerName:"Such Company LTD",logos:{coin:"https://upload.wikimedia.org/wikipedia/commons/c/c5/Bitcoin_logo.svg",company:_assets_fictiveCompany_png__WEBPACK_IMPORTED_MODULE_21__.a},address:"1BitcoinEaterAddressDontSendf59kuE",amount:{toPay:.9,received:.2},transactions:[{txHash:"369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1",txUrl:"https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1",amount:.1},{txHash:"519f6c9581ce27e0a59f5f8e427b672087e1f2eb1aead0d66288de62ed3e9647",txUrl:"https://www.blockchain.com/btc/tx/519f6c9581ce27e0a59f5f8e427b672087e1f2eb1aead0d66288de62ed3e9647",amount:.1}],helpUrl:"https://github.com/PaulFasola/adoption/blob/master/README.md",deadline:{dateLocale:"en-US",datetime:dueDate,humanized:!0},status:status})]})};Scenario.displayName="Scenario",Scenario.parameters={controls:{hideNoControlsWarning:!0}}},1082:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Basic",(function(){return Basic})),__webpack_require__.d(__webpack_exports__,"Themed",(function(){return Themed}));__webpack_require__(9),__webpack_require__(105),__webpack_require__(0);var _parameters,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(88),_providers_theme_themeWrapper__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__(145),_tests_mocks__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__(261),___WEBPACK_IMPORTED_MODULE_6__=__webpack_require__(210),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__(1);function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}__webpack_exports__.default={parameters:(_parameters={storySource:{source:'\n    \n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = "\\n    \\n    // @ts-nocheck\\n    // @ts-ignore\\n    var __STORY__ = \\"import React from \'react\';\\\\nimport { action } from \'@storybook/addon-actions\';\\\\nimport { Story } from \'@storybook/react\';\\\\nimport { ITheme } from \'../../providers/theme/ITheme\';\\\\nimport { ThemeWrapper } from \'../../providers/theme/themeWrapper\';\\\\nimport { activeProtocols } from \'./__tests__/mocks\';\\\\nimport { IProps } from \'./interfaces\';\\\\nimport { ProtocolSelector } from \'.\';\\\\n\\\\nexport default {\\\\n  title: \'Components/ProtocolSelector\',\\\\n};\\\\n\\\\nconst args = {\\\\n  list: activeProtocols,\\\\n};\\\\n\\\\nexport const Basic: Story<IProps> = (args) => {\\\\n  return <ProtocolSelector onChange={action(\'onChange\')} {...args} />;\\\\n};\\\\nBasic.args = args;\\\\n\\\\nexport const Themed: Story<IProps> = (args) => {\\\\n  const customThemes: Record<string, Partial<ITheme>> = {\\\\n    ugly: {\\\\n      primary: {\\\\n        hoverColor: \'blue\',\\\\n        hoverBgColor: \'green\',\\\\n      },\\\\n      defaultButton: {\\\\n        backgroundColor: \'pink\',\\\\n        color: \'yellow\',\\\\n        hoverBgColor: \'red\',\\\\n      },\\\\n    },\\\\n  };\\\\n\\\\n  return (\\\\n    <ThemeWrapper customThemes={customThemes}>\\\\n      <ProtocolSelector {...args} />\\\\n    </ThemeWrapper>\\\\n  );\\\\n};\\\\nThemed.args = args;\\\\n\\";\\n    // @ts-ignore\\n    var __LOCATIONS_MAP__ = {\\"Basic\\":{\\"startLoc\\":{\\"col\\":36,\\"line\\":18},\\"endLoc\\":{\\"col\\":1,\\"line\\":20},\\"startBody\\":{\\"col\\":36,\\"line\\":18},\\"endBody\\":{\\"col\\":1,\\"line\\":20}},\\"Themed\\":{\\"startLoc\\":{\\"col\\":37,\\"line\\":23},\\"endLoc\\":{\\"col\\":1,\\"line\\":43},\\"startBody\\":{\\"col\\":37,\\"line\\":23},\\"endBody\\":{\\"col\\":1,\\"line\\":43}}};\\n    \\nimport React from \'react\';\\nimport { action } from \'@storybook/addon-actions\';\\nimport { Story } from \'@storybook/react\';\\nimport { ITheme } from \'../../providers/theme/ITheme\';\\nimport { ThemeWrapper } from \'../../providers/theme/themeWrapper\';\\nimport { activeProtocols } from \'./__tests__/mocks\';\\nimport { IProps } from \'./interfaces\';\\nimport { ProtocolSelector } from \'.\';\\n\\nexport default {parameters: {\\"storySource\\":{\\"source\\":\\"import React from \'react\';\\\\nimport { action } from \'@storybook/addon-actions\';\\\\nimport { Story } from \'@storybook/react\';\\\\nimport { ITheme } from \'../../providers/theme/ITheme\';\\\\nimport { ThemeWrapper } from \'../../providers/theme/themeWrapper\';\\\\nimport { activeProtocols } from \'./__tests__/mocks\';\\\\nimport { IProps } from \'./interfaces\';\\\\nimport { ProtocolSelector } from \'.\';\\\\n\\\\nexport default {\\\\n  title: \'Components/ProtocolSelector\',\\\\n};\\\\n\\\\nconst args = {\\\\n  list: activeProtocols,\\\\n};\\\\n\\\\nexport const Basic: Story<IProps> = (args) => {\\\\n  return <ProtocolSelector onChange={action(\'onChange\')} {...args} />;\\\\n};\\\\nBasic.args = args;\\\\n\\\\nexport const Themed: Story<IProps> = (args) => {\\\\n  const customThemes: Record<string, Partial<ITheme>> = {\\\\n    ugly: {\\\\n      primary: {\\\\n        hoverColor: \'blue\',\\\\n        hoverBgColor: \'green\',\\\\n      },\\\\n      defaultButton: {\\\\n        backgroundColor: \'pink\',\\\\n        color: \'yellow\',\\\\n        hoverBgColor: \'red\',\\\\n      },\\\\n    },\\\\n  };\\\\n\\\\n  return (\\\\n    <ThemeWrapper customThemes={customThemes}>\\\\n      <ProtocolSelector {...args} />\\\\n    </ThemeWrapper>\\\\n  );\\\\n};\\\\nThemed.args = args;\\\\n\\",\\"locationsMap\\":{\\"basic\\":{\\"startLoc\\":{\\"col\\":36,\\"line\\":18},\\"endLoc\\":{\\"col\\":1,\\"line\\":20},\\"startBody\\":{\\"col\\":36,\\"line\\":18},\\"endBody\\":{\\"col\\":1,\\"line\\":20}},\\"themed\\":{\\"startLoc\\":{\\"col\\":37,\\"line\\":23},\\"endLoc\\":{\\"col\\":1,\\"line\\":43},\\"startBody\\":{\\"col\\":37,\\"line\\":23},\\"endBody\\":{\\"col\\":1,\\"line\\":43}}}},},\\n  title: \'Components/ProtocolSelector\',\\n};\\n\\nconst args = {\\n  list: activeProtocols,\\n};\\n\\nexport const Basic: Story<IProps> = (args) => {\\n  return <ProtocolSelector onChange={action(\'onChange\')} {...args} />;\\n};;\\nBasic.args = args;\\n\\nexport const Themed: Story<IProps> = (args) => {\\n  const customThemes: Record<string, Partial<ITheme>> = {\\n    ugly: {\\n      primary: {\\n        hoverColor: \'blue\',\\n        hoverBgColor: \'green\',\\n      },\\n      defaultButton: {\\n        backgroundColor: \'pink\',\\n        color: \'yellow\',\\n        hoverBgColor: \'red\',\\n      },\\n    },\\n  };\\n\\n  return (\\n    <ThemeWrapper customThemes={customThemes}>\\n      <ProtocolSelector {...args} />\\n    </ThemeWrapper>\\n  );\\n};\\nThemed.args = args;\\n";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {"Basic":{"startLoc":{"col":36,"line":26},"endLoc":{"col":1,"line":28},"startBody":{"col":36,"line":26},"endBody":{"col":1,"line":28}},"Themed":{"startLoc":{"col":37,"line":31},"endLoc":{"col":1,"line":51},"startBody":{"col":37,"line":31},"endBody":{"col":1,"line":51}}};\n    \n\n    \n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = "import React from \'react\';\\nimport { action } from \'@storybook/addon-actions\';\\nimport { Story } from \'@storybook/react\';\\nimport { ITheme } from \'../../providers/theme/ITheme\';\\nimport { ThemeWrapper } from \'../../providers/theme/themeWrapper\';\\nimport { activeProtocols } from \'./__tests__/mocks\';\\nimport { IProps } from \'./interfaces\';\\nimport { ProtocolSelector } from \'.\';\\n\\nexport default {\\n  title: \'Components/ProtocolSelector\',\\n};\\n\\nconst args = {\\n  list: activeProtocols,\\n};\\n\\nexport const Basic: Story<IProps> = (args) => {\\n  return <ProtocolSelector onChange={action(\'onChange\')} {...args} />;\\n};\\nBasic.args = args;\\n\\nexport const Themed: Story<IProps> = (args) => {\\n  const customThemes: Record<string, Partial<ITheme>> = {\\n    ugly: {\\n      primary: {\\n        hoverColor: \'blue\',\\n        hoverBgColor: \'green\',\\n      },\\n      defaultButton: {\\n        backgroundColor: \'pink\',\\n        color: \'yellow\',\\n        hoverBgColor: \'red\',\\n      },\\n    },\\n  };\\n\\n  return (\\n    <ThemeWrapper customThemes={customThemes}>\\n      <ProtocolSelector {...args} />\\n    </ThemeWrapper>\\n  );\\n};\\nThemed.args = args;\\n";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {"Basic":{"startLoc":{"col":36,"line":18},"endLoc":{"col":1,"line":20},"startBody":{"col":36,"line":18},"endBody":{"col":1,"line":20}},"Themed":{"startLoc":{"col":37,"line":23},"endLoc":{"col":1,"line":43},"startBody":{"col":37,"line":23},"endBody":{"col":1,"line":43}}};\n    \nimport React from \'react\';\nimport { action } from \'@storybook/addon-actions\';\nimport { Story } from \'@storybook/react\';\nimport { ITheme } from \'../../providers/theme/ITheme\';\nimport { ThemeWrapper } from \'../../providers/theme/themeWrapper\';\nimport { activeProtocols } from \'./__tests__/mocks\';\nimport { IProps } from \'./interfaces\';\nimport { ProtocolSelector } from \'.\';\n\nexport default {parameters: {"storySource":{"source":"\\n    \\n    // @ts-nocheck\\n    // @ts-ignore\\n    var __STORY__ = \\"import React from \'react\';\\\\nimport { action } from \'@storybook/addon-actions\';\\\\nimport { Story } from \'@storybook/react\';\\\\nimport { ITheme } from \'../../providers/theme/ITheme\';\\\\nimport { ThemeWrapper } from \'../../providers/theme/themeWrapper\';\\\\nimport { activeProtocols } from \'./__tests__/mocks\';\\\\nimport { IProps } from \'./interfaces\';\\\\nimport { ProtocolSelector } from \'.\';\\\\n\\\\nexport default {\\\\n  title: \'Components/ProtocolSelector\',\\\\n};\\\\n\\\\nconst args = {\\\\n  list: activeProtocols,\\\\n};\\\\n\\\\nexport const Basic: Story<IProps> = (args) => {\\\\n  return <ProtocolSelector onChange={action(\'onChange\')} {...args} />;\\\\n};\\\\nBasic.args = args;\\\\n\\\\nexport const Themed: Story<IProps> = (args) => {\\\\n  const customThemes: Record<string, Partial<ITheme>> = {\\\\n    ugly: {\\\\n      primary: {\\\\n        hoverColor: \'blue\',\\\\n        hoverBgColor: \'green\',\\\\n      },\\\\n      defaultButton: {\\\\n        backgroundColor: \'pink\',\\\\n        color: \'yellow\',\\\\n        hoverBgColor: \'red\',\\\\n      },\\\\n    },\\\\n  };\\\\n\\\\n  return (\\\\n    <ThemeWrapper customThemes={customThemes}>\\\\n      <ProtocolSelector {...args} />\\\\n    </ThemeWrapper>\\\\n  );\\\\n};\\\\nThemed.args = args;\\\\n\\";\\n    // @ts-ignore\\n    var __LOCATIONS_MAP__ = {\\"Basic\\":{\\"startLoc\\":{\\"col\\":36,\\"line\\":18},\\"endLoc\\":{\\"col\\":1,\\"line\\":20},\\"startBody\\":{\\"col\\":36,\\"line\\":18},\\"endBody\\":{\\"col\\":1,\\"line\\":20}},\\"Themed\\":{\\"startLoc\\":{\\"col\\":37,\\"line\\":23},\\"endLoc\\":{\\"col\\":1,\\"line\\":43},\\"startBody\\":{\\"col\\":37,\\"line\\":23},\\"endBody\\":{\\"col\\":1,\\"line\\":43}}};\\n    \\nimport React from \'react\';\\nimport { action } from \'@storybook/addon-actions\';\\nimport { Story } from \'@storybook/react\';\\nimport { ITheme } from \'../../providers/theme/ITheme\';\\nimport { ThemeWrapper } from \'../../providers/theme/themeWrapper\';\\nimport { activeProtocols } from \'./__tests__/mocks\';\\nimport { IProps } from \'./interfaces\';\\nimport { ProtocolSelector } from \'.\';\\n\\nexport default {parameters: {\\"storySource\\":{\\"source\\":\\"import React from \'react\';\\\\nimport { action } from \'@storybook/addon-actions\';\\\\nimport { Story } from \'@storybook/react\';\\\\nimport { ITheme } from \'../../providers/theme/ITheme\';\\\\nimport { ThemeWrapper } from \'../../providers/theme/themeWrapper\';\\\\nimport { activeProtocols } from \'./__tests__/mocks\';\\\\nimport { IProps } from \'./interfaces\';\\\\nimport { ProtocolSelector } from \'.\';\\\\n\\\\nexport default {\\\\n  title: \'Components/ProtocolSelector\',\\\\n};\\\\n\\\\nconst args = {\\\\n  list: activeProtocols,\\\\n};\\\\n\\\\nexport const Basic: Story<IProps> = (args) => {\\\\n  return <ProtocolSelector onChange={action(\'onChange\')} {...args} />;\\\\n};\\\\nBasic.args = args;\\\\n\\\\nexport const Themed: Story<IProps> = (args) => {\\\\n  const customThemes: Record<string, Partial<ITheme>> = {\\\\n    ugly: {\\\\n      primary: {\\\\n        hoverColor: \'blue\',\\\\n        hoverBgColor: \'green\',\\\\n      },\\\\n      defaultButton: {\\\\n        backgroundColor: \'pink\',\\\\n        color: \'yellow\',\\\\n        hoverBgColor: \'red\',\\\\n      },\\\\n    },\\\\n  };\\\\n\\\\n  return (\\\\n    <ThemeWrapper customThemes={customThemes}>\\\\n      <ProtocolSelector {...args} />\\\\n    </ThemeWrapper>\\\\n  );\\\\n};\\\\nThemed.args = args;\\\\n\\",\\"locationsMap\\":{\\"basic\\":{\\"startLoc\\":{\\"col\\":36,\\"line\\":18},\\"endLoc\\":{\\"col\\":1,\\"line\\":20},\\"startBody\\":{\\"col\\":36,\\"line\\":18},\\"endBody\\":{\\"col\\":1,\\"line\\":20}},\\"themed\\":{\\"startLoc\\":{\\"col\\":37,\\"line\\":23},\\"endLoc\\":{\\"col\\":1,\\"line\\":43},\\"startBody\\":{\\"col\\":37,\\"line\\":23},\\"endBody\\":{\\"col\\":1,\\"line\\":43}}}},},\\n  title: \'Components/ProtocolSelector\',\\n};\\n\\nconst args = {\\n  list: activeProtocols,\\n};\\n\\nexport const Basic: Story<IProps> = (args) => {\\n  return <ProtocolSelector onChange={action(\'onChange\')} {...args} />;\\n};;\\nBasic.args = args;\\n\\nexport const Themed: Story<IProps> = (args) => {\\n  const customThemes: Record<string, Partial<ITheme>> = {\\n    ugly: {\\n      primary: {\\n        hoverColor: \'blue\',\\n        hoverBgColor: \'green\',\\n      },\\n      defaultButton: {\\n        backgroundColor: \'pink\',\\n        color: \'yellow\',\\n        hoverBgColor: \'red\',\\n      },\\n    },\\n  };\\n\\n  return (\\n    <ThemeWrapper customThemes={customThemes}>\\n      <ProtocolSelector {...args} />\\n    </ThemeWrapper>\\n  );\\n};\\nThemed.args = args;\\n","locationsMap":{"basic":{"startLoc":{"col":36,"line":26},"endLoc":{"col":1,"line":28},"startBody":{"col":36,"line":26},"endBody":{"col":1,"line":28}},"themed":{"startLoc":{"col":37,"line":31},"endLoc":{"col":1,"line":51},"startBody":{"col":37,"line":31},"endBody":{"col":1,"line":51}}}},"storySource":{"source":"import React from \'react\';\\nimport { action } from \'@storybook/addon-actions\';\\nimport { Story } from \'@storybook/react\';\\nimport { ITheme } from \'../../providers/theme/ITheme\';\\nimport { ThemeWrapper } from \'../../providers/theme/themeWrapper\';\\nimport { activeProtocols } from \'./__tests__/mocks\';\\nimport { IProps } from \'./interfaces\';\\nimport { ProtocolSelector } from \'.\';\\n\\nexport default {\\n  title: \'Components/ProtocolSelector\',\\n};\\n\\nconst args = {\\n  list: activeProtocols,\\n};\\n\\nexport const Basic: Story<IProps> = (args) => {\\n  return <ProtocolSelector onChange={action(\'onChange\')} {...args} />;\\n};\\nBasic.args = args;\\n\\nexport const Themed: Story<IProps> = (args) => {\\n  const customThemes: Record<string, Partial<ITheme>> = {\\n    ugly: {\\n      primary: {\\n        hoverColor: \'blue\',\\n        hoverBgColor: \'green\',\\n      },\\n      defaultButton: {\\n        backgroundColor: \'pink\',\\n        color: \'yellow\',\\n        hoverBgColor: \'red\',\\n      },\\n    },\\n  };\\n\\n  return (\\n    <ThemeWrapper customThemes={customThemes}>\\n      <ProtocolSelector {...args} />\\n    </ThemeWrapper>\\n  );\\n};\\nThemed.args = args;\\n","locationsMap":{"basic":{"startLoc":{"col":36,"line":18},"endLoc":{"col":1,"line":20},"startBody":{"col":36,"line":18},"endBody":{"col":1,"line":20}},"themed":{"startLoc":{"col":37,"line":23},"endLoc":{"col":1,"line":43},"startBody":{"col":37,"line":23},"endBody":{"col":1,"line":43}}}},},\n  title: \'Components/ProtocolSelector\',\n};\n\nconst args = {\n  list: activeProtocols,\n};\n\nexport const Basic: Story<IProps> = (args) => {\n  return <ProtocolSelector onChange={action(\'onChange\')} {...args} />;\n};;;\nBasic.args = args;\n\nexport const Themed: Story<IProps> = (args) => {\n  const customThemes: Record<string, Partial<ITheme>> = {\n    ugly: {\n      primary: {\n        hoverColor: \'blue\',\n        hoverBgColor: \'green\',\n      },\n      defaultButton: {\n        backgroundColor: \'pink\',\n        color: \'yellow\',\n        hoverBgColor: \'red\',\n      },\n    },\n  };\n\n  return (\n    <ThemeWrapper customThemes={customThemes}>\n      <ProtocolSelector {...args} />\n    </ThemeWrapper>\n  );\n};\nThemed.args = args;\n',locationsMap:{basic:{startLoc:{col:36,line:34},endLoc:{col:1,line:36},startBody:{col:36,line:34},endBody:{col:1,line:36}},themed:{startLoc:{col:37,line:39},endLoc:{col:1,line:59},startBody:{col:37,line:39},endBody:{col:1,line:59}}}}},_defineProperty(_parameters,"storySource",{source:'\n    \n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = "import React from \'react\';\\nimport { action } from \'@storybook/addon-actions\';\\nimport { Story } from \'@storybook/react\';\\nimport { ITheme } from \'../../providers/theme/ITheme\';\\nimport { ThemeWrapper } from \'../../providers/theme/themeWrapper\';\\nimport { activeProtocols } from \'./__tests__/mocks\';\\nimport { IProps } from \'./interfaces\';\\nimport { ProtocolSelector } from \'.\';\\n\\nexport default {\\n  title: \'Components/ProtocolSelector\',\\n};\\n\\nconst args = {\\n  list: activeProtocols,\\n};\\n\\nexport const Basic: Story<IProps> = (args) => {\\n  return <ProtocolSelector onChange={action(\'onChange\')} {...args} />;\\n};\\nBasic.args = args;\\n\\nexport const Themed: Story<IProps> = (args) => {\\n  const customThemes: Record<string, Partial<ITheme>> = {\\n    ugly: {\\n      primary: {\\n        hoverColor: \'blue\',\\n        hoverBgColor: \'green\',\\n      },\\n      defaultButton: {\\n        backgroundColor: \'pink\',\\n        color: \'yellow\',\\n        hoverBgColor: \'red\',\\n      },\\n    },\\n  };\\n\\n  return (\\n    <ThemeWrapper customThemes={customThemes}>\\n      <ProtocolSelector {...args} />\\n    </ThemeWrapper>\\n  );\\n};\\nThemed.args = args;\\n";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {"Basic":{"startLoc":{"col":36,"line":18},"endLoc":{"col":1,"line":20},"startBody":{"col":36,"line":18},"endBody":{"col":1,"line":20}},"Themed":{"startLoc":{"col":37,"line":23},"endLoc":{"col":1,"line":43},"startBody":{"col":37,"line":23},"endBody":{"col":1,"line":43}}};\n    \nimport React from \'react\';\nimport { action } from \'@storybook/addon-actions\';\nimport { Story } from \'@storybook/react\';\nimport { ITheme } from \'../../providers/theme/ITheme\';\nimport { ThemeWrapper } from \'../../providers/theme/themeWrapper\';\nimport { activeProtocols } from \'./__tests__/mocks\';\nimport { IProps } from \'./interfaces\';\nimport { ProtocolSelector } from \'.\';\n\nexport default {parameters: {"storySource":{"source":"import React from \'react\';\\nimport { action } from \'@storybook/addon-actions\';\\nimport { Story } from \'@storybook/react\';\\nimport { ITheme } from \'../../providers/theme/ITheme\';\\nimport { ThemeWrapper } from \'../../providers/theme/themeWrapper\';\\nimport { activeProtocols } from \'./__tests__/mocks\';\\nimport { IProps } from \'./interfaces\';\\nimport { ProtocolSelector } from \'.\';\\n\\nexport default {\\n  title: \'Components/ProtocolSelector\',\\n};\\n\\nconst args = {\\n  list: activeProtocols,\\n};\\n\\nexport const Basic: Story<IProps> = (args) => {\\n  return <ProtocolSelector onChange={action(\'onChange\')} {...args} />;\\n};\\nBasic.args = args;\\n\\nexport const Themed: Story<IProps> = (args) => {\\n  const customThemes: Record<string, Partial<ITheme>> = {\\n    ugly: {\\n      primary: {\\n        hoverColor: \'blue\',\\n        hoverBgColor: \'green\',\\n      },\\n      defaultButton: {\\n        backgroundColor: \'pink\',\\n        color: \'yellow\',\\n        hoverBgColor: \'red\',\\n      },\\n    },\\n  };\\n\\n  return (\\n    <ThemeWrapper customThemes={customThemes}>\\n      <ProtocolSelector {...args} />\\n    </ThemeWrapper>\\n  );\\n};\\nThemed.args = args;\\n","locationsMap":{"basic":{"startLoc":{"col":36,"line":18},"endLoc":{"col":1,"line":20},"startBody":{"col":36,"line":18},"endBody":{"col":1,"line":20}},"themed":{"startLoc":{"col":37,"line":23},"endLoc":{"col":1,"line":43},"startBody":{"col":37,"line":23},"endBody":{"col":1,"line":43}}}},},\n  title: \'Components/ProtocolSelector\',\n};\n\nconst args = {\n  list: activeProtocols,\n};\n\nexport const Basic: Story<IProps> = (args) => {\n  return <ProtocolSelector onChange={action(\'onChange\')} {...args} />;\n};;\nBasic.args = args;\n\nexport const Themed: Story<IProps> = (args) => {\n  const customThemes: Record<string, Partial<ITheme>> = {\n    ugly: {\n      primary: {\n        hoverColor: \'blue\',\n        hoverBgColor: \'green\',\n      },\n      defaultButton: {\n        backgroundColor: \'pink\',\n        color: \'yellow\',\n        hoverBgColor: \'red\',\n      },\n    },\n  };\n\n  return (\n    <ThemeWrapper customThemes={customThemes}>\n      <ProtocolSelector {...args} />\n    </ThemeWrapper>\n  );\n};\nThemed.args = args;\n',locationsMap:{basic:{startLoc:{col:36,line:26},endLoc:{col:1,line:28},startBody:{col:36,line:26},endBody:{col:1,line:28}},themed:{startLoc:{col:37,line:31},endLoc:{col:1,line:51},startBody:{col:37,line:31},endBody:{col:1,line:51}}}}),_defineProperty(_parameters,"storySource",{source:"import React from 'react';\nimport { action } from '@storybook/addon-actions';\nimport { Story } from '@storybook/react';\nimport { ITheme } from '../../providers/theme/ITheme';\nimport { ThemeWrapper } from '../../providers/theme/themeWrapper';\nimport { activeProtocols } from './__tests__/mocks';\nimport { IProps } from './interfaces';\nimport { ProtocolSelector } from '.';\n\nexport default {\n  title: 'Components/ProtocolSelector',\n};\n\nconst args = {\n  list: activeProtocols,\n};\n\nexport const Basic: Story<IProps> = (args) => {\n  return <ProtocolSelector onChange={action('onChange')} {...args} />;\n};\nBasic.args = args;\n\nexport const Themed: Story<IProps> = (args) => {\n  const customThemes: Record<string, Partial<ITheme>> = {\n    ugly: {\n      primary: {\n        hoverColor: 'blue',\n        hoverBgColor: 'green',\n      },\n      defaultButton: {\n        backgroundColor: 'pink',\n        color: 'yellow',\n        hoverBgColor: 'red',\n      },\n    },\n  };\n\n  return (\n    <ThemeWrapper customThemes={customThemes}>\n      <ProtocolSelector {...args} />\n    </ThemeWrapper>\n  );\n};\nThemed.args = args;\n",locationsMap:{basic:{startLoc:{col:36,line:18},endLoc:{col:1,line:20},startBody:{col:36,line:18},endBody:{col:1,line:20}},themed:{startLoc:{col:37,line:23},endLoc:{col:1,line:43},startBody:{col:37,line:23},endBody:{col:1,line:43}}}}),_parameters),title:"Components/ProtocolSelector"};var args={list:_tests_mocks__WEBPACK_IMPORTED_MODULE_5__.a},Basic=function Basic(args){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(___WEBPACK_IMPORTED_MODULE_6__.a,Object.assign({onChange:Object(_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_3__.action)("onChange")},args))};Basic.displayName="Basic",Basic.args=args;var Themed=function Themed(args){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(_providers_theme_themeWrapper__WEBPACK_IMPORTED_MODULE_4__.a,{customThemes:{ugly:{primary:{hoverColor:"blue",hoverBgColor:"green"},defaultButton:{backgroundColor:"pink",color:"yellow",hoverBgColor:"red"}}},children:Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(___WEBPACK_IMPORTED_MODULE_6__.a,Object.assign({},args))})};Themed.displayName="Themed",Themed.args=args},1083:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Presets",(function(){return Presets})),__webpack_require__.d(__webpack_exports__,"CustomThemes",(function(){return CustomThemes}));__webpack_require__(106),__webpack_require__(356),__webpack_require__(105);var _parameters,react__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(0),_components_PaymentRequest_enums_paymentStatus__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__(48),_components_TransactionStatus__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__(55),_components_PaymentRequest__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__(77),_themeProvider__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__(122),_themeWrapper__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__(145),_assets_fictiveCompany_png__WEBPACK_IMPORTED_MODULE_9__=__webpack_require__(146),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__=__webpack_require__(1);function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}__webpack_exports__.default={parameters:(_parameters={storySource:{source:"\n    \n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"\\n    \\n    // @ts-nocheck\\n    // @ts-ignore\\n    var __STORY__ = \\\"import React, { useContext } from 'react';\\\\nimport { PaymentStatus } from '../../components/PaymentRequest/enums/paymentStatus';\\\\nimport { TransactionStatus, TxStatus } from '../../components/TransactionStatus';\\\\nimport { PaymentRequest } from '../../components/PaymentRequest';\\\\nimport { ThemeContext } from './themeProvider';\\\\nimport { ITheme } from './ITheme';\\\\nimport { ThemeWrapper } from './themeWrapper';\\\\nimport { Meta, Story } from '@storybook/react';\\\\n\\\\nimport companyAsset from '../../assets/fictiveCompany.png';\\\\n\\\\nexport default {\\\\n  title: 'ThemeProvider',\\\\n} as Meta;\\\\n\\\\nconst LabRat = (): React.ReactElement => (\\\\n  <>\\\\n    <TransactionStatus\\\\n      status={TxStatus.PENDING}\\\\n      amount='0.1'\\\\n      symbol='BTC'\\\\n      txURL='https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1'\\\\n    />\\\\n    <br />\\\\n    <PaymentRequest\\\\n      symbol='BTC'\\\\n      decimalPlaces={8}\\\\n      sellerName='Such Company LTD'\\\\n      logos={{\\\\n        coin: 'https://upload.wikimedia.org/wikipedia/commons/c/c5/Bitcoin_logo.svg',\\\\n        company: companyAsset,\\\\n      }}\\\\n      address='1BitcoinEaterAddressDontSendf59kuE'\\\\n      amount={{ toPay: 0.9, received: 0.2 }}\\\\n      transactions={[\\\\n        {\\\\n          txHash: '369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1',\\\\n          txUrl:\\\\n            'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1',\\\\n          amount: 0.1,\\\\n        },\\\\n        {\\\\n          txHash: '519f6c9581ce27e0a59f5f8e427b672087e1f2eb1aead0d66288de62ed3e9647',\\\\n          txUrl:\\\\n            'https://www.blockchain.com/btc/tx/519f6c9581ce27e0a59f5f8e427b672087e1f2eb1aead0d66288de62ed3e9647',\\\\n          amount: 0.1,\\\\n        },\\\\n      ]}\\\\n      helpUrl='https://github.com/PaulFasola/adoption/blob/master/README.md'\\\\n      deadline={{\\\\n        dateLocale: 'en-US',\\\\n        datetime: new Date(),\\\\n        humanized: true,\\\\n      }}\\\\n      status={PaymentStatus.PENDING}\\\\n    />\\\\n  </>\\\\n);\\\\n\\\\nexport const Presets: Story = () => (\\\\n  <ThemeWrapper>\\\\n    <LabRat />\\\\n  </ThemeWrapper>\\\\n);\\\\nPresets.parameters = {\\\\n  controls: { hideNoControlsWarning: true },\\\\n};\\\\n\\\\nexport const CustomThemes: Story = () => {\\\\n  const customThemes: Record<string, Partial<ITheme>> = {\\\\n    wow: {\\\\n      primary: {\\\\n        backgroundColor: 'pink',\\\\n        color: 'yellow',\\\\n      },\\\\n    },\\\\n    veryOrganic: {\\\\n      primary: {\\\\n        backgroundColor: 'lightgreen',\\\\n        color: 'darkgreen',\\\\n      },\\\\n    },\\\\n  };\\\\n\\\\n  const FailButton: React.FC = () => {\\\\n    const { switchTo } = useContext(ThemeContext);\\\\n    return (\\\\n      <button\\\\n        style={{ marginBottom: '1.5rem' }}\\\\n        onClick={() => {\\\\n          switchTo('thatDoesNotExist');\\\\n          setTimeout(() => {\\\\n            alert('Check the console below, a warning is waiting for you ;)');\\\\n          }, 200);\\\\n        }}\\\\n      >\\\\n        Go thatDoesNotExist (will fail).\\\\n      </button>\\\\n    );\\\\n  };\\\\n\\\\n  return (\\\\n    <ThemeWrapper customThemes={customThemes}>\\\\n      <FailButton />\\\\n      <LabRat />\\\\n    </ThemeWrapper>\\\\n  );\\\\n};\\\\nCustomThemes.parameters = {\\\\n  controls: { hideNoControlsWarning: true },\\\\n};\\\\n\\\";\\n    // @ts-ignore\\n    var __LOCATIONS_MAP__ = {\\\"Presets\\\":{\\\"startLoc\\\":{\\\"col\\\":30,\\\"line\\\":60},\\\"endLoc\\\":{\\\"col\\\":1,\\\"line\\\":64},\\\"startBody\\\":{\\\"col\\\":30,\\\"line\\\":60},\\\"endBody\\\":{\\\"col\\\":1,\\\"line\\\":64}},\\\"CustomThemes\\\":{\\\"startLoc\\\":{\\\"col\\\":35,\\\"line\\\":69},\\\"endLoc\\\":{\\\"col\\\":1,\\\"line\\\":108},\\\"startBody\\\":{\\\"col\\\":35,\\\"line\\\":69},\\\"endBody\\\":{\\\"col\\\":1,\\\"line\\\":108}}};\\n    \\nimport React, { useContext } from 'react';\\nimport { PaymentStatus } from '../../components/PaymentRequest/enums/paymentStatus';\\nimport { TransactionStatus, TxStatus } from '../../components/TransactionStatus';\\nimport { PaymentRequest } from '../../components/PaymentRequest';\\nimport { ThemeContext } from './themeProvider';\\nimport { ITheme } from './ITheme';\\nimport { ThemeWrapper } from './themeWrapper';\\nimport { Meta, Story } from '@storybook/react';\\n\\nimport companyAsset from '../../assets/fictiveCompany.png';\\n\\nexport default {parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"import React, { useContext } from 'react';\\\\nimport { PaymentStatus } from '../../components/PaymentRequest/enums/paymentStatus';\\\\nimport { TransactionStatus, TxStatus } from '../../components/TransactionStatus';\\\\nimport { PaymentRequest } from '../../components/PaymentRequest';\\\\nimport { ThemeContext } from './themeProvider';\\\\nimport { ITheme } from './ITheme';\\\\nimport { ThemeWrapper } from './themeWrapper';\\\\nimport { Meta, Story } from '@storybook/react';\\\\n\\\\nimport companyAsset from '../../assets/fictiveCompany.png';\\\\n\\\\nexport default {\\\\n  title: 'ThemeProvider',\\\\n} as Meta;\\\\n\\\\nconst LabRat = (): React.ReactElement => (\\\\n  <>\\\\n    <TransactionStatus\\\\n      status={TxStatus.PENDING}\\\\n      amount='0.1'\\\\n      symbol='BTC'\\\\n      txURL='https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1'\\\\n    />\\\\n    <br />\\\\n    <PaymentRequest\\\\n      symbol='BTC'\\\\n      decimalPlaces={8}\\\\n      sellerName='Such Company LTD'\\\\n      logos={{\\\\n        coin: 'https://upload.wikimedia.org/wikipedia/commons/c/c5/Bitcoin_logo.svg',\\\\n        company: companyAsset,\\\\n      }}\\\\n      address='1BitcoinEaterAddressDontSendf59kuE'\\\\n      amount={{ toPay: 0.9, received: 0.2 }}\\\\n      transactions={[\\\\n        {\\\\n          txHash: '369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1',\\\\n          txUrl:\\\\n            'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1',\\\\n          amount: 0.1,\\\\n        },\\\\n        {\\\\n          txHash: '519f6c9581ce27e0a59f5f8e427b672087e1f2eb1aead0d66288de62ed3e9647',\\\\n          txUrl:\\\\n            'https://www.blockchain.com/btc/tx/519f6c9581ce27e0a59f5f8e427b672087e1f2eb1aead0d66288de62ed3e9647',\\\\n          amount: 0.1,\\\\n        },\\\\n      ]}\\\\n      helpUrl='https://github.com/PaulFasola/adoption/blob/master/README.md'\\\\n      deadline={{\\\\n        dateLocale: 'en-US',\\\\n        datetime: new Date(),\\\\n        humanized: true,\\\\n      }}\\\\n      status={PaymentStatus.PENDING}\\\\n    />\\\\n  </>\\\\n);\\\\n\\\\nexport const Presets: Story = () => (\\\\n  <ThemeWrapper>\\\\n    <LabRat />\\\\n  </ThemeWrapper>\\\\n);\\\\nPresets.parameters = {\\\\n  controls: { hideNoControlsWarning: true },\\\\n};\\\\n\\\\nexport const CustomThemes: Story = () => {\\\\n  const customThemes: Record<string, Partial<ITheme>> = {\\\\n    wow: {\\\\n      primary: {\\\\n        backgroundColor: 'pink',\\\\n        color: 'yellow',\\\\n      },\\\\n    },\\\\n    veryOrganic: {\\\\n      primary: {\\\\n        backgroundColor: 'lightgreen',\\\\n        color: 'darkgreen',\\\\n      },\\\\n    },\\\\n  };\\\\n\\\\n  const FailButton: React.FC = () => {\\\\n    const { switchTo } = useContext(ThemeContext);\\\\n    return (\\\\n      <button\\\\n        style={{ marginBottom: '1.5rem' }}\\\\n        onClick={() => {\\\\n          switchTo('thatDoesNotExist');\\\\n          setTimeout(() => {\\\\n            alert('Check the console below, a warning is waiting for you ;)');\\\\n          }, 200);\\\\n        }}\\\\n      >\\\\n        Go thatDoesNotExist (will fail).\\\\n      </button>\\\\n    );\\\\n  };\\\\n\\\\n  return (\\\\n    <ThemeWrapper customThemes={customThemes}>\\\\n      <FailButton />\\\\n      <LabRat />\\\\n    </ThemeWrapper>\\\\n  );\\\\n};\\\\nCustomThemes.parameters = {\\\\n  controls: { hideNoControlsWarning: true },\\\\n};\\\\n\\\",\\\"locationsMap\\\":{\\\"presets\\\":{\\\"startLoc\\\":{\\\"col\\\":30,\\\"line\\\":60},\\\"endLoc\\\":{\\\"col\\\":1,\\\"line\\\":64},\\\"startBody\\\":{\\\"col\\\":30,\\\"line\\\":60},\\\"endBody\\\":{\\\"col\\\":1,\\\"line\\\":64}},\\\"custom-themes\\\":{\\\"startLoc\\\":{\\\"col\\\":35,\\\"line\\\":69},\\\"endLoc\\\":{\\\"col\\\":1,\\\"line\\\":108},\\\"startBody\\\":{\\\"col\\\":35,\\\"line\\\":69},\\\"endBody\\\":{\\\"col\\\":1,\\\"line\\\":108}}}},},\\n  title: 'ThemeProvider',\\n} as Meta;\\n\\nconst LabRat = (): React.ReactElement => (\\n  <>\\n    <TransactionStatus\\n      status={TxStatus.PENDING}\\n      amount='0.1'\\n      symbol='BTC'\\n      txURL='https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1'\\n    />\\n    <br />\\n    <PaymentRequest\\n      symbol='BTC'\\n      decimalPlaces={8}\\n      sellerName='Such Company LTD'\\n      logos={{\\n        coin: 'https://upload.wikimedia.org/wikipedia/commons/c/c5/Bitcoin_logo.svg',\\n        company: companyAsset,\\n      }}\\n      address='1BitcoinEaterAddressDontSendf59kuE'\\n      amount={{ toPay: 0.9, received: 0.2 }}\\n      transactions={[\\n        {\\n          txHash: '369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1',\\n          txUrl:\\n            'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1',\\n          amount: 0.1,\\n        },\\n        {\\n          txHash: '519f6c9581ce27e0a59f5f8e427b672087e1f2eb1aead0d66288de62ed3e9647',\\n          txUrl:\\n            'https://www.blockchain.com/btc/tx/519f6c9581ce27e0a59f5f8e427b672087e1f2eb1aead0d66288de62ed3e9647',\\n          amount: 0.1,\\n        },\\n      ]}\\n      helpUrl='https://github.com/PaulFasola/adoption/blob/master/README.md'\\n      deadline={{\\n        dateLocale: 'en-US',\\n        datetime: new Date(),\\n        humanized: true,\\n      }}\\n      status={PaymentStatus.PENDING}\\n    />\\n  </>\\n);\\n\\nexport const Presets: Story = () => (\\n  <ThemeWrapper>\\n    <LabRat />\\n  </ThemeWrapper>\\n);;\\nPresets.parameters = {\\n  controls: { hideNoControlsWarning: true },\\n};\\n\\nexport const CustomThemes: Story = () => {\\n  const customThemes: Record<string, Partial<ITheme>> = {\\n    wow: {\\n      primary: {\\n        backgroundColor: 'pink',\\n        color: 'yellow',\\n      },\\n    },\\n    veryOrganic: {\\n      primary: {\\n        backgroundColor: 'lightgreen',\\n        color: 'darkgreen',\\n      },\\n    },\\n  };\\n\\n  const FailButton: React.FC = () => {\\n    const { switchTo } = useContext(ThemeContext);\\n    return (\\n      <button\\n        style={{ marginBottom: '1.5rem' }}\\n        onClick={() => {\\n          switchTo('thatDoesNotExist');\\n          setTimeout(() => {\\n            alert('Check the console below, a warning is waiting for you ;)');\\n          }, 200);\\n        }}\\n      >\\n        Go thatDoesNotExist (will fail).\\n      </button>\\n    );\\n  };\\n\\n  return (\\n    <ThemeWrapper customThemes={customThemes}>\\n      <FailButton />\\n      <LabRat />\\n    </ThemeWrapper>\\n  );\\n};\\nCustomThemes.parameters = {\\n  controls: { hideNoControlsWarning: true },\\n};\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Presets\":{\"startLoc\":{\"col\":30,\"line\":68},\"endLoc\":{\"col\":1,\"line\":72},\"startBody\":{\"col\":30,\"line\":68},\"endBody\":{\"col\":1,\"line\":72}},\"CustomThemes\":{\"startLoc\":{\"col\":35,\"line\":77},\"endLoc\":{\"col\":1,\"line\":116},\"startBody\":{\"col\":35,\"line\":77},\"endBody\":{\"col\":1,\"line\":116}}};\n    \n\n    \n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React, { useContext } from 'react';\\nimport { PaymentStatus } from '../../components/PaymentRequest/enums/paymentStatus';\\nimport { TransactionStatus, TxStatus } from '../../components/TransactionStatus';\\nimport { PaymentRequest } from '../../components/PaymentRequest';\\nimport { ThemeContext } from './themeProvider';\\nimport { ITheme } from './ITheme';\\nimport { ThemeWrapper } from './themeWrapper';\\nimport { Meta, Story } from '@storybook/react';\\n\\nimport companyAsset from '../../assets/fictiveCompany.png';\\n\\nexport default {\\n  title: 'ThemeProvider',\\n} as Meta;\\n\\nconst LabRat = (): React.ReactElement => (\\n  <>\\n    <TransactionStatus\\n      status={TxStatus.PENDING}\\n      amount='0.1'\\n      symbol='BTC'\\n      txURL='https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1'\\n    />\\n    <br />\\n    <PaymentRequest\\n      symbol='BTC'\\n      decimalPlaces={8}\\n      sellerName='Such Company LTD'\\n      logos={{\\n        coin: 'https://upload.wikimedia.org/wikipedia/commons/c/c5/Bitcoin_logo.svg',\\n        company: companyAsset,\\n      }}\\n      address='1BitcoinEaterAddressDontSendf59kuE'\\n      amount={{ toPay: 0.9, received: 0.2 }}\\n      transactions={[\\n        {\\n          txHash: '369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1',\\n          txUrl:\\n            'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1',\\n          amount: 0.1,\\n        },\\n        {\\n          txHash: '519f6c9581ce27e0a59f5f8e427b672087e1f2eb1aead0d66288de62ed3e9647',\\n          txUrl:\\n            'https://www.blockchain.com/btc/tx/519f6c9581ce27e0a59f5f8e427b672087e1f2eb1aead0d66288de62ed3e9647',\\n          amount: 0.1,\\n        },\\n      ]}\\n      helpUrl='https://github.com/PaulFasola/adoption/blob/master/README.md'\\n      deadline={{\\n        dateLocale: 'en-US',\\n        datetime: new Date(),\\n        humanized: true,\\n      }}\\n      status={PaymentStatus.PENDING}\\n    />\\n  </>\\n);\\n\\nexport const Presets: Story = () => (\\n  <ThemeWrapper>\\n    <LabRat />\\n  </ThemeWrapper>\\n);\\nPresets.parameters = {\\n  controls: { hideNoControlsWarning: true },\\n};\\n\\nexport const CustomThemes: Story = () => {\\n  const customThemes: Record<string, Partial<ITheme>> = {\\n    wow: {\\n      primary: {\\n        backgroundColor: 'pink',\\n        color: 'yellow',\\n      },\\n    },\\n    veryOrganic: {\\n      primary: {\\n        backgroundColor: 'lightgreen',\\n        color: 'darkgreen',\\n      },\\n    },\\n  };\\n\\n  const FailButton: React.FC = () => {\\n    const { switchTo } = useContext(ThemeContext);\\n    return (\\n      <button\\n        style={{ marginBottom: '1.5rem' }}\\n        onClick={() => {\\n          switchTo('thatDoesNotExist');\\n          setTimeout(() => {\\n            alert('Check the console below, a warning is waiting for you ;)');\\n          }, 200);\\n        }}\\n      >\\n        Go thatDoesNotExist (will fail).\\n      </button>\\n    );\\n  };\\n\\n  return (\\n    <ThemeWrapper customThemes={customThemes}>\\n      <FailButton />\\n      <LabRat />\\n    </ThemeWrapper>\\n  );\\n};\\nCustomThemes.parameters = {\\n  controls: { hideNoControlsWarning: true },\\n};\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Presets\":{\"startLoc\":{\"col\":30,\"line\":60},\"endLoc\":{\"col\":1,\"line\":64},\"startBody\":{\"col\":30,\"line\":60},\"endBody\":{\"col\":1,\"line\":64}},\"CustomThemes\":{\"startLoc\":{\"col\":35,\"line\":69},\"endLoc\":{\"col\":1,\"line\":108},\"startBody\":{\"col\":35,\"line\":69},\"endBody\":{\"col\":1,\"line\":108}}};\n    \nimport React, { useContext } from 'react';\nimport { PaymentStatus } from '../../components/PaymentRequest/enums/paymentStatus';\nimport { TransactionStatus, TxStatus } from '../../components/TransactionStatus';\nimport { PaymentRequest } from '../../components/PaymentRequest';\nimport { ThemeContext } from './themeProvider';\nimport { ITheme } from './ITheme';\nimport { ThemeWrapper } from './themeWrapper';\nimport { Meta, Story } from '@storybook/react';\n\nimport companyAsset from '../../assets/fictiveCompany.png';\n\nexport default {parameters: {\"storySource\":{\"source\":\"\\n    \\n    // @ts-nocheck\\n    // @ts-ignore\\n    var __STORY__ = \\\"import React, { useContext } from 'react';\\\\nimport { PaymentStatus } from '../../components/PaymentRequest/enums/paymentStatus';\\\\nimport { TransactionStatus, TxStatus } from '../../components/TransactionStatus';\\\\nimport { PaymentRequest } from '../../components/PaymentRequest';\\\\nimport { ThemeContext } from './themeProvider';\\\\nimport { ITheme } from './ITheme';\\\\nimport { ThemeWrapper } from './themeWrapper';\\\\nimport { Meta, Story } from '@storybook/react';\\\\n\\\\nimport companyAsset from '../../assets/fictiveCompany.png';\\\\n\\\\nexport default {\\\\n  title: 'ThemeProvider',\\\\n} as Meta;\\\\n\\\\nconst LabRat = (): React.ReactElement => (\\\\n  <>\\\\n    <TransactionStatus\\\\n      status={TxStatus.PENDING}\\\\n      amount='0.1'\\\\n      symbol='BTC'\\\\n      txURL='https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1'\\\\n    />\\\\n    <br />\\\\n    <PaymentRequest\\\\n      symbol='BTC'\\\\n      decimalPlaces={8}\\\\n      sellerName='Such Company LTD'\\\\n      logos={{\\\\n        coin: 'https://upload.wikimedia.org/wikipedia/commons/c/c5/Bitcoin_logo.svg',\\\\n        company: companyAsset,\\\\n      }}\\\\n      address='1BitcoinEaterAddressDontSendf59kuE'\\\\n      amount={{ toPay: 0.9, received: 0.2 }}\\\\n      transactions={[\\\\n        {\\\\n          txHash: '369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1',\\\\n          txUrl:\\\\n            'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1',\\\\n          amount: 0.1,\\\\n        },\\\\n        {\\\\n          txHash: '519f6c9581ce27e0a59f5f8e427b672087e1f2eb1aead0d66288de62ed3e9647',\\\\n          txUrl:\\\\n            'https://www.blockchain.com/btc/tx/519f6c9581ce27e0a59f5f8e427b672087e1f2eb1aead0d66288de62ed3e9647',\\\\n          amount: 0.1,\\\\n        },\\\\n      ]}\\\\n      helpUrl='https://github.com/PaulFasola/adoption/blob/master/README.md'\\\\n      deadline={{\\\\n        dateLocale: 'en-US',\\\\n        datetime: new Date(),\\\\n        humanized: true,\\\\n      }}\\\\n      status={PaymentStatus.PENDING}\\\\n    />\\\\n  </>\\\\n);\\\\n\\\\nexport const Presets: Story = () => (\\\\n  <ThemeWrapper>\\\\n    <LabRat />\\\\n  </ThemeWrapper>\\\\n);\\\\nPresets.parameters = {\\\\n  controls: { hideNoControlsWarning: true },\\\\n};\\\\n\\\\nexport const CustomThemes: Story = () => {\\\\n  const customThemes: Record<string, Partial<ITheme>> = {\\\\n    wow: {\\\\n      primary: {\\\\n        backgroundColor: 'pink',\\\\n        color: 'yellow',\\\\n      },\\\\n    },\\\\n    veryOrganic: {\\\\n      primary: {\\\\n        backgroundColor: 'lightgreen',\\\\n        color: 'darkgreen',\\\\n      },\\\\n    },\\\\n  };\\\\n\\\\n  const FailButton: React.FC = () => {\\\\n    const { switchTo } = useContext(ThemeContext);\\\\n    return (\\\\n      <button\\\\n        style={{ marginBottom: '1.5rem' }}\\\\n        onClick={() => {\\\\n          switchTo('thatDoesNotExist');\\\\n          setTimeout(() => {\\\\n            alert('Check the console below, a warning is waiting for you ;)');\\\\n          }, 200);\\\\n        }}\\\\n      >\\\\n        Go thatDoesNotExist (will fail).\\\\n      </button>\\\\n    );\\\\n  };\\\\n\\\\n  return (\\\\n    <ThemeWrapper customThemes={customThemes}>\\\\n      <FailButton />\\\\n      <LabRat />\\\\n    </ThemeWrapper>\\\\n  );\\\\n};\\\\nCustomThemes.parameters = {\\\\n  controls: { hideNoControlsWarning: true },\\\\n};\\\\n\\\";\\n    // @ts-ignore\\n    var __LOCATIONS_MAP__ = {\\\"Presets\\\":{\\\"startLoc\\\":{\\\"col\\\":30,\\\"line\\\":60},\\\"endLoc\\\":{\\\"col\\\":1,\\\"line\\\":64},\\\"startBody\\\":{\\\"col\\\":30,\\\"line\\\":60},\\\"endBody\\\":{\\\"col\\\":1,\\\"line\\\":64}},\\\"CustomThemes\\\":{\\\"startLoc\\\":{\\\"col\\\":35,\\\"line\\\":69},\\\"endLoc\\\":{\\\"col\\\":1,\\\"line\\\":108},\\\"startBody\\\":{\\\"col\\\":35,\\\"line\\\":69},\\\"endBody\\\":{\\\"col\\\":1,\\\"line\\\":108}}};\\n    \\nimport React, { useContext } from 'react';\\nimport { PaymentStatus } from '../../components/PaymentRequest/enums/paymentStatus';\\nimport { TransactionStatus, TxStatus } from '../../components/TransactionStatus';\\nimport { PaymentRequest } from '../../components/PaymentRequest';\\nimport { ThemeContext } from './themeProvider';\\nimport { ITheme } from './ITheme';\\nimport { ThemeWrapper } from './themeWrapper';\\nimport { Meta, Story } from '@storybook/react';\\n\\nimport companyAsset from '../../assets/fictiveCompany.png';\\n\\nexport default {parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"import React, { useContext } from 'react';\\\\nimport { PaymentStatus } from '../../components/PaymentRequest/enums/paymentStatus';\\\\nimport { TransactionStatus, TxStatus } from '../../components/TransactionStatus';\\\\nimport { PaymentRequest } from '../../components/PaymentRequest';\\\\nimport { ThemeContext } from './themeProvider';\\\\nimport { ITheme } from './ITheme';\\\\nimport { ThemeWrapper } from './themeWrapper';\\\\nimport { Meta, Story } from '@storybook/react';\\\\n\\\\nimport companyAsset from '../../assets/fictiveCompany.png';\\\\n\\\\nexport default {\\\\n  title: 'ThemeProvider',\\\\n} as Meta;\\\\n\\\\nconst LabRat = (): React.ReactElement => (\\\\n  <>\\\\n    <TransactionStatus\\\\n      status={TxStatus.PENDING}\\\\n      amount='0.1'\\\\n      symbol='BTC'\\\\n      txURL='https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1'\\\\n    />\\\\n    <br />\\\\n    <PaymentRequest\\\\n      symbol='BTC'\\\\n      decimalPlaces={8}\\\\n      sellerName='Such Company LTD'\\\\n      logos={{\\\\n        coin: 'https://upload.wikimedia.org/wikipedia/commons/c/c5/Bitcoin_logo.svg',\\\\n        company: companyAsset,\\\\n      }}\\\\n      address='1BitcoinEaterAddressDontSendf59kuE'\\\\n      amount={{ toPay: 0.9, received: 0.2 }}\\\\n      transactions={[\\\\n        {\\\\n          txHash: '369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1',\\\\n          txUrl:\\\\n            'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1',\\\\n          amount: 0.1,\\\\n        },\\\\n        {\\\\n          txHash: '519f6c9581ce27e0a59f5f8e427b672087e1f2eb1aead0d66288de62ed3e9647',\\\\n          txUrl:\\\\n            'https://www.blockchain.com/btc/tx/519f6c9581ce27e0a59f5f8e427b672087e1f2eb1aead0d66288de62ed3e9647',\\\\n          amount: 0.1,\\\\n        },\\\\n      ]}\\\\n      helpUrl='https://github.com/PaulFasola/adoption/blob/master/README.md'\\\\n      deadline={{\\\\n        dateLocale: 'en-US',\\\\n        datetime: new Date(),\\\\n        humanized: true,\\\\n      }}\\\\n      status={PaymentStatus.PENDING}\\\\n    />\\\\n  </>\\\\n);\\\\n\\\\nexport const Presets: Story = () => (\\\\n  <ThemeWrapper>\\\\n    <LabRat />\\\\n  </ThemeWrapper>\\\\n);\\\\nPresets.parameters = {\\\\n  controls: { hideNoControlsWarning: true },\\\\n};\\\\n\\\\nexport const CustomThemes: Story = () => {\\\\n  const customThemes: Record<string, Partial<ITheme>> = {\\\\n    wow: {\\\\n      primary: {\\\\n        backgroundColor: 'pink',\\\\n        color: 'yellow',\\\\n      },\\\\n    },\\\\n    veryOrganic: {\\\\n      primary: {\\\\n        backgroundColor: 'lightgreen',\\\\n        color: 'darkgreen',\\\\n      },\\\\n    },\\\\n  };\\\\n\\\\n  const FailButton: React.FC = () => {\\\\n    const { switchTo } = useContext(ThemeContext);\\\\n    return (\\\\n      <button\\\\n        style={{ marginBottom: '1.5rem' }}\\\\n        onClick={() => {\\\\n          switchTo('thatDoesNotExist');\\\\n          setTimeout(() => {\\\\n            alert('Check the console below, a warning is waiting for you ;)');\\\\n          }, 200);\\\\n        }}\\\\n      >\\\\n        Go thatDoesNotExist (will fail).\\\\n      </button>\\\\n    );\\\\n  };\\\\n\\\\n  return (\\\\n    <ThemeWrapper customThemes={customThemes}>\\\\n      <FailButton />\\\\n      <LabRat />\\\\n    </ThemeWrapper>\\\\n  );\\\\n};\\\\nCustomThemes.parameters = {\\\\n  controls: { hideNoControlsWarning: true },\\\\n};\\\\n\\\",\\\"locationsMap\\\":{\\\"presets\\\":{\\\"startLoc\\\":{\\\"col\\\":30,\\\"line\\\":60},\\\"endLoc\\\":{\\\"col\\\":1,\\\"line\\\":64},\\\"startBody\\\":{\\\"col\\\":30,\\\"line\\\":60},\\\"endBody\\\":{\\\"col\\\":1,\\\"line\\\":64}},\\\"custom-themes\\\":{\\\"startLoc\\\":{\\\"col\\\":35,\\\"line\\\":69},\\\"endLoc\\\":{\\\"col\\\":1,\\\"line\\\":108},\\\"startBody\\\":{\\\"col\\\":35,\\\"line\\\":69},\\\"endBody\\\":{\\\"col\\\":1,\\\"line\\\":108}}}},},\\n  title: 'ThemeProvider',\\n} as Meta;\\n\\nconst LabRat = (): React.ReactElement => (\\n  <>\\n    <TransactionStatus\\n      status={TxStatus.PENDING}\\n      amount='0.1'\\n      symbol='BTC'\\n      txURL='https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1'\\n    />\\n    <br />\\n    <PaymentRequest\\n      symbol='BTC'\\n      decimalPlaces={8}\\n      sellerName='Such Company LTD'\\n      logos={{\\n        coin: 'https://upload.wikimedia.org/wikipedia/commons/c/c5/Bitcoin_logo.svg',\\n        company: companyAsset,\\n      }}\\n      address='1BitcoinEaterAddressDontSendf59kuE'\\n      amount={{ toPay: 0.9, received: 0.2 }}\\n      transactions={[\\n        {\\n          txHash: '369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1',\\n          txUrl:\\n            'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1',\\n          amount: 0.1,\\n        },\\n        {\\n          txHash: '519f6c9581ce27e0a59f5f8e427b672087e1f2eb1aead0d66288de62ed3e9647',\\n          txUrl:\\n            'https://www.blockchain.com/btc/tx/519f6c9581ce27e0a59f5f8e427b672087e1f2eb1aead0d66288de62ed3e9647',\\n          amount: 0.1,\\n        },\\n      ]}\\n      helpUrl='https://github.com/PaulFasola/adoption/blob/master/README.md'\\n      deadline={{\\n        dateLocale: 'en-US',\\n        datetime: new Date(),\\n        humanized: true,\\n      }}\\n      status={PaymentStatus.PENDING}\\n    />\\n  </>\\n);\\n\\nexport const Presets: Story = () => (\\n  <ThemeWrapper>\\n    <LabRat />\\n  </ThemeWrapper>\\n);;\\nPresets.parameters = {\\n  controls: { hideNoControlsWarning: true },\\n};\\n\\nexport const CustomThemes: Story = () => {\\n  const customThemes: Record<string, Partial<ITheme>> = {\\n    wow: {\\n      primary: {\\n        backgroundColor: 'pink',\\n        color: 'yellow',\\n      },\\n    },\\n    veryOrganic: {\\n      primary: {\\n        backgroundColor: 'lightgreen',\\n        color: 'darkgreen',\\n      },\\n    },\\n  };\\n\\n  const FailButton: React.FC = () => {\\n    const { switchTo } = useContext(ThemeContext);\\n    return (\\n      <button\\n        style={{ marginBottom: '1.5rem' }}\\n        onClick={() => {\\n          switchTo('thatDoesNotExist');\\n          setTimeout(() => {\\n            alert('Check the console below, a warning is waiting for you ;)');\\n          }, 200);\\n        }}\\n      >\\n        Go thatDoesNotExist (will fail).\\n      </button>\\n    );\\n  };\\n\\n  return (\\n    <ThemeWrapper customThemes={customThemes}>\\n      <FailButton />\\n      <LabRat />\\n    </ThemeWrapper>\\n  );\\n};\\nCustomThemes.parameters = {\\n  controls: { hideNoControlsWarning: true },\\n};\\n\",\"locationsMap\":{\"presets\":{\"startLoc\":{\"col\":30,\"line\":68},\"endLoc\":{\"col\":1,\"line\":72},\"startBody\":{\"col\":30,\"line\":68},\"endBody\":{\"col\":1,\"line\":72}},\"custom-themes\":{\"startLoc\":{\"col\":35,\"line\":77},\"endLoc\":{\"col\":1,\"line\":116},\"startBody\":{\"col\":35,\"line\":77},\"endBody\":{\"col\":1,\"line\":116}}}},\"storySource\":{\"source\":\"import React, { useContext } from 'react';\\nimport { PaymentStatus } from '../../components/PaymentRequest/enums/paymentStatus';\\nimport { TransactionStatus, TxStatus } from '../../components/TransactionStatus';\\nimport { PaymentRequest } from '../../components/PaymentRequest';\\nimport { ThemeContext } from './themeProvider';\\nimport { ITheme } from './ITheme';\\nimport { ThemeWrapper } from './themeWrapper';\\nimport { Meta, Story } from '@storybook/react';\\n\\nimport companyAsset from '../../assets/fictiveCompany.png';\\n\\nexport default {\\n  title: 'ThemeProvider',\\n} as Meta;\\n\\nconst LabRat = (): React.ReactElement => (\\n  <>\\n    <TransactionStatus\\n      status={TxStatus.PENDING}\\n      amount='0.1'\\n      symbol='BTC'\\n      txURL='https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1'\\n    />\\n    <br />\\n    <PaymentRequest\\n      symbol='BTC'\\n      decimalPlaces={8}\\n      sellerName='Such Company LTD'\\n      logos={{\\n        coin: 'https://upload.wikimedia.org/wikipedia/commons/c/c5/Bitcoin_logo.svg',\\n        company: companyAsset,\\n      }}\\n      address='1BitcoinEaterAddressDontSendf59kuE'\\n      amount={{ toPay: 0.9, received: 0.2 }}\\n      transactions={[\\n        {\\n          txHash: '369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1',\\n          txUrl:\\n            'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1',\\n          amount: 0.1,\\n        },\\n        {\\n          txHash: '519f6c9581ce27e0a59f5f8e427b672087e1f2eb1aead0d66288de62ed3e9647',\\n          txUrl:\\n            'https://www.blockchain.com/btc/tx/519f6c9581ce27e0a59f5f8e427b672087e1f2eb1aead0d66288de62ed3e9647',\\n          amount: 0.1,\\n        },\\n      ]}\\n      helpUrl='https://github.com/PaulFasola/adoption/blob/master/README.md'\\n      deadline={{\\n        dateLocale: 'en-US',\\n        datetime: new Date(),\\n        humanized: true,\\n      }}\\n      status={PaymentStatus.PENDING}\\n    />\\n  </>\\n);\\n\\nexport const Presets: Story = () => (\\n  <ThemeWrapper>\\n    <LabRat />\\n  </ThemeWrapper>\\n);\\nPresets.parameters = {\\n  controls: { hideNoControlsWarning: true },\\n};\\n\\nexport const CustomThemes: Story = () => {\\n  const customThemes: Record<string, Partial<ITheme>> = {\\n    wow: {\\n      primary: {\\n        backgroundColor: 'pink',\\n        color: 'yellow',\\n      },\\n    },\\n    veryOrganic: {\\n      primary: {\\n        backgroundColor: 'lightgreen',\\n        color: 'darkgreen',\\n      },\\n    },\\n  };\\n\\n  const FailButton: React.FC = () => {\\n    const { switchTo } = useContext(ThemeContext);\\n    return (\\n      <button\\n        style={{ marginBottom: '1.5rem' }}\\n        onClick={() => {\\n          switchTo('thatDoesNotExist');\\n          setTimeout(() => {\\n            alert('Check the console below, a warning is waiting for you ;)');\\n          }, 200);\\n        }}\\n      >\\n        Go thatDoesNotExist (will fail).\\n      </button>\\n    );\\n  };\\n\\n  return (\\n    <ThemeWrapper customThemes={customThemes}>\\n      <FailButton />\\n      <LabRat />\\n    </ThemeWrapper>\\n  );\\n};\\nCustomThemes.parameters = {\\n  controls: { hideNoControlsWarning: true },\\n};\\n\",\"locationsMap\":{\"presets\":{\"startLoc\":{\"col\":30,\"line\":60},\"endLoc\":{\"col\":1,\"line\":64},\"startBody\":{\"col\":30,\"line\":60},\"endBody\":{\"col\":1,\"line\":64}},\"custom-themes\":{\"startLoc\":{\"col\":35,\"line\":69},\"endLoc\":{\"col\":1,\"line\":108},\"startBody\":{\"col\":35,\"line\":69},\"endBody\":{\"col\":1,\"line\":108}}}},},\n  title: 'ThemeProvider',\n} as Meta;\n\nconst LabRat = (): React.ReactElement => (\n  <>\n    <TransactionStatus\n      status={TxStatus.PENDING}\n      amount='0.1'\n      symbol='BTC'\n      txURL='https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1'\n    />\n    <br />\n    <PaymentRequest\n      symbol='BTC'\n      decimalPlaces={8}\n      sellerName='Such Company LTD'\n      logos={{\n        coin: 'https://upload.wikimedia.org/wikipedia/commons/c/c5/Bitcoin_logo.svg',\n        company: companyAsset,\n      }}\n      address='1BitcoinEaterAddressDontSendf59kuE'\n      amount={{ toPay: 0.9, received: 0.2 }}\n      transactions={[\n        {\n          txHash: '369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1',\n          txUrl:\n            'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1',\n          amount: 0.1,\n        },\n        {\n          txHash: '519f6c9581ce27e0a59f5f8e427b672087e1f2eb1aead0d66288de62ed3e9647',\n          txUrl:\n            'https://www.blockchain.com/btc/tx/519f6c9581ce27e0a59f5f8e427b672087e1f2eb1aead0d66288de62ed3e9647',\n          amount: 0.1,\n        },\n      ]}\n      helpUrl='https://github.com/PaulFasola/adoption/blob/master/README.md'\n      deadline={{\n        dateLocale: 'en-US',\n        datetime: new Date(),\n        humanized: true,\n      }}\n      status={PaymentStatus.PENDING}\n    />\n  </>\n);\n\nexport const Presets: Story = () => (\n  <ThemeWrapper>\n    <LabRat />\n  </ThemeWrapper>\n);;;\nPresets.parameters = {\n  controls: { hideNoControlsWarning: true },\n};\n\nexport const CustomThemes: Story = () => {\n  const customThemes: Record<string, Partial<ITheme>> = {\n    wow: {\n      primary: {\n        backgroundColor: 'pink',\n        color: 'yellow',\n      },\n    },\n    veryOrganic: {\n      primary: {\n        backgroundColor: 'lightgreen',\n        color: 'darkgreen',\n      },\n    },\n  };\n\n  const FailButton: React.FC = () => {\n    const { switchTo } = useContext(ThemeContext);\n    return (\n      <button\n        style={{ marginBottom: '1.5rem' }}\n        onClick={() => {\n          switchTo('thatDoesNotExist');\n          setTimeout(() => {\n            alert('Check the console below, a warning is waiting for you ;)');\n          }, 200);\n        }}\n      >\n        Go thatDoesNotExist (will fail).\n      </button>\n    );\n  };\n\n  return (\n    <ThemeWrapper customThemes={customThemes}>\n      <FailButton />\n      <LabRat />\n    </ThemeWrapper>\n  );\n};\nCustomThemes.parameters = {\n  controls: { hideNoControlsWarning: true },\n};\n",locationsMap:{presets:{startLoc:{col:30,line:76},endLoc:{col:1,line:80},startBody:{col:30,line:76},endBody:{col:1,line:80}},"custom-themes":{startLoc:{col:35,line:85},endLoc:{col:1,line:124},startBody:{col:35,line:85},endBody:{col:1,line:124}}}}},_defineProperty(_parameters,"storySource",{source:"\n    \n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React, { useContext } from 'react';\\nimport { PaymentStatus } from '../../components/PaymentRequest/enums/paymentStatus';\\nimport { TransactionStatus, TxStatus } from '../../components/TransactionStatus';\\nimport { PaymentRequest } from '../../components/PaymentRequest';\\nimport { ThemeContext } from './themeProvider';\\nimport { ITheme } from './ITheme';\\nimport { ThemeWrapper } from './themeWrapper';\\nimport { Meta, Story } from '@storybook/react';\\n\\nimport companyAsset from '../../assets/fictiveCompany.png';\\n\\nexport default {\\n  title: 'ThemeProvider',\\n} as Meta;\\n\\nconst LabRat = (): React.ReactElement => (\\n  <>\\n    <TransactionStatus\\n      status={TxStatus.PENDING}\\n      amount='0.1'\\n      symbol='BTC'\\n      txURL='https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1'\\n    />\\n    <br />\\n    <PaymentRequest\\n      symbol='BTC'\\n      decimalPlaces={8}\\n      sellerName='Such Company LTD'\\n      logos={{\\n        coin: 'https://upload.wikimedia.org/wikipedia/commons/c/c5/Bitcoin_logo.svg',\\n        company: companyAsset,\\n      }}\\n      address='1BitcoinEaterAddressDontSendf59kuE'\\n      amount={{ toPay: 0.9, received: 0.2 }}\\n      transactions={[\\n        {\\n          txHash: '369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1',\\n          txUrl:\\n            'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1',\\n          amount: 0.1,\\n        },\\n        {\\n          txHash: '519f6c9581ce27e0a59f5f8e427b672087e1f2eb1aead0d66288de62ed3e9647',\\n          txUrl:\\n            'https://www.blockchain.com/btc/tx/519f6c9581ce27e0a59f5f8e427b672087e1f2eb1aead0d66288de62ed3e9647',\\n          amount: 0.1,\\n        },\\n      ]}\\n      helpUrl='https://github.com/PaulFasola/adoption/blob/master/README.md'\\n      deadline={{\\n        dateLocale: 'en-US',\\n        datetime: new Date(),\\n        humanized: true,\\n      }}\\n      status={PaymentStatus.PENDING}\\n    />\\n  </>\\n);\\n\\nexport const Presets: Story = () => (\\n  <ThemeWrapper>\\n    <LabRat />\\n  </ThemeWrapper>\\n);\\nPresets.parameters = {\\n  controls: { hideNoControlsWarning: true },\\n};\\n\\nexport const CustomThemes: Story = () => {\\n  const customThemes: Record<string, Partial<ITheme>> = {\\n    wow: {\\n      primary: {\\n        backgroundColor: 'pink',\\n        color: 'yellow',\\n      },\\n    },\\n    veryOrganic: {\\n      primary: {\\n        backgroundColor: 'lightgreen',\\n        color: 'darkgreen',\\n      },\\n    },\\n  };\\n\\n  const FailButton: React.FC = () => {\\n    const { switchTo } = useContext(ThemeContext);\\n    return (\\n      <button\\n        style={{ marginBottom: '1.5rem' }}\\n        onClick={() => {\\n          switchTo('thatDoesNotExist');\\n          setTimeout(() => {\\n            alert('Check the console below, a warning is waiting for you ;)');\\n          }, 200);\\n        }}\\n      >\\n        Go thatDoesNotExist (will fail).\\n      </button>\\n    );\\n  };\\n\\n  return (\\n    <ThemeWrapper customThemes={customThemes}>\\n      <FailButton />\\n      <LabRat />\\n    </ThemeWrapper>\\n  );\\n};\\nCustomThemes.parameters = {\\n  controls: { hideNoControlsWarning: true },\\n};\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Presets\":{\"startLoc\":{\"col\":30,\"line\":60},\"endLoc\":{\"col\":1,\"line\":64},\"startBody\":{\"col\":30,\"line\":60},\"endBody\":{\"col\":1,\"line\":64}},\"CustomThemes\":{\"startLoc\":{\"col\":35,\"line\":69},\"endLoc\":{\"col\":1,\"line\":108},\"startBody\":{\"col\":35,\"line\":69},\"endBody\":{\"col\":1,\"line\":108}}};\n    \nimport React, { useContext } from 'react';\nimport { PaymentStatus } from '../../components/PaymentRequest/enums/paymentStatus';\nimport { TransactionStatus, TxStatus } from '../../components/TransactionStatus';\nimport { PaymentRequest } from '../../components/PaymentRequest';\nimport { ThemeContext } from './themeProvider';\nimport { ITheme } from './ITheme';\nimport { ThemeWrapper } from './themeWrapper';\nimport { Meta, Story } from '@storybook/react';\n\nimport companyAsset from '../../assets/fictiveCompany.png';\n\nexport default {parameters: {\"storySource\":{\"source\":\"import React, { useContext } from 'react';\\nimport { PaymentStatus } from '../../components/PaymentRequest/enums/paymentStatus';\\nimport { TransactionStatus, TxStatus } from '../../components/TransactionStatus';\\nimport { PaymentRequest } from '../../components/PaymentRequest';\\nimport { ThemeContext } from './themeProvider';\\nimport { ITheme } from './ITheme';\\nimport { ThemeWrapper } from './themeWrapper';\\nimport { Meta, Story } from '@storybook/react';\\n\\nimport companyAsset from '../../assets/fictiveCompany.png';\\n\\nexport default {\\n  title: 'ThemeProvider',\\n} as Meta;\\n\\nconst LabRat = (): React.ReactElement => (\\n  <>\\n    <TransactionStatus\\n      status={TxStatus.PENDING}\\n      amount='0.1'\\n      symbol='BTC'\\n      txURL='https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1'\\n    />\\n    <br />\\n    <PaymentRequest\\n      symbol='BTC'\\n      decimalPlaces={8}\\n      sellerName='Such Company LTD'\\n      logos={{\\n        coin: 'https://upload.wikimedia.org/wikipedia/commons/c/c5/Bitcoin_logo.svg',\\n        company: companyAsset,\\n      }}\\n      address='1BitcoinEaterAddressDontSendf59kuE'\\n      amount={{ toPay: 0.9, received: 0.2 }}\\n      transactions={[\\n        {\\n          txHash: '369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1',\\n          txUrl:\\n            'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1',\\n          amount: 0.1,\\n        },\\n        {\\n          txHash: '519f6c9581ce27e0a59f5f8e427b672087e1f2eb1aead0d66288de62ed3e9647',\\n          txUrl:\\n            'https://www.blockchain.com/btc/tx/519f6c9581ce27e0a59f5f8e427b672087e1f2eb1aead0d66288de62ed3e9647',\\n          amount: 0.1,\\n        },\\n      ]}\\n      helpUrl='https://github.com/PaulFasola/adoption/blob/master/README.md'\\n      deadline={{\\n        dateLocale: 'en-US',\\n        datetime: new Date(),\\n        humanized: true,\\n      }}\\n      status={PaymentStatus.PENDING}\\n    />\\n  </>\\n);\\n\\nexport const Presets: Story = () => (\\n  <ThemeWrapper>\\n    <LabRat />\\n  </ThemeWrapper>\\n);\\nPresets.parameters = {\\n  controls: { hideNoControlsWarning: true },\\n};\\n\\nexport const CustomThemes: Story = () => {\\n  const customThemes: Record<string, Partial<ITheme>> = {\\n    wow: {\\n      primary: {\\n        backgroundColor: 'pink',\\n        color: 'yellow',\\n      },\\n    },\\n    veryOrganic: {\\n      primary: {\\n        backgroundColor: 'lightgreen',\\n        color: 'darkgreen',\\n      },\\n    },\\n  };\\n\\n  const FailButton: React.FC = () => {\\n    const { switchTo } = useContext(ThemeContext);\\n    return (\\n      <button\\n        style={{ marginBottom: '1.5rem' }}\\n        onClick={() => {\\n          switchTo('thatDoesNotExist');\\n          setTimeout(() => {\\n            alert('Check the console below, a warning is waiting for you ;)');\\n          }, 200);\\n        }}\\n      >\\n        Go thatDoesNotExist (will fail).\\n      </button>\\n    );\\n  };\\n\\n  return (\\n    <ThemeWrapper customThemes={customThemes}>\\n      <FailButton />\\n      <LabRat />\\n    </ThemeWrapper>\\n  );\\n};\\nCustomThemes.parameters = {\\n  controls: { hideNoControlsWarning: true },\\n};\\n\",\"locationsMap\":{\"presets\":{\"startLoc\":{\"col\":30,\"line\":60},\"endLoc\":{\"col\":1,\"line\":64},\"startBody\":{\"col\":30,\"line\":60},\"endBody\":{\"col\":1,\"line\":64}},\"custom-themes\":{\"startLoc\":{\"col\":35,\"line\":69},\"endLoc\":{\"col\":1,\"line\":108},\"startBody\":{\"col\":35,\"line\":69},\"endBody\":{\"col\":1,\"line\":108}}}},},\n  title: 'ThemeProvider',\n} as Meta;\n\nconst LabRat = (): React.ReactElement => (\n  <>\n    <TransactionStatus\n      status={TxStatus.PENDING}\n      amount='0.1'\n      symbol='BTC'\n      txURL='https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1'\n    />\n    <br />\n    <PaymentRequest\n      symbol='BTC'\n      decimalPlaces={8}\n      sellerName='Such Company LTD'\n      logos={{\n        coin: 'https://upload.wikimedia.org/wikipedia/commons/c/c5/Bitcoin_logo.svg',\n        company: companyAsset,\n      }}\n      address='1BitcoinEaterAddressDontSendf59kuE'\n      amount={{ toPay: 0.9, received: 0.2 }}\n      transactions={[\n        {\n          txHash: '369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1',\n          txUrl:\n            'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1',\n          amount: 0.1,\n        },\n        {\n          txHash: '519f6c9581ce27e0a59f5f8e427b672087e1f2eb1aead0d66288de62ed3e9647',\n          txUrl:\n            'https://www.blockchain.com/btc/tx/519f6c9581ce27e0a59f5f8e427b672087e1f2eb1aead0d66288de62ed3e9647',\n          amount: 0.1,\n        },\n      ]}\n      helpUrl='https://github.com/PaulFasola/adoption/blob/master/README.md'\n      deadline={{\n        dateLocale: 'en-US',\n        datetime: new Date(),\n        humanized: true,\n      }}\n      status={PaymentStatus.PENDING}\n    />\n  </>\n);\n\nexport const Presets: Story = () => (\n  <ThemeWrapper>\n    <LabRat />\n  </ThemeWrapper>\n);;\nPresets.parameters = {\n  controls: { hideNoControlsWarning: true },\n};\n\nexport const CustomThemes: Story = () => {\n  const customThemes: Record<string, Partial<ITheme>> = {\n    wow: {\n      primary: {\n        backgroundColor: 'pink',\n        color: 'yellow',\n      },\n    },\n    veryOrganic: {\n      primary: {\n        backgroundColor: 'lightgreen',\n        color: 'darkgreen',\n      },\n    },\n  };\n\n  const FailButton: React.FC = () => {\n    const { switchTo } = useContext(ThemeContext);\n    return (\n      <button\n        style={{ marginBottom: '1.5rem' }}\n        onClick={() => {\n          switchTo('thatDoesNotExist');\n          setTimeout(() => {\n            alert('Check the console below, a warning is waiting for you ;)');\n          }, 200);\n        }}\n      >\n        Go thatDoesNotExist (will fail).\n      </button>\n    );\n  };\n\n  return (\n    <ThemeWrapper customThemes={customThemes}>\n      <FailButton />\n      <LabRat />\n    </ThemeWrapper>\n  );\n};\nCustomThemes.parameters = {\n  controls: { hideNoControlsWarning: true },\n};\n",locationsMap:{presets:{startLoc:{col:30,line:68},endLoc:{col:1,line:72},startBody:{col:30,line:68},endBody:{col:1,line:72}},"custom-themes":{startLoc:{col:35,line:77},endLoc:{col:1,line:116},startBody:{col:35,line:77},endBody:{col:1,line:116}}}}),_defineProperty(_parameters,"storySource",{source:"import React, { useContext } from 'react';\nimport { PaymentStatus } from '../../components/PaymentRequest/enums/paymentStatus';\nimport { TransactionStatus, TxStatus } from '../../components/TransactionStatus';\nimport { PaymentRequest } from '../../components/PaymentRequest';\nimport { ThemeContext } from './themeProvider';\nimport { ITheme } from './ITheme';\nimport { ThemeWrapper } from './themeWrapper';\nimport { Meta, Story } from '@storybook/react';\n\nimport companyAsset from '../../assets/fictiveCompany.png';\n\nexport default {\n  title: 'ThemeProvider',\n} as Meta;\n\nconst LabRat = (): React.ReactElement => (\n  <>\n    <TransactionStatus\n      status={TxStatus.PENDING}\n      amount='0.1'\n      symbol='BTC'\n      txURL='https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1'\n    />\n    <br />\n    <PaymentRequest\n      symbol='BTC'\n      decimalPlaces={8}\n      sellerName='Such Company LTD'\n      logos={{\n        coin: 'https://upload.wikimedia.org/wikipedia/commons/c/c5/Bitcoin_logo.svg',\n        company: companyAsset,\n      }}\n      address='1BitcoinEaterAddressDontSendf59kuE'\n      amount={{ toPay: 0.9, received: 0.2 }}\n      transactions={[\n        {\n          txHash: '369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1',\n          txUrl:\n            'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1',\n          amount: 0.1,\n        },\n        {\n          txHash: '519f6c9581ce27e0a59f5f8e427b672087e1f2eb1aead0d66288de62ed3e9647',\n          txUrl:\n            'https://www.blockchain.com/btc/tx/519f6c9581ce27e0a59f5f8e427b672087e1f2eb1aead0d66288de62ed3e9647',\n          amount: 0.1,\n        },\n      ]}\n      helpUrl='https://github.com/PaulFasola/adoption/blob/master/README.md'\n      deadline={{\n        dateLocale: 'en-US',\n        datetime: new Date(),\n        humanized: true,\n      }}\n      status={PaymentStatus.PENDING}\n    />\n  </>\n);\n\nexport const Presets: Story = () => (\n  <ThemeWrapper>\n    <LabRat />\n  </ThemeWrapper>\n);\nPresets.parameters = {\n  controls: { hideNoControlsWarning: true },\n};\n\nexport const CustomThemes: Story = () => {\n  const customThemes: Record<string, Partial<ITheme>> = {\n    wow: {\n      primary: {\n        backgroundColor: 'pink',\n        color: 'yellow',\n      },\n    },\n    veryOrganic: {\n      primary: {\n        backgroundColor: 'lightgreen',\n        color: 'darkgreen',\n      },\n    },\n  };\n\n  const FailButton: React.FC = () => {\n    const { switchTo } = useContext(ThemeContext);\n    return (\n      <button\n        style={{ marginBottom: '1.5rem' }}\n        onClick={() => {\n          switchTo('thatDoesNotExist');\n          setTimeout(() => {\n            alert('Check the console below, a warning is waiting for you ;)');\n          }, 200);\n        }}\n      >\n        Go thatDoesNotExist (will fail).\n      </button>\n    );\n  };\n\n  return (\n    <ThemeWrapper customThemes={customThemes}>\n      <FailButton />\n      <LabRat />\n    </ThemeWrapper>\n  );\n};\nCustomThemes.parameters = {\n  controls: { hideNoControlsWarning: true },\n};\n",locationsMap:{presets:{startLoc:{col:30,line:60},endLoc:{col:1,line:64},startBody:{col:30,line:60},endBody:{col:1,line:64}},"custom-themes":{startLoc:{col:35,line:69},endLoc:{col:1,line:108},startBody:{col:35,line:69},endBody:{col:1,line:108}}}}),_parameters),title:"ThemeProvider"};var LabRat=function LabRat(){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.Fragment,{children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx)(_components_TransactionStatus__WEBPACK_IMPORTED_MODULE_5__.a,{status:_components_TransactionStatus__WEBPACK_IMPORTED_MODULE_5__.b.PENDING,amount:"0.1",symbol:"BTC",txURL:"https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx)("br",{}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx)(_components_PaymentRequest__WEBPACK_IMPORTED_MODULE_6__.a,{symbol:"BTC",decimalPlaces:8,sellerName:"Such Company LTD",logos:{coin:"https://upload.wikimedia.org/wikipedia/commons/c/c5/Bitcoin_logo.svg",company:_assets_fictiveCompany_png__WEBPACK_IMPORTED_MODULE_9__.a},address:"1BitcoinEaterAddressDontSendf59kuE",amount:{toPay:.9,received:.2},transactions:[{txHash:"369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1",txUrl:"https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1",amount:.1},{txHash:"519f6c9581ce27e0a59f5f8e427b672087e1f2eb1aead0d66288de62ed3e9647",txUrl:"https://www.blockchain.com/btc/tx/519f6c9581ce27e0a59f5f8e427b672087e1f2eb1aead0d66288de62ed3e9647",amount:.1}],helpUrl:"https://github.com/PaulFasola/adoption/blob/master/README.md",deadline:{dateLocale:"en-US",datetime:new Date,humanized:!0},status:_components_PaymentRequest_enums_paymentStatus__WEBPACK_IMPORTED_MODULE_4__.a.PENDING})]})},Presets=function Presets(){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx)(_themeWrapper__WEBPACK_IMPORTED_MODULE_8__.a,{children:Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx)(LabRat,{})})};Presets.displayName="Presets",Presets.parameters={controls:{hideNoControlsWarning:!0}};var CustomThemes=function CustomThemes(){var FailButton=function FailButton(){var switchTo=Object(react__WEBPACK_IMPORTED_MODULE_3__.useContext)(_themeProvider__WEBPACK_IMPORTED_MODULE_7__.a).switchTo;return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx)("button",{style:{marginBottom:"1.5rem"},onClick:function onClick(){switchTo("thatDoesNotExist"),setTimeout((function(){alert("Check the console below, a warning is waiting for you ;)")}),200)},children:"Go thatDoesNotExist (will fail)."})};return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsxs)(_themeWrapper__WEBPACK_IMPORTED_MODULE_8__.a,{customThemes:{wow:{primary:{backgroundColor:"pink",color:"yellow"}},veryOrganic:{primary:{backgroundColor:"lightgreen",color:"darkgreen"}}},children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx)(FailButton,{}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx)(LabRat,{})]})};CustomThemes.displayName="CustomThemes",CustomThemes.parameters={controls:{hideNoControlsWarning:!0}}},1087:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Basic",(function(){return index_stories_Basic})),__webpack_require__.d(__webpack_exports__,"Themed",(function(){return index_stories_Themed}));__webpack_require__(9),__webpack_require__(105);var _templateObject,_templateObject2,_templateObject3,react=__webpack_require__(0),esm=__webpack_require__(88),themeWrapper=__webpack_require__(145),mocks=__webpack_require__(261),styled_components_browser_esm=(__webpack_require__(1071),__webpack_require__(49),__webpack_require__(24),__webpack_require__(149),__webpack_require__(56),__webpack_require__(86),__webpack_require__(27),__webpack_require__(28),__webpack_require__(14),__webpack_require__(54),__webpack_require__(32),__webpack_require__(30),__webpack_require__(34),__webpack_require__(25),__webpack_require__(12),__webpack_require__(65),__webpack_require__(94),__webpack_require__(85),__webpack_require__(7)),styleFetcher=__webpack_require__(8),defaultInputProps=(__webpack_require__(60),__webpack_require__(106),__webpack_require__(125),__webpack_require__(13),{autoComplete:"off",autoFill:"off"});function _taggedTemplateLiteral(strings,raw){return raw||(raw=strings.slice(0)),Object.freeze(Object.defineProperties(strings,{raw:{value:Object.freeze(raw)}}))}var Outline=styled_components_browser_esm.c.div(_templateObject||(_templateObject=_taggedTemplateLiteral(["\n  width: 100%;\n"]))),style_Input=styled_components_browser_esm.c.input(_templateObject2||(_templateObject2=_taggedTemplateLiteral(["\n  background: transparent;\n  color: ",";\n  outline: none;\n  padding: 10px;\n  box-shadow: none;\n  text-overflow: ellipsis;\n\n  ","\n\n  &: focus {\n    outline: none;\n    box-shadow: inset 0 -0.25em 0.5em lighten(#000, 50%);\n    border-width: 2px;\n  }\n\n  &:-moz-ui-invalid {\n    box-shadow: none !important;\n  }\n"])),(function(_ref){var theme=_ref.theme;return Object(styleFetcher.a)(theme,"primary","color")}),(function(props){return props.rounded&&"\n\t\tborder-radius: 15px;\n\t"})),Label=styled_components_browser_esm.c.label(_templateObject3||(_templateObject3=_taggedTemplateLiteral(["\n  position: absolute;\n  top: 25px;\n  left: 25px;\n  padding: 0 2px;\n  line-height: 20px;\n  font-size: 14px;\n  letter-spacing: 0.125em;\n  color: ",";\n  background: ",";\n  pointer-events: none;\n  transition: transform 120ms;\n  transform-origin: left center;\n  transform: translateY(0) scale(1);\n\n  ","\n"])),(function(p){return Object(styleFetcher.a)(p.theme,"primary","color")}),(function(p){return Object(styleFetcher.a)(p.theme,"primary","backgroundColor")}),(function(props){return props.floating&&"transform: translateY(-19px) scale(0.9);"})),jsx_runtime=__webpack_require__(1);function _slicedToArray(arr,i){return function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}(arr)||function _iterableToArrayLimit(arr,i){if("undefined"==typeof Symbol||!(Symbol.iterator in Object(arr)))return;var _arr=[],_n=!0,_d=!1,_e=void 0;try{for(var _s,_i=arr[Symbol.iterator]();!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}(arr,i)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr,i)||function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}var style_templateObject,style_templateObject2,style_templateObject3,_templateObject4,_templateObject5,_templateObject6,Input_Input=function Input(props){var _useState2=_slicedToArray(Object(react.useState)(!1),2),isFloating=_useState2[0],setIsFloating=_useState2[1],_useState4=_slicedToArray(Object(react.useState)(Object.assign({},defaultInputProps,props)),2),inputProps=_useState4[0],setInputProps=_useState4[1];Object(react.useEffect)((function(){setInputProps((function(prevProps){return Object.assign({},prevProps,{id:Math.random().toString(36).substring(7)})})),props.label&&"string"==typeof props.placeholder&&setInputProps((function(prevProps){return Object.assign({},prevProps,{placeholder:void 0})}))}),[props.label,props.placeholder]),Object(react.useEffect)((function(){setInputProps((function(prevProps){return Object.assign({},prevProps,{value:props.value})}))}),[props.value]),Object(react.useEffect)((function(){var pattern;"decimal"===props.type&&(pattern="^[0-9]*[.,]?[0-9]*$"),props.pattern&&(pattern=props.pattern),setInputProps((function(prevProps){return Object.assign({},prevProps,{pattern:pattern})}))}),[props.type,props.pattern]);return delete inputProps.onValueChange,"number"==typeof props.maxLength&&props.value&&props.value.toString().length>props.maxLength&&(inputProps.title="".concat(props.title?"".concat(props.title," - "):"").concat(props.value.toString())),Object(jsx_runtime.jsxs)(Outline,{children:["string"==typeof props.label&&Object(jsx_runtime.jsx)(Label,{htmlFor:props.id,floating:isFloating,children:props.label}),Object(jsx_runtime.jsx)(style_Input,Object.assign({onFocus:function onFocus(){return setIsFloating(!0)},onBlur:function _handleBlur(){inputProps.value&&0!==inputProps.value.toString().length||setIsFloating(!1)},onChange:function _handleChange(e){var value=e.target.value;if(inputProps.pattern&&!value.match(inputProps.pattern))return e.preventDefault(),!1;setInputProps(Object.assign({},inputProps,{value:value})),"function"==typeof props.onValueChange&&props.onValueChange(value)}},inputProps,{value:function _getValue(){var _inputProps$value;return"decimal"===props.type||"number"===props.type?!inputProps.value||isNaN(Number(inputProps.value))?"":"decimal"===props.type&&"number"==typeof props.maximumFractionDigits?inputProps.value.toLocaleString(void 0,{maximumFractionDigits:props.maximumFractionDigits}):inputProps.value:null!==(_inputProps$value=inputProps.value)&&void 0!==_inputProps$value?_inputProps$value:""}()}))]})};Input_Input.displayName="Input",Input_Input.defaultProps={type:"text"};try{Input_Input.displayName="Input",Input_Input.__docgenInfo={description:"",displayName:"Input",props:{type:{defaultValue:{value:"text"},description:"",name:"type",required:!1,type:{name:"enum",value:[{value:'"number"'},{value:'"text"'},{value:'"decimal"'}]}},maximumFractionDigits:{defaultValue:null,description:"",name:"maximumFractionDigits",required:!1,type:{name:"number"}},style:{defaultValue:null,description:"",name:"style",required:!1,type:{name:"CSSProperties"}},id:{defaultValue:null,description:"",name:"id",required:!1,type:{name:"string"}},pattern:{defaultValue:null,description:"",name:"pattern",required:!1,type:{name:"string"}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},maxLength:{defaultValue:null,description:"",name:"maxLength",required:!1,type:{name:"number"}},minLength:{defaultValue:null,description:"",name:"minLength",required:!1,type:{name:"number"}},max:{defaultValue:null,description:"",name:"max",required:!1,type:{name:"number"}},min:{defaultValue:null,description:"",name:"min",required:!1,type:{name:"number"}},placeholder:{defaultValue:null,description:"",name:"placeholder",required:!1,type:{name:"string"}},title:{defaultValue:null,description:"",name:"title",required:!1,type:{name:"string"}},value:{defaultValue:null,description:"",name:"value",required:!1,type:{name:"string | number"}},label:{defaultValue:null,description:"",name:"label",required:!1,type:{name:"string"}},autoComplete:{defaultValue:null,description:"",name:"autoComplete",required:!1,type:{name:'"on" | "off"'}},autoFill:{defaultValue:null,description:"",name:"autoFill",required:!1,type:{name:'"on" | "off"'}},onValueChange:{defaultValue:null,description:"",name:"onValueChange",required:!1,type:{name:"((value: string) => void)"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/common/Input/index.tsx#Input"]={docgenInfo:Input_Input.__docgenInfo,name:"Input",path:"src/components/common/Input/index.tsx#Input"})}catch(__react_docgen_typescript_loader_error){}function style_taggedTemplateLiteral(strings,raw){return raw||(raw=strings.slice(0)),Object.freeze(Object.defineProperties(strings,{raw:{value:Object.freeze(raw)}}))}var Container=styled_components_browser_esm.c.div(style_templateObject||(style_templateObject=style_taggedTemplateLiteral(["\n  position: relative;\n  padding: 15px;\n  min-height: 190px;\n  max-height: 800px;\n  min-width: 250px;\n  max-width: 350px;\n  background-color: ",";\n  box-shadow: ",";\n\n  ","\n"])),(function(p){return Object(styleFetcher.a)(p.theme,"primary","backgroundColor")}),(function(p){return Object(styleFetcher.a)(p.theme,"primary","boxShadow")}),(function(p){return p.noShadow&&"\n    box-shadow: none;\n  "})),InputWrapper=styled_components_browser_esm.c.div(style_templateObject2||(style_templateObject2=style_taggedTemplateLiteral(["\n  position: relative;\n  border: 1px solid ",";\n  background-clip: padding-box;\n\n  span:first-of-type {\n    display: inline-block;\n    margin: 5px 5px 0 5px;\n    color: ",";\n  }\n\n  & > div {\n    display: flex;\n    align-items: center;\n    margin-right: 0.2em;\n  }\n"])),(function(p){return Object(styleFetcher.a)(p.theme,"primary","borderColor")}),(function(p){return Object(styleFetcher.a)(p.theme,"primary","color")})),SwapInput=Object(styled_components_browser_esm.c)(Input_Input)(style_templateObject3||(style_templateObject3=style_taggedTemplateLiteral(["\n  border: none;\n  width: calc(100% - 10px);\n  font-size: 1.2em;\n"]))),SwapButton=styled_components_browser_esm.c.button(_templateObject4||(_templateObject4=style_taggedTemplateLiteral(["\n  display: block;\n  height: 50px;\n  width: 50px;\n  margin: auto;\n  padding: 0;\n  outline: 0;\n  border: none;\n  background: transparent;\n  cursor: pointer;\n\n  &:hover path,\n  &:focus path {\n    transition: fill 0.15s ease-in;\n    fill: ","!important;\n  }\n\n  path {\n    fill: ","!important;\n  }\n\n  > div {\n    display: block;\n    width: 35px;\n    margin: auto;\n    overflow: visible;\n  }\n"])),(function(p){return Object(styleFetcher.a)(p.theme,"disabled","color")}),(function(p){return Object(styleFetcher.a)(p.theme,"primary","color")})),SubmitButton=styled_components_browser_esm.c.button(_templateObject5||(_templateObject5=style_taggedTemplateLiteral(["\n  position: relative;\n  font-size: 1.2em;\n  background-color: ",";\n  border: 0;\n  color: ",";\n  width: 100%;\n  margin: 1rem auto 0 auto;\n  padding: 15px;\n  outline: none;\n  cursor: pointer;\n\n  &:disabled {\n    color: ",";\n    background-color: ",";\n    cursor: auto;\n  }\n\n  &:hover,\n  &:focus {\n    &:not(:disabled) {\n      background-color: ",";\n    }\n  }\n"])),(function(p){return Object(styleFetcher.a)(p.theme,"defaultButton","backgroundColor")}),(function(p){return Object(styleFetcher.a)(p.theme,"secondary","color")}),(function(p){return Object(styleFetcher.a)(p.theme,"disabled","color")}),(function(p){return Object(styleFetcher.a)(p.theme,"disabled","backgroundColor")}),(function(p){return Object(styleFetcher.a)(p.theme,"defaultButton","hoverBgColor")})),Overview=styled_components_browser_esm.c.span(_templateObject6||(_templateObject6=style_taggedTemplateLiteral(["\n  position: absolute;\n  right: 10px;\n  top: 8px;\n  font-size: 0.7em;\n  text-transform: uppercase;\n  color: ",";\n"])),(function(p){return Object(styleFetcher.a)(p.theme,"primary","color")})),Icon=__webpack_require__(59),ProtocolSelector=__webpack_require__(210);__webpack_require__(462),__webpack_require__(15);function _toConsumableArray(arr){return function _arrayWithoutHoles(arr){if(Array.isArray(arr))return utils_arrayLikeToArray(arr)}(arr)||function _iterableToArray(iter){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(iter))return Array.from(iter)}(arr)||function utils_unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return utils_arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return utils_arrayLikeToArray(o,minLen)}(arr)||function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function utils_arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}var excludeCommonSymbol=function excludeCommonSymbol(activeProtocol,array){var idx=array.findIndex((function(x){return x.symbol===activeProtocol.symbol})),output=_toConsumableArray(array);return idx>-1&&(output[idx].hidden=!0),output};var useLocale=__webpack_require__(132);function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function CurrencySwap_slicedToArray(arr,i){return function CurrencySwap_arrayWithHoles(arr){if(Array.isArray(arr))return arr}(arr)||function CurrencySwap_iterableToArrayLimit(arr,i){if("undefined"==typeof Symbol||!(Symbol.iterator in Object(arr)))return;var _arr=[],_n=!0,_d=!1,_e=void 0;try{for(var _s,_i=arr[Symbol.iterator]();!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}(arr,i)||function CurrencySwap_unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return CurrencySwap_arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return CurrencySwap_arrayLikeToArray(o,minLen)}(arr,i)||function CurrencySwap_nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function CurrencySwap_arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}var _parameters,CurrencySwap_CurrencySwap=function CurrencySwap(props){var locale=Object(useLocale.a)(),strs=locale.strings.currencySwap,_useState2=CurrencySwap_slicedToArray(Object(react.useState)({input:[],output:[]}),2),protocols=_useState2[0],setProtocols=_useState2[1],_useState4=CurrencySwap_slicedToArray(Object(react.useState)(),2),activeProtocols=_useState4[0],setActiveProtocols=_useState4[1],_useState6=CurrencySwap_slicedToArray(Object(react.useState)({}),2),swapValues=_useState6[0],setSwapValues=_useState6[1],_useState8=CurrencySwap_slicedToArray(Object(react.useState)(!1),2),canSwap=_useState8[0],setCanSwap=_useState8[1],dataRef=function usePrevious(state){var ref=Object(react.useRef)();return Object(react.useEffect)((function(){ref.current=state}),[state]),ref.current}(activeProtocols);Object(react.useLayoutEffect)((function(){var _props$protocols=props.protocols,input=_props$protocols.input,output=_props$protocols.output,inputList=null!=input?input:[];setProtocols({input:inputList,output:null!=output?output:inputList})}),[props.protocols]);var getMaxFractionDigits=Object(react.useCallback)((function(decimals){var decimalsOrDefault=null!=decimals?decimals:8;return!props.maxFractionDigits||props.maxFractionDigits>=decimalsOrDefault?decimalsOrDefault:props.maxFractionDigits}),[props.maxFractionDigits]),reflectProtocolsAndPrices=Object(react.useCallback)((function(end,value){if(activeProtocols&&activeProtocols[end]){var currentProto=activeProtocols[end],oppositeEnd="input"===end?"output":"input",oppositeProto=activeProtocols[oppositeEnd],oppositeValue=oppositeProto?value*currentProto.price/oppositeProto.price:null;if(oppositeValue){var _activeProtocols$end,toStr=oppositeValue.toLocaleString(locale.locale,{maximumFractionDigits:getMaxFractionDigits(null===(_activeProtocols$end=activeProtocols[end])||void 0===_activeProtocols$end?void 0:_activeProtocols$end.decimals)});oppositeValue=parseFloat(toStr.replace(/[^\d\.\-]/g,""))}setSwapValues((function(prevProps){var _Object$assign;return Object.assign({},prevProps,(_defineProperty(_Object$assign={},end,value),_defineProperty(_Object$assign,oppositeEnd,oppositeValue),_Object$assign))}))}}),[activeProtocols,getMaxFractionDigits,locale.locale]);Object(react.useEffect)((function(){var _swapValues$end;setProtocols((function(prevState){return Object.assign({},prevState,function preventCommonSymbol(protocols,activeProtocols){var newProtoState=Object.assign({},protocols,{input:protocols.input.map((function(x){return x.hidden=!1,x})),output:protocols.output.map((function(x){return x.hidden=!1,x}))});return null!=activeProtocols&&activeProtocols.output&&(newProtoState.input=excludeCommonSymbol(activeProtocols.output,newProtoState.input)),null!=activeProtocols&&activeProtocols.input&&(newProtoState.output=excludeCommonSymbol(activeProtocols.input,newProtoState.output)),newProtoState}(prevState,activeProtocols))}));var end=(null==dataRef?void 0:dataRef.input)!==(null==activeProtocols?void 0:activeProtocols.input)?"output":"input";reflectProtocolsAndPrices(end,null!==(_swapValues$end=swapValues[end])&&void 0!==_swapValues$end?_swapValues$end:0)}),[activeProtocols,reflectProtocolsAndPrices]),Object(react.useEffect)((function(){var _swapValues$input;return activeProtocols&&activeProtocols.input&&activeProtocols.output&&swapValues.input?activeProtocols.input.balance<=0||(null!==(_swapValues$input=swapValues.input)&&void 0!==_swapValues$input?_swapValues$input:-1)<=0||swapValues.input>activeProtocols.input.balance?setCanSwap(!1):setCanSwap(!props.locked):setCanSwap(!1)}),[props.locked,activeProtocols,swapValues]);var handleValueChange=function handleValueChange(end){return function(newValue){var value=Number(newValue);setSwapValues({input:void 0,output:void 0}),isNaN(value)||reflectProtocolsAndPrices(end,value)}},handleKeyboardSubmission=function handleKeyboardSubmission(e){"Enter"===e.key&&canSwap&&handleSubmit()},handleSubmit=function handleSubmit(){swapValues&&activeProtocols&&("function"==typeof props.onSubmit&&props.onSubmit({amounts:swapValues,protocols:activeProtocols}),setSwapValues({input:0,output:0}))},getSwapInput=function getSwapInput(end){return Object(jsx_runtime.jsxs)("div",{children:[Object(jsx_runtime.jsx)(SwapInput,{type:"decimal",maxLength:19,placeholder:"0.00",value:swapValues[end],onValueChange:handleValueChange(end)}),Object(jsx_runtime.jsx)("div",{children:Object(jsx_runtime.jsx)(ProtocolSelector.a,{current:activeProtocols?activeProtocols[end]:void 0,list:protocols[end].filter((function(x){return!x.hidden})),onChange:function onChange(newProto){return setActiveProtocols(Object.assign({},activeProtocols,_defineProperty({},end,newProto)))}})})]})};return Object(jsx_runtime.jsxs)(Container,{noShadow:props.noShadow,children:[Object(jsx_runtime.jsxs)(InputWrapper,{onKeyPress:handleKeyboardSubmission,children:[Object(jsx_runtime.jsxs)("div",{children:[Object(jsx_runtime.jsx)("span",{children:strs.from}),(null==activeProtocols?void 0:activeProtocols.input)&&Object(jsx_runtime.jsxs)(Overview,{children:[strs.balance," ",activeProtocols.input.balance>0?activeProtocols.input.balance:0]})]}),getSwapInput("input")]}),Object(jsx_runtime.jsx)(SwapButton,{"aria-label":strs.swapBtnLabel,onClick:function onClick(e){e.screenX>0&&e.screenY&&e.currentTarget.blur(),setSwapValues({input:swapValues.output,output:swapValues.input}),setActiveProtocols({input:null==activeProtocols?void 0:activeProtocols.output,output:null==activeProtocols?void 0:activeProtocols.input})},children:Object(jsx_runtime.jsx)(Icon.a,{type:Icon.b.ArrowDown,style:{width:"18px"}})}),Object(jsx_runtime.jsxs)(InputWrapper,{onKeyPress:handleKeyboardSubmission,children:[Object(jsx_runtime.jsx)("span",{children:strs.from}),function getPriceEquiv(){if(null!=activeProtocols&&activeProtocols.input&&null!=activeProtocols&&activeProtocols.output){var input=activeProtocols.input,output=activeProtocols.output;if(!(input.price<=0))return Object(jsx_runtime.jsxs)(Overview,{children:["1 ",input.symbol," = ",(input.price/output.price).toLocaleString(locale.locale,{maximumFractionDigits:getMaxFractionDigits(output.decimals)})," ",output.symbol]})}}(),getSwapInput("output")]}),Object(jsx_runtime.jsx)(SubmitButton,{"aria-label":"Submit",disabled:!canSwap,onClick:handleSubmit,children:function getButtonValue(){var _strs$submitButton=strs.submitButton,insufficientBalance=_strs$submitButton.insufficientBalance,unlockWallet=_strs$submitButton.unlockWallet,proceed=_strs$submitButton.proceed;return props.locked?unlockWallet:activeProtocols&&swapValues.input&&activeProtocols.input&&"number"==typeof activeProtocols.input.balance&&activeProtocols.input.balance<swapValues.input?insufficientBalance:proceed}()})]})};CurrencySwap_CurrencySwap.displayName="CurrencySwap",CurrencySwap_CurrencySwap.defaultProps={maxFractionDigits:8};try{CurrencySwap_CurrencySwap.displayName="CurrencySwap",CurrencySwap_CurrencySwap.__docgenInfo={description:"",displayName:"CurrencySwap",props:{locked:{defaultValue:null,description:"",name:"locked",required:!1,type:{name:"boolean"}},noShadow:{defaultValue:null,description:"",name:"noShadow",required:!1,type:{name:"boolean"}},protocols:{defaultValue:null,description:"",name:"protocols",required:!0,type:{name:"Partial<IProtocolArrayPipe>"}},maxFractionDigits:{defaultValue:null,description:"",name:"maxFractionDigits",required:!1,type:{name:"number"}},onSubmit:{defaultValue:null,description:"",name:"onSubmit",required:!1,type:{name:"((submission: ISwapSubmission) => void)"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/CurrencySwap/index.tsx#CurrencySwap"]={docgenInfo:CurrencySwap_CurrencySwap.__docgenInfo,name:"CurrencySwap",path:"src/components/CurrencySwap/index.tsx#CurrencySwap"})}catch(__react_docgen_typescript_loader_error){}function index_stories_defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}__webpack_exports__.default={parameters:(_parameters={storySource:{source:'\n    \n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = "\\n    \\n    // @ts-nocheck\\n    // @ts-ignore\\n    var __STORY__ = \\"import React from \'react\';\\\\nimport { action } from \'@storybook/addon-actions\';\\\\nimport { Meta, Story } from \'@storybook/react\';\\\\nimport { ThemeWrapper } from \'../../providers/theme/themeWrapper\';\\\\nimport { IProps } from \'./interfaces\';\\\\nimport { activeProtocols } from \'../ProtocolSelector/__tests__/mocks\';\\\\nimport { CurrencySwap } from \'.\';\\\\n\\\\nexport default {\\\\n  title: \'Components/CurrencySwap\',\\\\n} as Meta;\\\\n\\\\nexport const Basic: Story<IProps> = (args) => (\\\\n  <>\\\\n    <div style={{ display: \'inline-block\' }}>\\\\n      <CurrencySwap\\\\n        onSubmit={action(\'onSubmit\', {\\\\n          clearOnStoryChange: true,\\\\n        })}\\\\n        {...args}\\\\n      />\\\\n    </div>\\\\n    <p>\\\\n      Once clicked on Swap, check the result into the <i>Actions</i> tab below 👇\\\\n    </p>\\\\n  </>\\\\n);\\\\nBasic.args = {\\\\n  protocols: {\\\\n    input: activeProtocols,\\\\n  },\\\\n  locked: false,\\\\n  maxFractionDigits: 5,\\\\n  noShadow: false,\\\\n};\\\\n\\\\nexport const Themed: Story<IProps> = (args) => (\\\\n  <ThemeWrapper>\\\\n    <Basic {...args} />\\\\n  </ThemeWrapper>\\\\n);\\\\nThemed.args = Basic.args;\\\\n\\";\\n    // @ts-ignore\\n    var __LOCATIONS_MAP__ = {\\"Basic\\":{\\"startLoc\\":{\\"col\\":36,\\"line\\":13},\\"endLoc\\":{\\"col\\":1,\\"line\\":27},\\"startBody\\":{\\"col\\":36,\\"line\\":13},\\"endBody\\":{\\"col\\":1,\\"line\\":27}},\\"Themed\\":{\\"startLoc\\":{\\"col\\":37,\\"line\\":37},\\"endLoc\\":{\\"col\\":1,\\"line\\":41},\\"startBody\\":{\\"col\\":37,\\"line\\":37},\\"endBody\\":{\\"col\\":1,\\"line\\":41}}};\\n    \\nimport React from \'react\';\\nimport { action } from \'@storybook/addon-actions\';\\nimport { Meta, Story } from \'@storybook/react\';\\nimport { ThemeWrapper } from \'../../providers/theme/themeWrapper\';\\nimport { IProps } from \'./interfaces\';\\nimport { activeProtocols } from \'../ProtocolSelector/__tests__/mocks\';\\nimport { CurrencySwap } from \'.\';\\n\\nexport default {parameters: {\\"storySource\\":{\\"source\\":\\"import React from \'react\';\\\\nimport { action } from \'@storybook/addon-actions\';\\\\nimport { Meta, Story } from \'@storybook/react\';\\\\nimport { ThemeWrapper } from \'../../providers/theme/themeWrapper\';\\\\nimport { IProps } from \'./interfaces\';\\\\nimport { activeProtocols } from \'../ProtocolSelector/__tests__/mocks\';\\\\nimport { CurrencySwap } from \'.\';\\\\n\\\\nexport default {\\\\n  title: \'Components/CurrencySwap\',\\\\n} as Meta;\\\\n\\\\nexport const Basic: Story<IProps> = (args) => (\\\\n  <>\\\\n    <div style={{ display: \'inline-block\' }}>\\\\n      <CurrencySwap\\\\n        onSubmit={action(\'onSubmit\', {\\\\n          clearOnStoryChange: true,\\\\n        })}\\\\n        {...args}\\\\n      />\\\\n    </div>\\\\n    <p>\\\\n      Once clicked on Swap, check the result into the <i>Actions</i> tab below 👇\\\\n    </p>\\\\n  </>\\\\n);\\\\nBasic.args = {\\\\n  protocols: {\\\\n    input: activeProtocols,\\\\n  },\\\\n  locked: false,\\\\n  maxFractionDigits: 5,\\\\n  noShadow: false,\\\\n};\\\\n\\\\nexport const Themed: Story<IProps> = (args) => (\\\\n  <ThemeWrapper>\\\\n    <Basic {...args} />\\\\n  </ThemeWrapper>\\\\n);\\\\nThemed.args = Basic.args;\\\\n\\",\\"locationsMap\\":{\\"basic\\":{\\"startLoc\\":{\\"col\\":36,\\"line\\":13},\\"endLoc\\":{\\"col\\":1,\\"line\\":27},\\"startBody\\":{\\"col\\":36,\\"line\\":13},\\"endBody\\":{\\"col\\":1,\\"line\\":27}},\\"themed\\":{\\"startLoc\\":{\\"col\\":37,\\"line\\":37},\\"endLoc\\":{\\"col\\":1,\\"line\\":41},\\"startBody\\":{\\"col\\":37,\\"line\\":37},\\"endBody\\":{\\"col\\":1,\\"line\\":41}}}},},\\n  title: \'Components/CurrencySwap\',\\n} as Meta;\\n\\nexport const Basic: Story<IProps> = (args) => (\\n  <>\\n    <div style={{ display: \'inline-block\' }}>\\n      <CurrencySwap\\n        onSubmit={action(\'onSubmit\', {\\n          clearOnStoryChange: true,\\n        })}\\n        {...args}\\n      />\\n    </div>\\n    <p>\\n      Once clicked on Swap, check the result into the <i>Actions</i> tab below 👇\\n    </p>\\n  </>\\n);;\\nBasic.args = {\\n  protocols: {\\n    input: activeProtocols,\\n  },\\n  locked: false,\\n  maxFractionDigits: 5,\\n  noShadow: false,\\n};\\n\\nexport const Themed: Story<IProps> = (args) => (\\n  <ThemeWrapper>\\n    <Basic {...args} />\\n  </ThemeWrapper>\\n);\\nThemed.args = Basic.args;\\n";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {"Basic":{"startLoc":{"col":36,"line":21},"endLoc":{"col":1,"line":35},"startBody":{"col":36,"line":21},"endBody":{"col":1,"line":35}},"Themed":{"startLoc":{"col":37,"line":45},"endLoc":{"col":1,"line":49},"startBody":{"col":37,"line":45},"endBody":{"col":1,"line":49}}};\n    \n\n    \n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = "import React from \'react\';\\nimport { action } from \'@storybook/addon-actions\';\\nimport { Meta, Story } from \'@storybook/react\';\\nimport { ThemeWrapper } from \'../../providers/theme/themeWrapper\';\\nimport { IProps } from \'./interfaces\';\\nimport { activeProtocols } from \'../ProtocolSelector/__tests__/mocks\';\\nimport { CurrencySwap } from \'.\';\\n\\nexport default {\\n  title: \'Components/CurrencySwap\',\\n} as Meta;\\n\\nexport const Basic: Story<IProps> = (args) => (\\n  <>\\n    <div style={{ display: \'inline-block\' }}>\\n      <CurrencySwap\\n        onSubmit={action(\'onSubmit\', {\\n          clearOnStoryChange: true,\\n        })}\\n        {...args}\\n      />\\n    </div>\\n    <p>\\n      Once clicked on Swap, check the result into the <i>Actions</i> tab below 👇\\n    </p>\\n  </>\\n);\\nBasic.args = {\\n  protocols: {\\n    input: activeProtocols,\\n  },\\n  locked: false,\\n  maxFractionDigits: 5,\\n  noShadow: false,\\n};\\n\\nexport const Themed: Story<IProps> = (args) => (\\n  <ThemeWrapper>\\n    <Basic {...args} />\\n  </ThemeWrapper>\\n);\\nThemed.args = Basic.args;\\n";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {"Basic":{"startLoc":{"col":36,"line":13},"endLoc":{"col":1,"line":27},"startBody":{"col":36,"line":13},"endBody":{"col":1,"line":27}},"Themed":{"startLoc":{"col":37,"line":37},"endLoc":{"col":1,"line":41},"startBody":{"col":37,"line":37},"endBody":{"col":1,"line":41}}};\n    \nimport React from \'react\';\nimport { action } from \'@storybook/addon-actions\';\nimport { Meta, Story } from \'@storybook/react\';\nimport { ThemeWrapper } from \'../../providers/theme/themeWrapper\';\nimport { IProps } from \'./interfaces\';\nimport { activeProtocols } from \'../ProtocolSelector/__tests__/mocks\';\nimport { CurrencySwap } from \'.\';\n\nexport default {parameters: {"storySource":{"source":"\\n    \\n    // @ts-nocheck\\n    // @ts-ignore\\n    var __STORY__ = \\"import React from \'react\';\\\\nimport { action } from \'@storybook/addon-actions\';\\\\nimport { Meta, Story } from \'@storybook/react\';\\\\nimport { ThemeWrapper } from \'../../providers/theme/themeWrapper\';\\\\nimport { IProps } from \'./interfaces\';\\\\nimport { activeProtocols } from \'../ProtocolSelector/__tests__/mocks\';\\\\nimport { CurrencySwap } from \'.\';\\\\n\\\\nexport default {\\\\n  title: \'Components/CurrencySwap\',\\\\n} as Meta;\\\\n\\\\nexport const Basic: Story<IProps> = (args) => (\\\\n  <>\\\\n    <div style={{ display: \'inline-block\' }}>\\\\n      <CurrencySwap\\\\n        onSubmit={action(\'onSubmit\', {\\\\n          clearOnStoryChange: true,\\\\n        })}\\\\n        {...args}\\\\n      />\\\\n    </div>\\\\n    <p>\\\\n      Once clicked on Swap, check the result into the <i>Actions</i> tab below 👇\\\\n    </p>\\\\n  </>\\\\n);\\\\nBasic.args = {\\\\n  protocols: {\\\\n    input: activeProtocols,\\\\n  },\\\\n  locked: false,\\\\n  maxFractionDigits: 5,\\\\n  noShadow: false,\\\\n};\\\\n\\\\nexport const Themed: Story<IProps> = (args) => (\\\\n  <ThemeWrapper>\\\\n    <Basic {...args} />\\\\n  </ThemeWrapper>\\\\n);\\\\nThemed.args = Basic.args;\\\\n\\";\\n    // @ts-ignore\\n    var __LOCATIONS_MAP__ = {\\"Basic\\":{\\"startLoc\\":{\\"col\\":36,\\"line\\":13},\\"endLoc\\":{\\"col\\":1,\\"line\\":27},\\"startBody\\":{\\"col\\":36,\\"line\\":13},\\"endBody\\":{\\"col\\":1,\\"line\\":27}},\\"Themed\\":{\\"startLoc\\":{\\"col\\":37,\\"line\\":37},\\"endLoc\\":{\\"col\\":1,\\"line\\":41},\\"startBody\\":{\\"col\\":37,\\"line\\":37},\\"endBody\\":{\\"col\\":1,\\"line\\":41}}};\\n    \\nimport React from \'react\';\\nimport { action } from \'@storybook/addon-actions\';\\nimport { Meta, Story } from \'@storybook/react\';\\nimport { ThemeWrapper } from \'../../providers/theme/themeWrapper\';\\nimport { IProps } from \'./interfaces\';\\nimport { activeProtocols } from \'../ProtocolSelector/__tests__/mocks\';\\nimport { CurrencySwap } from \'.\';\\n\\nexport default {parameters: {\\"storySource\\":{\\"source\\":\\"import React from \'react\';\\\\nimport { action } from \'@storybook/addon-actions\';\\\\nimport { Meta, Story } from \'@storybook/react\';\\\\nimport { ThemeWrapper } from \'../../providers/theme/themeWrapper\';\\\\nimport { IProps } from \'./interfaces\';\\\\nimport { activeProtocols } from \'../ProtocolSelector/__tests__/mocks\';\\\\nimport { CurrencySwap } from \'.\';\\\\n\\\\nexport default {\\\\n  title: \'Components/CurrencySwap\',\\\\n} as Meta;\\\\n\\\\nexport const Basic: Story<IProps> = (args) => (\\\\n  <>\\\\n    <div style={{ display: \'inline-block\' }}>\\\\n      <CurrencySwap\\\\n        onSubmit={action(\'onSubmit\', {\\\\n          clearOnStoryChange: true,\\\\n        })}\\\\n        {...args}\\\\n      />\\\\n    </div>\\\\n    <p>\\\\n      Once clicked on Swap, check the result into the <i>Actions</i> tab below 👇\\\\n    </p>\\\\n  </>\\\\n);\\\\nBasic.args = {\\\\n  protocols: {\\\\n    input: activeProtocols,\\\\n  },\\\\n  locked: false,\\\\n  maxFractionDigits: 5,\\\\n  noShadow: false,\\\\n};\\\\n\\\\nexport const Themed: Story<IProps> = (args) => (\\\\n  <ThemeWrapper>\\\\n    <Basic {...args} />\\\\n  </ThemeWrapper>\\\\n);\\\\nThemed.args = Basic.args;\\\\n\\",\\"locationsMap\\":{\\"basic\\":{\\"startLoc\\":{\\"col\\":36,\\"line\\":13},\\"endLoc\\":{\\"col\\":1,\\"line\\":27},\\"startBody\\":{\\"col\\":36,\\"line\\":13},\\"endBody\\":{\\"col\\":1,\\"line\\":27}},\\"themed\\":{\\"startLoc\\":{\\"col\\":37,\\"line\\":37},\\"endLoc\\":{\\"col\\":1,\\"line\\":41},\\"startBody\\":{\\"col\\":37,\\"line\\":37},\\"endBody\\":{\\"col\\":1,\\"line\\":41}}}},},\\n  title: \'Components/CurrencySwap\',\\n} as Meta;\\n\\nexport const Basic: Story<IProps> = (args) => (\\n  <>\\n    <div style={{ display: \'inline-block\' }}>\\n      <CurrencySwap\\n        onSubmit={action(\'onSubmit\', {\\n          clearOnStoryChange: true,\\n        })}\\n        {...args}\\n      />\\n    </div>\\n    <p>\\n      Once clicked on Swap, check the result into the <i>Actions</i> tab below 👇\\n    </p>\\n  </>\\n);;\\nBasic.args = {\\n  protocols: {\\n    input: activeProtocols,\\n  },\\n  locked: false,\\n  maxFractionDigits: 5,\\n  noShadow: false,\\n};\\n\\nexport const Themed: Story<IProps> = (args) => (\\n  <ThemeWrapper>\\n    <Basic {...args} />\\n  </ThemeWrapper>\\n);\\nThemed.args = Basic.args;\\n","locationsMap":{"basic":{"startLoc":{"col":36,"line":21},"endLoc":{"col":1,"line":35},"startBody":{"col":36,"line":21},"endBody":{"col":1,"line":35}},"themed":{"startLoc":{"col":37,"line":45},"endLoc":{"col":1,"line":49},"startBody":{"col":37,"line":45},"endBody":{"col":1,"line":49}}}},"storySource":{"source":"import React from \'react\';\\nimport { action } from \'@storybook/addon-actions\';\\nimport { Meta, Story } from \'@storybook/react\';\\nimport { ThemeWrapper } from \'../../providers/theme/themeWrapper\';\\nimport { IProps } from \'./interfaces\';\\nimport { activeProtocols } from \'../ProtocolSelector/__tests__/mocks\';\\nimport { CurrencySwap } from \'.\';\\n\\nexport default {\\n  title: \'Components/CurrencySwap\',\\n} as Meta;\\n\\nexport const Basic: Story<IProps> = (args) => (\\n  <>\\n    <div style={{ display: \'inline-block\' }}>\\n      <CurrencySwap\\n        onSubmit={action(\'onSubmit\', {\\n          clearOnStoryChange: true,\\n        })}\\n        {...args}\\n      />\\n    </div>\\n    <p>\\n      Once clicked on Swap, check the result into the <i>Actions</i> tab below 👇\\n    </p>\\n  </>\\n);\\nBasic.args = {\\n  protocols: {\\n    input: activeProtocols,\\n  },\\n  locked: false,\\n  maxFractionDigits: 5,\\n  noShadow: false,\\n};\\n\\nexport const Themed: Story<IProps> = (args) => (\\n  <ThemeWrapper>\\n    <Basic {...args} />\\n  </ThemeWrapper>\\n);\\nThemed.args = Basic.args;\\n","locationsMap":{"basic":{"startLoc":{"col":36,"line":13},"endLoc":{"col":1,"line":27},"startBody":{"col":36,"line":13},"endBody":{"col":1,"line":27}},"themed":{"startLoc":{"col":37,"line":37},"endLoc":{"col":1,"line":41},"startBody":{"col":37,"line":37},"endBody":{"col":1,"line":41}}}},},\n  title: \'Components/CurrencySwap\',\n} as Meta;\n\nexport const Basic: Story<IProps> = (args) => (\n  <>\n    <div style={{ display: \'inline-block\' }}>\n      <CurrencySwap\n        onSubmit={action(\'onSubmit\', {\n          clearOnStoryChange: true,\n        })}\n        {...args}\n      />\n    </div>\n    <p>\n      Once clicked on Swap, check the result into the <i>Actions</i> tab below 👇\n    </p>\n  </>\n);;;\nBasic.args = {\n  protocols: {\n    input: activeProtocols,\n  },\n  locked: false,\n  maxFractionDigits: 5,\n  noShadow: false,\n};\n\nexport const Themed: Story<IProps> = (args) => (\n  <ThemeWrapper>\n    <Basic {...args} />\n  </ThemeWrapper>\n);\nThemed.args = Basic.args;\n',locationsMap:{basic:{startLoc:{col:36,line:29},endLoc:{col:1,line:43},startBody:{col:36,line:29},endBody:{col:1,line:43}},themed:{startLoc:{col:37,line:53},endLoc:{col:1,line:57},startBody:{col:37,line:53},endBody:{col:1,line:57}}}}},index_stories_defineProperty(_parameters,"storySource",{source:'\n    \n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = "import React from \'react\';\\nimport { action } from \'@storybook/addon-actions\';\\nimport { Meta, Story } from \'@storybook/react\';\\nimport { ThemeWrapper } from \'../../providers/theme/themeWrapper\';\\nimport { IProps } from \'./interfaces\';\\nimport { activeProtocols } from \'../ProtocolSelector/__tests__/mocks\';\\nimport { CurrencySwap } from \'.\';\\n\\nexport default {\\n  title: \'Components/CurrencySwap\',\\n} as Meta;\\n\\nexport const Basic: Story<IProps> = (args) => (\\n  <>\\n    <div style={{ display: \'inline-block\' }}>\\n      <CurrencySwap\\n        onSubmit={action(\'onSubmit\', {\\n          clearOnStoryChange: true,\\n        })}\\n        {...args}\\n      />\\n    </div>\\n    <p>\\n      Once clicked on Swap, check the result into the <i>Actions</i> tab below 👇\\n    </p>\\n  </>\\n);\\nBasic.args = {\\n  protocols: {\\n    input: activeProtocols,\\n  },\\n  locked: false,\\n  maxFractionDigits: 5,\\n  noShadow: false,\\n};\\n\\nexport const Themed: Story<IProps> = (args) => (\\n  <ThemeWrapper>\\n    <Basic {...args} />\\n  </ThemeWrapper>\\n);\\nThemed.args = Basic.args;\\n";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {"Basic":{"startLoc":{"col":36,"line":13},"endLoc":{"col":1,"line":27},"startBody":{"col":36,"line":13},"endBody":{"col":1,"line":27}},"Themed":{"startLoc":{"col":37,"line":37},"endLoc":{"col":1,"line":41},"startBody":{"col":37,"line":37},"endBody":{"col":1,"line":41}}};\n    \nimport React from \'react\';\nimport { action } from \'@storybook/addon-actions\';\nimport { Meta, Story } from \'@storybook/react\';\nimport { ThemeWrapper } from \'../../providers/theme/themeWrapper\';\nimport { IProps } from \'./interfaces\';\nimport { activeProtocols } from \'../ProtocolSelector/__tests__/mocks\';\nimport { CurrencySwap } from \'.\';\n\nexport default {parameters: {"storySource":{"source":"import React from \'react\';\\nimport { action } from \'@storybook/addon-actions\';\\nimport { Meta, Story } from \'@storybook/react\';\\nimport { ThemeWrapper } from \'../../providers/theme/themeWrapper\';\\nimport { IProps } from \'./interfaces\';\\nimport { activeProtocols } from \'../ProtocolSelector/__tests__/mocks\';\\nimport { CurrencySwap } from \'.\';\\n\\nexport default {\\n  title: \'Components/CurrencySwap\',\\n} as Meta;\\n\\nexport const Basic: Story<IProps> = (args) => (\\n  <>\\n    <div style={{ display: \'inline-block\' }}>\\n      <CurrencySwap\\n        onSubmit={action(\'onSubmit\', {\\n          clearOnStoryChange: true,\\n        })}\\n        {...args}\\n      />\\n    </div>\\n    <p>\\n      Once clicked on Swap, check the result into the <i>Actions</i> tab below 👇\\n    </p>\\n  </>\\n);\\nBasic.args = {\\n  protocols: {\\n    input: activeProtocols,\\n  },\\n  locked: false,\\n  maxFractionDigits: 5,\\n  noShadow: false,\\n};\\n\\nexport const Themed: Story<IProps> = (args) => (\\n  <ThemeWrapper>\\n    <Basic {...args} />\\n  </ThemeWrapper>\\n);\\nThemed.args = Basic.args;\\n","locationsMap":{"basic":{"startLoc":{"col":36,"line":13},"endLoc":{"col":1,"line":27},"startBody":{"col":36,"line":13},"endBody":{"col":1,"line":27}},"themed":{"startLoc":{"col":37,"line":37},"endLoc":{"col":1,"line":41},"startBody":{"col":37,"line":37},"endBody":{"col":1,"line":41}}}},},\n  title: \'Components/CurrencySwap\',\n} as Meta;\n\nexport const Basic: Story<IProps> = (args) => (\n  <>\n    <div style={{ display: \'inline-block\' }}>\n      <CurrencySwap\n        onSubmit={action(\'onSubmit\', {\n          clearOnStoryChange: true,\n        })}\n        {...args}\n      />\n    </div>\n    <p>\n      Once clicked on Swap, check the result into the <i>Actions</i> tab below 👇\n    </p>\n  </>\n);;\nBasic.args = {\n  protocols: {\n    input: activeProtocols,\n  },\n  locked: false,\n  maxFractionDigits: 5,\n  noShadow: false,\n};\n\nexport const Themed: Story<IProps> = (args) => (\n  <ThemeWrapper>\n    <Basic {...args} />\n  </ThemeWrapper>\n);\nThemed.args = Basic.args;\n',locationsMap:{basic:{startLoc:{col:36,line:21},endLoc:{col:1,line:35},startBody:{col:36,line:21},endBody:{col:1,line:35}},themed:{startLoc:{col:37,line:45},endLoc:{col:1,line:49},startBody:{col:37,line:45},endBody:{col:1,line:49}}}}),index_stories_defineProperty(_parameters,"storySource",{source:"import React from 'react';\nimport { action } from '@storybook/addon-actions';\nimport { Meta, Story } from '@storybook/react';\nimport { ThemeWrapper } from '../../providers/theme/themeWrapper';\nimport { IProps } from './interfaces';\nimport { activeProtocols } from '../ProtocolSelector/__tests__/mocks';\nimport { CurrencySwap } from '.';\n\nexport default {\n  title: 'Components/CurrencySwap',\n} as Meta;\n\nexport const Basic: Story<IProps> = (args) => (\n  <>\n    <div style={{ display: 'inline-block' }}>\n      <CurrencySwap\n        onSubmit={action('onSubmit', {\n          clearOnStoryChange: true,\n        })}\n        {...args}\n      />\n    </div>\n    <p>\n      Once clicked on Swap, check the result into the <i>Actions</i> tab below 👇\n    </p>\n  </>\n);\nBasic.args = {\n  protocols: {\n    input: activeProtocols,\n  },\n  locked: false,\n  maxFractionDigits: 5,\n  noShadow: false,\n};\n\nexport const Themed: Story<IProps> = (args) => (\n  <ThemeWrapper>\n    <Basic {...args} />\n  </ThemeWrapper>\n);\nThemed.args = Basic.args;\n",locationsMap:{basic:{startLoc:{col:36,line:13},endLoc:{col:1,line:27},startBody:{col:36,line:13},endBody:{col:1,line:27}},themed:{startLoc:{col:37,line:37},endLoc:{col:1,line:41},startBody:{col:37,line:37},endBody:{col:1,line:41}}}}),_parameters),title:"Components/CurrencySwap"};var index_stories_Basic=function Basic(args){return Object(jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[Object(jsx_runtime.jsx)("div",{style:{display:"inline-block"},children:Object(jsx_runtime.jsx)(CurrencySwap_CurrencySwap,Object.assign({onSubmit:Object(esm.action)("onSubmit",{clearOnStoryChange:!0})},args))}),Object(jsx_runtime.jsxs)("p",{children:["Once clicked on Swap, check the result into the ",Object(jsx_runtime.jsx)("i",{children:"Actions"})," tab below 👇"]})]})};index_stories_Basic.args={protocols:{input:mocks.a},locked:!1,maxFractionDigits:5,noShadow:!1};var index_stories_Themed=function Themed(args){return Object(jsx_runtime.jsx)(themeWrapper.a,{children:Object(jsx_runtime.jsx)(index_stories_Basic,Object.assign({},args))})};index_stories_Themed.displayName="Themed",index_stories_Themed.args=index_stories_Basic.args},1092:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var preview_namespaceObject={};__webpack_require__.r(preview_namespaceObject),__webpack_require__.d(preview_namespaceObject,"parameters",(function(){return parameters}));__webpack_require__(17),__webpack_require__(27),__webpack_require__(56),__webpack_require__(1049),__webpack_require__(39),__webpack_require__(40),__webpack_require__(1050),__webpack_require__(85),__webpack_require__(105);var client_api=__webpack_require__(111),esm=__webpack_require__(6),create=(__webpack_require__(9),__webpack_require__(251)),client=__webpack_require__(242),dist=__webpack_require__(577);__webpack_require__(1066);Object(client.addDecorator)(dist.withPropsTable);var parameters={actions:{argTypesRegex:"^on.*"},darkMode:{darkClass:"lights-out",lightClass:"lights-on",current:"light",stylePreview:!1,dark:Object.assign({},create.a.dark,{appBg:"#121212",appContentBg:"#121212"}),light:Object.assign({},create.a.normal)}};function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}Object.keys(preview_namespaceObject).forEach((function(key){var value=preview_namespaceObject[key];switch(key){case"args":case"argTypes":return esm.a.warn("Invalid args/argTypes in config, ignoring.",JSON.stringify(value));case"decorators":return value.forEach((function(decorator){return Object(client_api.b)(decorator,!1)}));case"loaders":return value.forEach((function(loader){return Object(client_api.c)(loader,!1)}));case"parameters":return Object(client_api.d)(function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach((function(key){_defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}({},value),!1);case"argTypesEnhancers":return value.forEach((function(enhancer){return Object(client_api.a)(enhancer)}));case"globals":case"globalTypes":var v={};return v[key]=value,Object(client_api.d)(v,!1);default:return console.log(key+" was not supported :( !")}}))},1093:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Basic",(function(){return index_stories_Basic})),__webpack_require__.d(__webpack_exports__,"Statuses",(function(){return index_stories_Statuses})),__webpack_require__.d(__webpack_exports__,"TransactionDetails",(function(){return index_stories_TransactionDetails})),__webpack_require__.d(__webpack_exports__,"Animated",(function(){return index_stories_Animated})),__webpack_require__.d(__webpack_exports__,"Scenario",(function(){return index_stories_Scenario}));__webpack_require__(25),__webpack_require__(94),__webpack_require__(85),__webpack_require__(105),__webpack_require__(86),__webpack_require__(27),__webpack_require__(28),__webpack_require__(54),__webpack_require__(32),__webpack_require__(30),__webpack_require__(34),__webpack_require__(12),__webpack_require__(65),__webpack_require__(17),__webpack_require__(9),__webpack_require__(106),__webpack_require__(71),__webpack_require__(14),__webpack_require__(356);var _templateObject,_parameters,react=__webpack_require__(0),styled_components_browser_esm=__webpack_require__(7),TransactionStatus=__webpack_require__(55),txStatus=__webpack_require__(42),txstatus_completed=__webpack_require__.p+"static/media/txstatus-completed.87b0f1b0.jpg",jsx_runtime=__webpack_require__(1);function _slicedToArray(arr,i){return function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}(arr)||function _iterableToArrayLimit(arr,i){if("undefined"==typeof Symbol||!(Symbol.iterator in Object(arr)))return;var _arr=[],_n=!0,_d=!1,_e=void 0;try{for(var _s,_i=arr[Symbol.iterator]();!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}(arr,i)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr,i)||function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var Spacer=styled_components_browser_esm.c.div(_templateObject||(_templateObject=function _taggedTemplateLiteral(strings,raw){return raw||(raw=strings.slice(0)),Object.freeze(Object.defineProperties(strings,{raw:{value:Object.freeze(raw)}}))}(["\n  margin: 10px 0 10px 0;\n"]))),argTypes=(__webpack_exports__.default={parameters:(_parameters={storySource:{source:'\n    \n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = "\\n    \\n    // @ts-nocheck\\n    // @ts-ignore\\n    var __STORY__ = \\"import React, { Fragment, useEffect, useRef, useState } from \'react\';\\\\nimport styled from \'styled-components\';\\\\nimport { Meta, Story } from \'@storybook/react\';\\\\nimport { TransactionStatus } from \'../TransactionStatus\';\\\\nimport { IAddress, IProps } from \'./interfaces\';\\\\nimport { TxStatus } from \'./txStatus\';\\\\n\\\\nimport txCompletedImg from \'../../assets/txstatus-completed.jpg\';\\\\n\\\\nconst Spacer = styled.div`\\\\n  margin: 10px 0 10px 0;\\\\n`;\\\\n\\\\nexport default {\\\\n  title: \'Components/TransactionStatus\',\\\\n} as Meta;\\\\n\\\\nconst argTypes = {\\\\n  status: {\\\\n    control: {\\\\n      type: \'select\',\\\\n      options: Object.keys(TxStatus),\\\\n    },\\\\n  },\\\\n};\\\\n\\\\nconst controlsToProps = (args: IProps): IProps => {\\\\n  if (args.status && TxStatus[args.status]) {\\\\n    args.status = TxStatus[args.status];\\\\n  }\\\\n\\\\n  return args;\\\\n};\\\\n\\\\nexport const Basic: Story<IProps> = (args) => <TransactionStatus {...controlsToProps(args)} />;\\\\nBasic.argTypes = argTypes;\\\\nBasic.args = {\\\\n  status: TxStatus.COMPLETED,\\\\n  amount: \'0.1\',\\\\n  symbol: \'BTC\',\\\\n  animated: false,\\\\n  noShadow: false,\\\\n  uncapitalizeStatus: false,\\\\n};\\\\n\\\\nexport const Statuses: Story<IProps> = () => (\\\\n  <Fragment>\\\\n    <Spacer>\\\\n      <TransactionStatus\\\\n        amount=\'0.1\'\\\\n        symbol=\'BTC\'\\\\n        txURL=\'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\'\\\\n      />\\\\n    </Spacer>\\\\n    <Spacer>\\\\n      <TransactionStatus\\\\n        amount=\'0.1\'\\\\n        symbol=\'BTC\'\\\\n        status={TxStatus.PENDING}\\\\n        txURL=\'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\'\\\\n      />\\\\n    </Spacer>\\\\n    <Spacer>\\\\n      <TransactionStatus\\\\n        amount=\'0.1\'\\\\n        symbol=\'BTC\'\\\\n        status={TxStatus.COMPLETED}\\\\n        txURL=\'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\'\\\\n      />\\\\n    </Spacer>\\\\n    <Spacer>\\\\n      <TransactionStatus\\\\n        amount=\'0.1\'\\\\n        symbol=\'BTC\'\\\\n        status={TxStatus.FAILED}\\\\n        txURL=\'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\'\\\\n      />\\\\n    </Spacer>\\\\n  </Fragment>\\\\n);\\\\nStatuses.parameters = {\\\\n  controls: { hideNoControlsWarning: true },\\\\n};\\\\n\\\\nexport const TransactionDetails: Story<IProps> = (args) => (\\\\n  <TransactionStatus\\\\n    txFees=\'0.0001\'\\\\n    date={{\\\\n      value: new Date(),\\\\n    }}\\\\n    sender={{\\\\n      hash: \'1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa\',\\\\n      url: \'https://www.blockchain.com/btc/address/1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa\',\\\\n    }}\\\\n    receiver={{\\\\n      hash: \'1CounterpartyXXXXXXXXXXXXXXXUWLpVr\',\\\\n    }}\\\\n    customDetailComponent={<b>Hello, this is a custom component!</b>}\\\\n    txURL=\'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\'\\\\n    {...controlsToProps(args)}\\\\n  />\\\\n);\\\\nTransactionDetails.argTypes = argTypes;\\\\nTransactionDetails.args = {\\\\n  ...Basic.args,\\\\n  txFees: \'0.0001\',\\\\n  date: {\\\\n    value: new Date(),\\\\n  },\\\\n  sender: {\\\\n    hash: \'1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa\',\\\\n    url: \'https://www.blockchain.com/btc/address/1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa\',\\\\n  },\\\\n  receiver: {\\\\n    hash: \'1CounterpartyXXXXXXXXXXXXXXXUWLpVr\',\\\\n  },\\\\n  customDetailComponent: <b>Hello, this is a custom component!</b>,\\\\n  txURL:\\\\n    \'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\',\\\\n};\\\\n\\\\nexport const Animated: Story<IProps> = () => (\\\\n  <Fragment>\\\\n    <Spacer>\\\\n      <TransactionStatus\\\\n        animated\\\\n        amount=\'0.1\'\\\\n        symbol=\'BTC\'\\\\n        status={TxStatus.PENDING}\\\\n        txURL=\'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\'\\\\n      />\\\\n    </Spacer>\\\\n    <Spacer>\\\\n      <TransactionStatus\\\\n        animated\\\\n        amount=\'0.1\'\\\\n        symbol=\'BTC\'\\\\n        status={TxStatus.UNKNOWN}\\\\n        txURL=\'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\'\\\\n      />\\\\n    </Spacer>\\\\n    <Spacer>\\\\n      <TransactionStatus\\\\n        animated\\\\n        amount=\'0.1\'\\\\n        symbol=\'BTC\'\\\\n        status={TxStatus.COMPLETED}\\\\n        txURL=\'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\'\\\\n      />\\\\n    </Spacer>\\\\n    <Spacer>\\\\n      <TransactionStatus\\\\n        animated\\\\n        amount=\'0.1\'\\\\n        symbol=\'BTC\'\\\\n        status={TxStatus.FAILED}\\\\n        txURL=\'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\'\\\\n      />\\\\n    </Spacer>\\\\n  </Fragment>\\\\n);\\\\nAnimated.parameters = {\\\\n  controls: { hideNoControlsWarning: true },\\\\n};\\\\n\\\\nexport const Scenario: Story<IProps> = () => {\\\\n  interface ITransaction {\\\\n    sender: IAddress;\\\\n    receiver: IAddress;\\\\n  }\\\\n\\\\n  const timer = useRef<NodeJS.Timeout>();\\\\n\\\\n  const [status, setStatus] = useState<TxStatus>(TxStatus.PENDING);\\\\n  const [tx, setTx] = useState<Partial<ITransaction>>({});\\\\n  const [isInit, setIsInit] = useState<boolean>(false);\\\\n  const [txURL, setTxURL] = useState<string>();\\\\n\\\\n  const _clearTimeout = () => timer.current && clearInterval(timer.current);\\\\n  const _delay = (delay: number): Promise<void> =>\\\\n    new Promise((resolve) => setTimeout(resolve, delay));\\\\n\\\\n  useEffect(() => {\\\\n    return () => _clearTimeout();\\\\n  }, []);\\\\n\\\\n  const runScenario = (): void => {\\\\n    _clearTimeout();\\\\n\\\\n    _delay(3 * 1000)\\\\n      .then(() =>\\\\n        setTxURL(\\\\n          \'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\'\\\\n        )\\\\n      )\\\\n\\\\n      // wait 5s before completing that transaction\\\\n      .then(() => _delay(5 * 1000))\\\\n      .then(() => setStatus(TxStatus.COMPLETED))\\\\n\\\\n      // let\'s say, tx infos need to be fetched before being able to render them\\\\n      .then(() => _delay(1.5 * 1000))\\\\n      .then(() =>\\\\n        setTx({\\\\n          ...tx,\\\\n          ...{\\\\n            sender: {\\\\n              hash: \'1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa\',\\\\n              url: \'https://www.blockchain.com/btc/address/1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa\',\\\\n            },\\\\n            receiver: {\\\\n              hash: \'1CounterpartyXXXXXXXXXXXXXXXUWLpVr\',\\\\n              url: \'https://www.blockchain.com/btc/address/1CounterpartyXXXXXXXXXXXXXXXUWLpVr\',\\\\n            },\\\\n            txFees: \'0.0001\',\\\\n            customDetailComponent: (\\\\n              <img src={txCompletedImg} alt=\'Custom component\' style={{ width: \'100%\' }} />\\\\n            ),\\\\n          },\\\\n        })\\\\n      );\\\\n  };\\\\n\\\\n  const _handleReset = (): void => {\\\\n    setTx({});\\\\n    setStatus(TxStatus.PENDING);\\\\n    runScenario();\\\\n  };\\\\n\\\\n  const _handleInit = (): void => {\\\\n    setIsInit(true);\\\\n    runScenario();\\\\n  };\\\\n\\\\n  if (!isInit) {\\\\n    return <button onClick={_handleInit}>Begin transaction</button>;\\\\n  }\\\\n\\\\n  return (\\\\n    <Spacer>\\\\n      <TransactionStatus\\\\n        animated\\\\n        autoShowDetails\\\\n        amount=\'0.1\'\\\\n        symbol=\'BTC\'\\\\n        status={status}\\\\n        txURL={txURL}\\\\n        date={{\\\\n          value: new Date(),\\\\n        }}\\\\n        {...tx}\\\\n      />\\\\n      <button style={{ marginTop: \'10px\' }} onClick={_handleReset}>\\\\n        Reset\\\\n      </button>\\\\n      <i style={{ display: \'block\', fontSize: \'12px\', marginTop: \'10px\' }}>\\\\n        <p>\\\\n          In this example, <u>autoShowDetails</u> property is added. <br />\\\\n          When the component will receive props, it will automatically expand the card. This is\\\\n          fully optional.\\\\n        </p>\\\\n      </i>\\\\n    </Spacer>\\\\n  );\\\\n};\\\\nScenario.parameters = {\\\\n  controls: { hideNoControlsWarning: true },\\\\n};\\\\n\\";\\n    // @ts-ignore\\n    var __LOCATIONS_MAP__ = {\\"Basic\\":{\\"startLoc\\":{\\"col\\":36,\\"line\\":35},\\"endLoc\\":{\\"col\\":94,\\"line\\":35},\\"startBody\\":{\\"col\\":36,\\"line\\":35},\\"endBody\\":{\\"col\\":94,\\"line\\":35}},\\"Statuses\\":{\\"startLoc\\":{\\"col\\":39,\\"line\\":46},\\"endLoc\\":{\\"col\\":1,\\"line\\":80},\\"startBody\\":{\\"col\\":39,\\"line\\":46},\\"endBody\\":{\\"col\\":1,\\"line\\":80}},\\"TransactionDetails\\":{\\"startLoc\\":{\\"col\\":49,\\"line\\":85},\\"endLoc\\":{\\"col\\":1,\\"line\\":102},\\"startBody\\":{\\"col\\":49,\\"line\\":85},\\"endBody\\":{\\"col\\":1,\\"line\\":102}},\\"Animated\\":{\\"startLoc\\":{\\"col\\":39,\\"line\\":122},\\"endLoc\\":{\\"col\\":1,\\"line\\":161},\\"startBody\\":{\\"col\\":39,\\"line\\":122},\\"endBody\\":{\\"col\\":1,\\"line\\":161}},\\"Scenario\\":{\\"startLoc\\":{\\"col\\":39,\\"line\\":166},\\"endLoc\\":{\\"col\\":1,\\"line\\":265},\\"startBody\\":{\\"col\\":39,\\"line\\":166},\\"endBody\\":{\\"col\\":1,\\"line\\":265}}};\\n    \\nimport React, { Fragment, useEffect, useRef, useState } from \'react\';\\nimport styled from \'styled-components\';\\nimport { Meta, Story } from \'@storybook/react\';\\nimport { TransactionStatus } from \'../TransactionStatus\';\\nimport { IAddress, IProps } from \'./interfaces\';\\nimport { TxStatus } from \'./txStatus\';\\n\\nimport txCompletedImg from \'../../assets/txstatus-completed.jpg\';\\n\\nconst Spacer = styled.div`\\n  margin: 10px 0 10px 0;\\n`;\\n\\nexport default {parameters: {\\"storySource\\":{\\"source\\":\\"import React, { Fragment, useEffect, useRef, useState } from \'react\';\\\\nimport styled from \'styled-components\';\\\\nimport { Meta, Story } from \'@storybook/react\';\\\\nimport { TransactionStatus } from \'../TransactionStatus\';\\\\nimport { IAddress, IProps } from \'./interfaces\';\\\\nimport { TxStatus } from \'./txStatus\';\\\\n\\\\nimport txCompletedImg from \'../../assets/txstatus-completed.jpg\';\\\\n\\\\nconst Spacer = styled.div`\\\\n  margin: 10px 0 10px 0;\\\\n`;\\\\n\\\\nexport default {\\\\n  title: \'Components/TransactionStatus\',\\\\n} as Meta;\\\\n\\\\nconst argTypes = {\\\\n  status: {\\\\n    control: {\\\\n      type: \'select\',\\\\n      options: Object.keys(TxStatus),\\\\n    },\\\\n  },\\\\n};\\\\n\\\\nconst controlsToProps = (args: IProps): IProps => {\\\\n  if (args.status && TxStatus[args.status]) {\\\\n    args.status = TxStatus[args.status];\\\\n  }\\\\n\\\\n  return args;\\\\n};\\\\n\\\\nexport const Basic: Story<IProps> = (args) => <TransactionStatus {...controlsToProps(args)} />;\\\\nBasic.argTypes = argTypes;\\\\nBasic.args = {\\\\n  status: TxStatus.COMPLETED,\\\\n  amount: \'0.1\',\\\\n  symbol: \'BTC\',\\\\n  animated: false,\\\\n  noShadow: false,\\\\n  uncapitalizeStatus: false,\\\\n};\\\\n\\\\nexport const Statuses: Story<IProps> = () => (\\\\n  <Fragment>\\\\n    <Spacer>\\\\n      <TransactionStatus\\\\n        amount=\'0.1\'\\\\n        symbol=\'BTC\'\\\\n        txURL=\'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\'\\\\n      />\\\\n    </Spacer>\\\\n    <Spacer>\\\\n      <TransactionStatus\\\\n        amount=\'0.1\'\\\\n        symbol=\'BTC\'\\\\n        status={TxStatus.PENDING}\\\\n        txURL=\'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\'\\\\n      />\\\\n    </Spacer>\\\\n    <Spacer>\\\\n      <TransactionStatus\\\\n        amount=\'0.1\'\\\\n        symbol=\'BTC\'\\\\n        status={TxStatus.COMPLETED}\\\\n        txURL=\'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\'\\\\n      />\\\\n    </Spacer>\\\\n    <Spacer>\\\\n      <TransactionStatus\\\\n        amount=\'0.1\'\\\\n        symbol=\'BTC\'\\\\n        status={TxStatus.FAILED}\\\\n        txURL=\'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\'\\\\n      />\\\\n    </Spacer>\\\\n  </Fragment>\\\\n);\\\\nStatuses.parameters = {\\\\n  controls: { hideNoControlsWarning: true },\\\\n};\\\\n\\\\nexport const TransactionDetails: Story<IProps> = (args) => (\\\\n  <TransactionStatus\\\\n    txFees=\'0.0001\'\\\\n    date={{\\\\n      value: new Date(),\\\\n    }}\\\\n    sender={{\\\\n      hash: \'1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa\',\\\\n      url: \'https://www.blockchain.com/btc/address/1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa\',\\\\n    }}\\\\n    receiver={{\\\\n      hash: \'1CounterpartyXXXXXXXXXXXXXXXUWLpVr\',\\\\n    }}\\\\n    customDetailComponent={<b>Hello, this is a custom component!</b>}\\\\n    txURL=\'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\'\\\\n    {...controlsToProps(args)}\\\\n  />\\\\n);\\\\nTransactionDetails.argTypes = argTypes;\\\\nTransactionDetails.args = {\\\\n  ...Basic.args,\\\\n  txFees: \'0.0001\',\\\\n  date: {\\\\n    value: new Date(),\\\\n  },\\\\n  sender: {\\\\n    hash: \'1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa\',\\\\n    url: \'https://www.blockchain.com/btc/address/1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa\',\\\\n  },\\\\n  receiver: {\\\\n    hash: \'1CounterpartyXXXXXXXXXXXXXXXUWLpVr\',\\\\n  },\\\\n  customDetailComponent: <b>Hello, this is a custom component!</b>,\\\\n  txURL:\\\\n    \'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\',\\\\n};\\\\n\\\\nexport const Animated: Story<IProps> = () => (\\\\n  <Fragment>\\\\n    <Spacer>\\\\n      <TransactionStatus\\\\n        animated\\\\n        amount=\'0.1\'\\\\n        symbol=\'BTC\'\\\\n        status={TxStatus.PENDING}\\\\n        txURL=\'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\'\\\\n      />\\\\n    </Spacer>\\\\n    <Spacer>\\\\n      <TransactionStatus\\\\n        animated\\\\n        amount=\'0.1\'\\\\n        symbol=\'BTC\'\\\\n        status={TxStatus.UNKNOWN}\\\\n        txURL=\'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\'\\\\n      />\\\\n    </Spacer>\\\\n    <Spacer>\\\\n      <TransactionStatus\\\\n        animated\\\\n        amount=\'0.1\'\\\\n        symbol=\'BTC\'\\\\n        status={TxStatus.COMPLETED}\\\\n        txURL=\'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\'\\\\n      />\\\\n    </Spacer>\\\\n    <Spacer>\\\\n      <TransactionStatus\\\\n        animated\\\\n        amount=\'0.1\'\\\\n        symbol=\'BTC\'\\\\n        status={TxStatus.FAILED}\\\\n        txURL=\'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\'\\\\n      />\\\\n    </Spacer>\\\\n  </Fragment>\\\\n);\\\\nAnimated.parameters = {\\\\n  controls: { hideNoControlsWarning: true },\\\\n};\\\\n\\\\nexport const Scenario: Story<IProps> = () => {\\\\n  interface ITransaction {\\\\n    sender: IAddress;\\\\n    receiver: IAddress;\\\\n  }\\\\n\\\\n  const timer = useRef<NodeJS.Timeout>();\\\\n\\\\n  const [status, setStatus] = useState<TxStatus>(TxStatus.PENDING);\\\\n  const [tx, setTx] = useState<Partial<ITransaction>>({});\\\\n  const [isInit, setIsInit] = useState<boolean>(false);\\\\n  const [txURL, setTxURL] = useState<string>();\\\\n\\\\n  const _clearTimeout = () => timer.current && clearInterval(timer.current);\\\\n  const _delay = (delay: number): Promise<void> =>\\\\n    new Promise((resolve) => setTimeout(resolve, delay));\\\\n\\\\n  useEffect(() => {\\\\n    return () => _clearTimeout();\\\\n  }, []);\\\\n\\\\n  const runScenario = (): void => {\\\\n    _clearTimeout();\\\\n\\\\n    _delay(3 * 1000)\\\\n      .then(() =>\\\\n        setTxURL(\\\\n          \'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\'\\\\n        )\\\\n      )\\\\n\\\\n      // wait 5s before completing that transaction\\\\n      .then(() => _delay(5 * 1000))\\\\n      .then(() => setStatus(TxStatus.COMPLETED))\\\\n\\\\n      // let\'s say, tx infos need to be fetched before being able to render them\\\\n      .then(() => _delay(1.5 * 1000))\\\\n      .then(() =>\\\\n        setTx({\\\\n          ...tx,\\\\n          ...{\\\\n            sender: {\\\\n              hash: \'1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa\',\\\\n              url: \'https://www.blockchain.com/btc/address/1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa\',\\\\n            },\\\\n            receiver: {\\\\n              hash: \'1CounterpartyXXXXXXXXXXXXXXXUWLpVr\',\\\\n              url: \'https://www.blockchain.com/btc/address/1CounterpartyXXXXXXXXXXXXXXXUWLpVr\',\\\\n            },\\\\n            txFees: \'0.0001\',\\\\n            customDetailComponent: (\\\\n              <img src={txCompletedImg} alt=\'Custom component\' style={{ width: \'100%\' }} />\\\\n            ),\\\\n          },\\\\n        })\\\\n      );\\\\n  };\\\\n\\\\n  const _handleReset = (): void => {\\\\n    setTx({});\\\\n    setStatus(TxStatus.PENDING);\\\\n    runScenario();\\\\n  };\\\\n\\\\n  const _handleInit = (): void => {\\\\n    setIsInit(true);\\\\n    runScenario();\\\\n  };\\\\n\\\\n  if (!isInit) {\\\\n    return <button onClick={_handleInit}>Begin transaction</button>;\\\\n  }\\\\n\\\\n  return (\\\\n    <Spacer>\\\\n      <TransactionStatus\\\\n        animated\\\\n        autoShowDetails\\\\n        amount=\'0.1\'\\\\n        symbol=\'BTC\'\\\\n        status={status}\\\\n        txURL={txURL}\\\\n        date={{\\\\n          value: new Date(),\\\\n        }}\\\\n        {...tx}\\\\n      />\\\\n      <button style={{ marginTop: \'10px\' }} onClick={_handleReset}>\\\\n        Reset\\\\n      </button>\\\\n      <i style={{ display: \'block\', fontSize: \'12px\', marginTop: \'10px\' }}>\\\\n        <p>\\\\n          In this example, <u>autoShowDetails</u> property is added. <br />\\\\n          When the component will receive props, it will automatically expand the card. This is\\\\n          fully optional.\\\\n        </p>\\\\n      </i>\\\\n    </Spacer>\\\\n  );\\\\n};\\\\nScenario.parameters = {\\\\n  controls: { hideNoControlsWarning: true },\\\\n};\\\\n\\",\\"locationsMap\\":{\\"basic\\":{\\"startLoc\\":{\\"col\\":36,\\"line\\":35},\\"endLoc\\":{\\"col\\":94,\\"line\\":35},\\"startBody\\":{\\"col\\":36,\\"line\\":35},\\"endBody\\":{\\"col\\":94,\\"line\\":35}},\\"statuses\\":{\\"startLoc\\":{\\"col\\":39,\\"line\\":46},\\"endLoc\\":{\\"col\\":1,\\"line\\":80},\\"startBody\\":{\\"col\\":39,\\"line\\":46},\\"endBody\\":{\\"col\\":1,\\"line\\":80}},\\"transaction-details\\":{\\"startLoc\\":{\\"col\\":49,\\"line\\":85},\\"endLoc\\":{\\"col\\":1,\\"line\\":102},\\"startBody\\":{\\"col\\":49,\\"line\\":85},\\"endBody\\":{\\"col\\":1,\\"line\\":102}},\\"animated\\":{\\"startLoc\\":{\\"col\\":39,\\"line\\":122},\\"endLoc\\":{\\"col\\":1,\\"line\\":161},\\"startBody\\":{\\"col\\":39,\\"line\\":122},\\"endBody\\":{\\"col\\":1,\\"line\\":161}},\\"scenario\\":{\\"startLoc\\":{\\"col\\":39,\\"line\\":166},\\"endLoc\\":{\\"col\\":1,\\"line\\":265},\\"startBody\\":{\\"col\\":39,\\"line\\":166},\\"endBody\\":{\\"col\\":1,\\"line\\":265}}}},},\\n  title: \'Components/TransactionStatus\',\\n} as Meta;\\n\\nconst argTypes = {\\n  status: {\\n    control: {\\n      type: \'select\',\\n      options: Object.keys(TxStatus),\\n    },\\n  },\\n};\\n\\nconst controlsToProps = (args: IProps): IProps => {\\n  if (args.status && TxStatus[args.status]) {\\n    args.status = TxStatus[args.status];\\n  }\\n\\n  return args;\\n};\\n\\nexport const Basic: Story<IProps> = (args) => <TransactionStatus {...controlsToProps(args)} />;;\\nBasic.argTypes = argTypes;\\nBasic.args = {\\n  status: TxStatus.COMPLETED,\\n  amount: \'0.1\',\\n  symbol: \'BTC\',\\n  animated: false,\\n  noShadow: false,\\n  uncapitalizeStatus: false,\\n};\\n\\nexport const Statuses: Story<IProps> = () => (\\n  <Fragment>\\n    <Spacer>\\n      <TransactionStatus\\n        amount=\'0.1\'\\n        symbol=\'BTC\'\\n        txURL=\'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\'\\n      />\\n    </Spacer>\\n    <Spacer>\\n      <TransactionStatus\\n        amount=\'0.1\'\\n        symbol=\'BTC\'\\n        status={TxStatus.PENDING}\\n        txURL=\'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\'\\n      />\\n    </Spacer>\\n    <Spacer>\\n      <TransactionStatus\\n        amount=\'0.1\'\\n        symbol=\'BTC\'\\n        status={TxStatus.COMPLETED}\\n        txURL=\'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\'\\n      />\\n    </Spacer>\\n    <Spacer>\\n      <TransactionStatus\\n        amount=\'0.1\'\\n        symbol=\'BTC\'\\n        status={TxStatus.FAILED}\\n        txURL=\'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\'\\n      />\\n    </Spacer>\\n  </Fragment>\\n);;\\nStatuses.parameters = {\\n  controls: { hideNoControlsWarning: true },\\n};\\n\\nexport const TransactionDetails: Story<IProps> = (args) => (\\n  <TransactionStatus\\n    txFees=\'0.0001\'\\n    date={{\\n      value: new Date(),\\n    }}\\n    sender={{\\n      hash: \'1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa\',\\n      url: \'https://www.blockchain.com/btc/address/1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa\',\\n    }}\\n    receiver={{\\n      hash: \'1CounterpartyXXXXXXXXXXXXXXXUWLpVr\',\\n    }}\\n    customDetailComponent={<b>Hello, this is a custom component!</b>}\\n    txURL=\'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\'\\n    {...controlsToProps(args)}\\n  />\\n);;\\nTransactionDetails.argTypes = argTypes;\\nTransactionDetails.args = {\\n  ...Basic.args,\\n  txFees: \'0.0001\',\\n  date: {\\n    value: new Date(),\\n  },\\n  sender: {\\n    hash: \'1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa\',\\n    url: \'https://www.blockchain.com/btc/address/1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa\',\\n  },\\n  receiver: {\\n    hash: \'1CounterpartyXXXXXXXXXXXXXXXUWLpVr\',\\n  },\\n  customDetailComponent: <b>Hello, this is a custom component!</b>,\\n  txURL:\\n    \'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\',\\n};\\n\\nexport const Animated: Story<IProps> = () => (\\n  <Fragment>\\n    <Spacer>\\n      <TransactionStatus\\n        animated\\n        amount=\'0.1\'\\n        symbol=\'BTC\'\\n        status={TxStatus.PENDING}\\n        txURL=\'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\'\\n      />\\n    </Spacer>\\n    <Spacer>\\n      <TransactionStatus\\n        animated\\n        amount=\'0.1\'\\n        symbol=\'BTC\'\\n        status={TxStatus.UNKNOWN}\\n        txURL=\'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\'\\n      />\\n    </Spacer>\\n    <Spacer>\\n      <TransactionStatus\\n        animated\\n        amount=\'0.1\'\\n        symbol=\'BTC\'\\n        status={TxStatus.COMPLETED}\\n        txURL=\'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\'\\n      />\\n    </Spacer>\\n    <Spacer>\\n      <TransactionStatus\\n        animated\\n        amount=\'0.1\'\\n        symbol=\'BTC\'\\n        status={TxStatus.FAILED}\\n        txURL=\'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\'\\n      />\\n    </Spacer>\\n  </Fragment>\\n);;\\nAnimated.parameters = {\\n  controls: { hideNoControlsWarning: true },\\n};\\n\\nexport const Scenario: Story<IProps> = () => {\\n  interface ITransaction {\\n    sender: IAddress;\\n    receiver: IAddress;\\n  }\\n\\n  const timer = useRef<NodeJS.Timeout>();\\n\\n  const [status, setStatus] = useState<TxStatus>(TxStatus.PENDING);\\n  const [tx, setTx] = useState<Partial<ITransaction>>({});\\n  const [isInit, setIsInit] = useState<boolean>(false);\\n  const [txURL, setTxURL] = useState<string>();\\n\\n  const _clearTimeout = () => timer.current && clearInterval(timer.current);\\n  const _delay = (delay: number): Promise<void> =>\\n    new Promise((resolve) => setTimeout(resolve, delay));\\n\\n  useEffect(() => {\\n    return () => _clearTimeout();\\n  }, []);\\n\\n  const runScenario = (): void => {\\n    _clearTimeout();\\n\\n    _delay(3 * 1000)\\n      .then(() =>\\n        setTxURL(\\n          \'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\'\\n        )\\n      )\\n\\n      // wait 5s before completing that transaction\\n      .then(() => _delay(5 * 1000))\\n      .then(() => setStatus(TxStatus.COMPLETED))\\n\\n      // let\'s say, tx infos need to be fetched before being able to render them\\n      .then(() => _delay(1.5 * 1000))\\n      .then(() =>\\n        setTx({\\n          ...tx,\\n          ...{\\n            sender: {\\n              hash: \'1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa\',\\n              url: \'https://www.blockchain.com/btc/address/1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa\',\\n            },\\n            receiver: {\\n              hash: \'1CounterpartyXXXXXXXXXXXXXXXUWLpVr\',\\n              url: \'https://www.blockchain.com/btc/address/1CounterpartyXXXXXXXXXXXXXXXUWLpVr\',\\n            },\\n            txFees: \'0.0001\',\\n            customDetailComponent: (\\n              <img src={txCompletedImg} alt=\'Custom component\' style={{ width: \'100%\' }} />\\n            ),\\n          },\\n        })\\n      );\\n  };\\n\\n  const _handleReset = (): void => {\\n    setTx({});\\n    setStatus(TxStatus.PENDING);\\n    runScenario();\\n  };\\n\\n  const _handleInit = (): void => {\\n    setIsInit(true);\\n    runScenario();\\n  };\\n\\n  if (!isInit) {\\n    return <button onClick={_handleInit}>Begin transaction</button>;\\n  }\\n\\n  return (\\n    <Spacer>\\n      <TransactionStatus\\n        animated\\n        autoShowDetails\\n        amount=\'0.1\'\\n        symbol=\'BTC\'\\n        status={status}\\n        txURL={txURL}\\n        date={{\\n          value: new Date(),\\n        }}\\n        {...tx}\\n      />\\n      <button style={{ marginTop: \'10px\' }} onClick={_handleReset}>\\n        Reset\\n      </button>\\n      <i style={{ display: \'block\', fontSize: \'12px\', marginTop: \'10px\' }}>\\n        <p>\\n          In this example, <u>autoShowDetails</u> property is added. <br />\\n          When the component will receive props, it will automatically expand the card. This is\\n          fully optional.\\n        </p>\\n      </i>\\n    </Spacer>\\n  );\\n};\\nScenario.parameters = {\\n  controls: { hideNoControlsWarning: true },\\n};\\n";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {"Basic":{"startLoc":{"col":36,"line":43},"endLoc":{"col":94,"line":43},"startBody":{"col":36,"line":43},"endBody":{"col":94,"line":43}},"Statuses":{"startLoc":{"col":39,"line":54},"endLoc":{"col":1,"line":88},"startBody":{"col":39,"line":54},"endBody":{"col":1,"line":88}},"TransactionDetails":{"startLoc":{"col":49,"line":93},"endLoc":{"col":1,"line":110},"startBody":{"col":49,"line":93},"endBody":{"col":1,"line":110}},"Animated":{"startLoc":{"col":39,"line":130},"endLoc":{"col":1,"line":169},"startBody":{"col":39,"line":130},"endBody":{"col":1,"line":169}},"Scenario":{"startLoc":{"col":39,"line":174},"endLoc":{"col":1,"line":273},"startBody":{"col":39,"line":174},"endBody":{"col":1,"line":273}}};\n    \n\n    \n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = "import React, { Fragment, useEffect, useRef, useState } from \'react\';\\nimport styled from \'styled-components\';\\nimport { Meta, Story } from \'@storybook/react\';\\nimport { TransactionStatus } from \'../TransactionStatus\';\\nimport { IAddress, IProps } from \'./interfaces\';\\nimport { TxStatus } from \'./txStatus\';\\n\\nimport txCompletedImg from \'../../assets/txstatus-completed.jpg\';\\n\\nconst Spacer = styled.div`\\n  margin: 10px 0 10px 0;\\n`;\\n\\nexport default {\\n  title: \'Components/TransactionStatus\',\\n} as Meta;\\n\\nconst argTypes = {\\n  status: {\\n    control: {\\n      type: \'select\',\\n      options: Object.keys(TxStatus),\\n    },\\n  },\\n};\\n\\nconst controlsToProps = (args: IProps): IProps => {\\n  if (args.status && TxStatus[args.status]) {\\n    args.status = TxStatus[args.status];\\n  }\\n\\n  return args;\\n};\\n\\nexport const Basic: Story<IProps> = (args) => <TransactionStatus {...controlsToProps(args)} />;\\nBasic.argTypes = argTypes;\\nBasic.args = {\\n  status: TxStatus.COMPLETED,\\n  amount: \'0.1\',\\n  symbol: \'BTC\',\\n  animated: false,\\n  noShadow: false,\\n  uncapitalizeStatus: false,\\n};\\n\\nexport const Statuses: Story<IProps> = () => (\\n  <Fragment>\\n    <Spacer>\\n      <TransactionStatus\\n        amount=\'0.1\'\\n        symbol=\'BTC\'\\n        txURL=\'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\'\\n      />\\n    </Spacer>\\n    <Spacer>\\n      <TransactionStatus\\n        amount=\'0.1\'\\n        symbol=\'BTC\'\\n        status={TxStatus.PENDING}\\n        txURL=\'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\'\\n      />\\n    </Spacer>\\n    <Spacer>\\n      <TransactionStatus\\n        amount=\'0.1\'\\n        symbol=\'BTC\'\\n        status={TxStatus.COMPLETED}\\n        txURL=\'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\'\\n      />\\n    </Spacer>\\n    <Spacer>\\n      <TransactionStatus\\n        amount=\'0.1\'\\n        symbol=\'BTC\'\\n        status={TxStatus.FAILED}\\n        txURL=\'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\'\\n      />\\n    </Spacer>\\n  </Fragment>\\n);\\nStatuses.parameters = {\\n  controls: { hideNoControlsWarning: true },\\n};\\n\\nexport const TransactionDetails: Story<IProps> = (args) => (\\n  <TransactionStatus\\n    txFees=\'0.0001\'\\n    date={{\\n      value: new Date(),\\n    }}\\n    sender={{\\n      hash: \'1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa\',\\n      url: \'https://www.blockchain.com/btc/address/1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa\',\\n    }}\\n    receiver={{\\n      hash: \'1CounterpartyXXXXXXXXXXXXXXXUWLpVr\',\\n    }}\\n    customDetailComponent={<b>Hello, this is a custom component!</b>}\\n    txURL=\'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\'\\n    {...controlsToProps(args)}\\n  />\\n);\\nTransactionDetails.argTypes = argTypes;\\nTransactionDetails.args = {\\n  ...Basic.args,\\n  txFees: \'0.0001\',\\n  date: {\\n    value: new Date(),\\n  },\\n  sender: {\\n    hash: \'1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa\',\\n    url: \'https://www.blockchain.com/btc/address/1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa\',\\n  },\\n  receiver: {\\n    hash: \'1CounterpartyXXXXXXXXXXXXXXXUWLpVr\',\\n  },\\n  customDetailComponent: <b>Hello, this is a custom component!</b>,\\n  txURL:\\n    \'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\',\\n};\\n\\nexport const Animated: Story<IProps> = () => (\\n  <Fragment>\\n    <Spacer>\\n      <TransactionStatus\\n        animated\\n        amount=\'0.1\'\\n        symbol=\'BTC\'\\n        status={TxStatus.PENDING}\\n        txURL=\'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\'\\n      />\\n    </Spacer>\\n    <Spacer>\\n      <TransactionStatus\\n        animated\\n        amount=\'0.1\'\\n        symbol=\'BTC\'\\n        status={TxStatus.UNKNOWN}\\n        txURL=\'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\'\\n      />\\n    </Spacer>\\n    <Spacer>\\n      <TransactionStatus\\n        animated\\n        amount=\'0.1\'\\n        symbol=\'BTC\'\\n        status={TxStatus.COMPLETED}\\n        txURL=\'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\'\\n      />\\n    </Spacer>\\n    <Spacer>\\n      <TransactionStatus\\n        animated\\n        amount=\'0.1\'\\n        symbol=\'BTC\'\\n        status={TxStatus.FAILED}\\n        txURL=\'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\'\\n      />\\n    </Spacer>\\n  </Fragment>\\n);\\nAnimated.parameters = {\\n  controls: { hideNoControlsWarning: true },\\n};\\n\\nexport const Scenario: Story<IProps> = () => {\\n  interface ITransaction {\\n    sender: IAddress;\\n    receiver: IAddress;\\n  }\\n\\n  const timer = useRef<NodeJS.Timeout>();\\n\\n  const [status, setStatus] = useState<TxStatus>(TxStatus.PENDING);\\n  const [tx, setTx] = useState<Partial<ITransaction>>({});\\n  const [isInit, setIsInit] = useState<boolean>(false);\\n  const [txURL, setTxURL] = useState<string>();\\n\\n  const _clearTimeout = () => timer.current && clearInterval(timer.current);\\n  const _delay = (delay: number): Promise<void> =>\\n    new Promise((resolve) => setTimeout(resolve, delay));\\n\\n  useEffect(() => {\\n    return () => _clearTimeout();\\n  }, []);\\n\\n  const runScenario = (): void => {\\n    _clearTimeout();\\n\\n    _delay(3 * 1000)\\n      .then(() =>\\n        setTxURL(\\n          \'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\'\\n        )\\n      )\\n\\n      // wait 5s before completing that transaction\\n      .then(() => _delay(5 * 1000))\\n      .then(() => setStatus(TxStatus.COMPLETED))\\n\\n      // let\'s say, tx infos need to be fetched before being able to render them\\n      .then(() => _delay(1.5 * 1000))\\n      .then(() =>\\n        setTx({\\n          ...tx,\\n          ...{\\n            sender: {\\n              hash: \'1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa\',\\n              url: \'https://www.blockchain.com/btc/address/1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa\',\\n            },\\n            receiver: {\\n              hash: \'1CounterpartyXXXXXXXXXXXXXXXUWLpVr\',\\n              url: \'https://www.blockchain.com/btc/address/1CounterpartyXXXXXXXXXXXXXXXUWLpVr\',\\n            },\\n            txFees: \'0.0001\',\\n            customDetailComponent: (\\n              <img src={txCompletedImg} alt=\'Custom component\' style={{ width: \'100%\' }} />\\n            ),\\n          },\\n        })\\n      );\\n  };\\n\\n  const _handleReset = (): void => {\\n    setTx({});\\n    setStatus(TxStatus.PENDING);\\n    runScenario();\\n  };\\n\\n  const _handleInit = (): void => {\\n    setIsInit(true);\\n    runScenario();\\n  };\\n\\n  if (!isInit) {\\n    return <button onClick={_handleInit}>Begin transaction</button>;\\n  }\\n\\n  return (\\n    <Spacer>\\n      <TransactionStatus\\n        animated\\n        autoShowDetails\\n        amount=\'0.1\'\\n        symbol=\'BTC\'\\n        status={status}\\n        txURL={txURL}\\n        date={{\\n          value: new Date(),\\n        }}\\n        {...tx}\\n      />\\n      <button style={{ marginTop: \'10px\' }} onClick={_handleReset}>\\n        Reset\\n      </button>\\n      <i style={{ display: \'block\', fontSize: \'12px\', marginTop: \'10px\' }}>\\n        <p>\\n          In this example, <u>autoShowDetails</u> property is added. <br />\\n          When the component will receive props, it will automatically expand the card. This is\\n          fully optional.\\n        </p>\\n      </i>\\n    </Spacer>\\n  );\\n};\\nScenario.parameters = {\\n  controls: { hideNoControlsWarning: true },\\n};\\n";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {"Basic":{"startLoc":{"col":36,"line":35},"endLoc":{"col":94,"line":35},"startBody":{"col":36,"line":35},"endBody":{"col":94,"line":35}},"Statuses":{"startLoc":{"col":39,"line":46},"endLoc":{"col":1,"line":80},"startBody":{"col":39,"line":46},"endBody":{"col":1,"line":80}},"TransactionDetails":{"startLoc":{"col":49,"line":85},"endLoc":{"col":1,"line":102},"startBody":{"col":49,"line":85},"endBody":{"col":1,"line":102}},"Animated":{"startLoc":{"col":39,"line":122},"endLoc":{"col":1,"line":161},"startBody":{"col":39,"line":122},"endBody":{"col":1,"line":161}},"Scenario":{"startLoc":{"col":39,"line":166},"endLoc":{"col":1,"line":265},"startBody":{"col":39,"line":166},"endBody":{"col":1,"line":265}}};\n    \nimport React, { Fragment, useEffect, useRef, useState } from \'react\';\nimport styled from \'styled-components\';\nimport { Meta, Story } from \'@storybook/react\';\nimport { TransactionStatus } from \'../TransactionStatus\';\nimport { IAddress, IProps } from \'./interfaces\';\nimport { TxStatus } from \'./txStatus\';\n\nimport txCompletedImg from \'../../assets/txstatus-completed.jpg\';\n\nconst Spacer = styled.div`\n  margin: 10px 0 10px 0;\n`;\n\nexport default {parameters: {"storySource":{"source":"\\n    \\n    // @ts-nocheck\\n    // @ts-ignore\\n    var __STORY__ = \\"import React, { Fragment, useEffect, useRef, useState } from \'react\';\\\\nimport styled from \'styled-components\';\\\\nimport { Meta, Story } from \'@storybook/react\';\\\\nimport { TransactionStatus } from \'../TransactionStatus\';\\\\nimport { IAddress, IProps } from \'./interfaces\';\\\\nimport { TxStatus } from \'./txStatus\';\\\\n\\\\nimport txCompletedImg from \'../../assets/txstatus-completed.jpg\';\\\\n\\\\nconst Spacer = styled.div`\\\\n  margin: 10px 0 10px 0;\\\\n`;\\\\n\\\\nexport default {\\\\n  title: \'Components/TransactionStatus\',\\\\n} as Meta;\\\\n\\\\nconst argTypes = {\\\\n  status: {\\\\n    control: {\\\\n      type: \'select\',\\\\n      options: Object.keys(TxStatus),\\\\n    },\\\\n  },\\\\n};\\\\n\\\\nconst controlsToProps = (args: IProps): IProps => {\\\\n  if (args.status && TxStatus[args.status]) {\\\\n    args.status = TxStatus[args.status];\\\\n  }\\\\n\\\\n  return args;\\\\n};\\\\n\\\\nexport const Basic: Story<IProps> = (args) => <TransactionStatus {...controlsToProps(args)} />;\\\\nBasic.argTypes = argTypes;\\\\nBasic.args = {\\\\n  status: TxStatus.COMPLETED,\\\\n  amount: \'0.1\',\\\\n  symbol: \'BTC\',\\\\n  animated: false,\\\\n  noShadow: false,\\\\n  uncapitalizeStatus: false,\\\\n};\\\\n\\\\nexport const Statuses: Story<IProps> = () => (\\\\n  <Fragment>\\\\n    <Spacer>\\\\n      <TransactionStatus\\\\n        amount=\'0.1\'\\\\n        symbol=\'BTC\'\\\\n        txURL=\'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\'\\\\n      />\\\\n    </Spacer>\\\\n    <Spacer>\\\\n      <TransactionStatus\\\\n        amount=\'0.1\'\\\\n        symbol=\'BTC\'\\\\n        status={TxStatus.PENDING}\\\\n        txURL=\'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\'\\\\n      />\\\\n    </Spacer>\\\\n    <Spacer>\\\\n      <TransactionStatus\\\\n        amount=\'0.1\'\\\\n        symbol=\'BTC\'\\\\n        status={TxStatus.COMPLETED}\\\\n        txURL=\'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\'\\\\n      />\\\\n    </Spacer>\\\\n    <Spacer>\\\\n      <TransactionStatus\\\\n        amount=\'0.1\'\\\\n        symbol=\'BTC\'\\\\n        status={TxStatus.FAILED}\\\\n        txURL=\'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\'\\\\n      />\\\\n    </Spacer>\\\\n  </Fragment>\\\\n);\\\\nStatuses.parameters = {\\\\n  controls: { hideNoControlsWarning: true },\\\\n};\\\\n\\\\nexport const TransactionDetails: Story<IProps> = (args) => (\\\\n  <TransactionStatus\\\\n    txFees=\'0.0001\'\\\\n    date={{\\\\n      value: new Date(),\\\\n    }}\\\\n    sender={{\\\\n      hash: \'1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa\',\\\\n      url: \'https://www.blockchain.com/btc/address/1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa\',\\\\n    }}\\\\n    receiver={{\\\\n      hash: \'1CounterpartyXXXXXXXXXXXXXXXUWLpVr\',\\\\n    }}\\\\n    customDetailComponent={<b>Hello, this is a custom component!</b>}\\\\n    txURL=\'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\'\\\\n    {...controlsToProps(args)}\\\\n  />\\\\n);\\\\nTransactionDetails.argTypes = argTypes;\\\\nTransactionDetails.args = {\\\\n  ...Basic.args,\\\\n  txFees: \'0.0001\',\\\\n  date: {\\\\n    value: new Date(),\\\\n  },\\\\n  sender: {\\\\n    hash: \'1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa\',\\\\n    url: \'https://www.blockchain.com/btc/address/1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa\',\\\\n  },\\\\n  receiver: {\\\\n    hash: \'1CounterpartyXXXXXXXXXXXXXXXUWLpVr\',\\\\n  },\\\\n  customDetailComponent: <b>Hello, this is a custom component!</b>,\\\\n  txURL:\\\\n    \'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\',\\\\n};\\\\n\\\\nexport const Animated: Story<IProps> = () => (\\\\n  <Fragment>\\\\n    <Spacer>\\\\n      <TransactionStatus\\\\n        animated\\\\n        amount=\'0.1\'\\\\n        symbol=\'BTC\'\\\\n        status={TxStatus.PENDING}\\\\n        txURL=\'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\'\\\\n      />\\\\n    </Spacer>\\\\n    <Spacer>\\\\n      <TransactionStatus\\\\n        animated\\\\n        amount=\'0.1\'\\\\n        symbol=\'BTC\'\\\\n        status={TxStatus.UNKNOWN}\\\\n        txURL=\'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\'\\\\n      />\\\\n    </Spacer>\\\\n    <Spacer>\\\\n      <TransactionStatus\\\\n        animated\\\\n        amount=\'0.1\'\\\\n        symbol=\'BTC\'\\\\n        status={TxStatus.COMPLETED}\\\\n        txURL=\'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\'\\\\n      />\\\\n    </Spacer>\\\\n    <Spacer>\\\\n      <TransactionStatus\\\\n        animated\\\\n        amount=\'0.1\'\\\\n        symbol=\'BTC\'\\\\n        status={TxStatus.FAILED}\\\\n        txURL=\'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\'\\\\n      />\\\\n    </Spacer>\\\\n  </Fragment>\\\\n);\\\\nAnimated.parameters = {\\\\n  controls: { hideNoControlsWarning: true },\\\\n};\\\\n\\\\nexport const Scenario: Story<IProps> = () => {\\\\n  interface ITransaction {\\\\n    sender: IAddress;\\\\n    receiver: IAddress;\\\\n  }\\\\n\\\\n  const timer = useRef<NodeJS.Timeout>();\\\\n\\\\n  const [status, setStatus] = useState<TxStatus>(TxStatus.PENDING);\\\\n  const [tx, setTx] = useState<Partial<ITransaction>>({});\\\\n  const [isInit, setIsInit] = useState<boolean>(false);\\\\n  const [txURL, setTxURL] = useState<string>();\\\\n\\\\n  const _clearTimeout = () => timer.current && clearInterval(timer.current);\\\\n  const _delay = (delay: number): Promise<void> =>\\\\n    new Promise((resolve) => setTimeout(resolve, delay));\\\\n\\\\n  useEffect(() => {\\\\n    return () => _clearTimeout();\\\\n  }, []);\\\\n\\\\n  const runScenario = (): void => {\\\\n    _clearTimeout();\\\\n\\\\n    _delay(3 * 1000)\\\\n      .then(() =>\\\\n        setTxURL(\\\\n          \'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\'\\\\n        )\\\\n      )\\\\n\\\\n      // wait 5s before completing that transaction\\\\n      .then(() => _delay(5 * 1000))\\\\n      .then(() => setStatus(TxStatus.COMPLETED))\\\\n\\\\n      // let\'s say, tx infos need to be fetched before being able to render them\\\\n      .then(() => _delay(1.5 * 1000))\\\\n      .then(() =>\\\\n        setTx({\\\\n          ...tx,\\\\n          ...{\\\\n            sender: {\\\\n              hash: \'1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa\',\\\\n              url: \'https://www.blockchain.com/btc/address/1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa\',\\\\n            },\\\\n            receiver: {\\\\n              hash: \'1CounterpartyXXXXXXXXXXXXXXXUWLpVr\',\\\\n              url: \'https://www.blockchain.com/btc/address/1CounterpartyXXXXXXXXXXXXXXXUWLpVr\',\\\\n            },\\\\n            txFees: \'0.0001\',\\\\n            customDetailComponent: (\\\\n              <img src={txCompletedImg} alt=\'Custom component\' style={{ width: \'100%\' }} />\\\\n            ),\\\\n          },\\\\n        })\\\\n      );\\\\n  };\\\\n\\\\n  const _handleReset = (): void => {\\\\n    setTx({});\\\\n    setStatus(TxStatus.PENDING);\\\\n    runScenario();\\\\n  };\\\\n\\\\n  const _handleInit = (): void => {\\\\n    setIsInit(true);\\\\n    runScenario();\\\\n  };\\\\n\\\\n  if (!isInit) {\\\\n    return <button onClick={_handleInit}>Begin transaction</button>;\\\\n  }\\\\n\\\\n  return (\\\\n    <Spacer>\\\\n      <TransactionStatus\\\\n        animated\\\\n        autoShowDetails\\\\n        amount=\'0.1\'\\\\n        symbol=\'BTC\'\\\\n        status={status}\\\\n        txURL={txURL}\\\\n        date={{\\\\n          value: new Date(),\\\\n        }}\\\\n        {...tx}\\\\n      />\\\\n      <button style={{ marginTop: \'10px\' }} onClick={_handleReset}>\\\\n        Reset\\\\n      </button>\\\\n      <i style={{ display: \'block\', fontSize: \'12px\', marginTop: \'10px\' }}>\\\\n        <p>\\\\n          In this example, <u>autoShowDetails</u> property is added. <br />\\\\n          When the component will receive props, it will automatically expand the card. This is\\\\n          fully optional.\\\\n        </p>\\\\n      </i>\\\\n    </Spacer>\\\\n  );\\\\n};\\\\nScenario.parameters = {\\\\n  controls: { hideNoControlsWarning: true },\\\\n};\\\\n\\";\\n    // @ts-ignore\\n    var __LOCATIONS_MAP__ = {\\"Basic\\":{\\"startLoc\\":{\\"col\\":36,\\"line\\":35},\\"endLoc\\":{\\"col\\":94,\\"line\\":35},\\"startBody\\":{\\"col\\":36,\\"line\\":35},\\"endBody\\":{\\"col\\":94,\\"line\\":35}},\\"Statuses\\":{\\"startLoc\\":{\\"col\\":39,\\"line\\":46},\\"endLoc\\":{\\"col\\":1,\\"line\\":80},\\"startBody\\":{\\"col\\":39,\\"line\\":46},\\"endBody\\":{\\"col\\":1,\\"line\\":80}},\\"TransactionDetails\\":{\\"startLoc\\":{\\"col\\":49,\\"line\\":85},\\"endLoc\\":{\\"col\\":1,\\"line\\":102},\\"startBody\\":{\\"col\\":49,\\"line\\":85},\\"endBody\\":{\\"col\\":1,\\"line\\":102}},\\"Animated\\":{\\"startLoc\\":{\\"col\\":39,\\"line\\":122},\\"endLoc\\":{\\"col\\":1,\\"line\\":161},\\"startBody\\":{\\"col\\":39,\\"line\\":122},\\"endBody\\":{\\"col\\":1,\\"line\\":161}},\\"Scenario\\":{\\"startLoc\\":{\\"col\\":39,\\"line\\":166},\\"endLoc\\":{\\"col\\":1,\\"line\\":265},\\"startBody\\":{\\"col\\":39,\\"line\\":166},\\"endBody\\":{\\"col\\":1,\\"line\\":265}}};\\n    \\nimport React, { Fragment, useEffect, useRef, useState } from \'react\';\\nimport styled from \'styled-components\';\\nimport { Meta, Story } from \'@storybook/react\';\\nimport { TransactionStatus } from \'../TransactionStatus\';\\nimport { IAddress, IProps } from \'./interfaces\';\\nimport { TxStatus } from \'./txStatus\';\\n\\nimport txCompletedImg from \'../../assets/txstatus-completed.jpg\';\\n\\nconst Spacer = styled.div`\\n  margin: 10px 0 10px 0;\\n`;\\n\\nexport default {parameters: {\\"storySource\\":{\\"source\\":\\"import React, { Fragment, useEffect, useRef, useState } from \'react\';\\\\nimport styled from \'styled-components\';\\\\nimport { Meta, Story } from \'@storybook/react\';\\\\nimport { TransactionStatus } from \'../TransactionStatus\';\\\\nimport { IAddress, IProps } from \'./interfaces\';\\\\nimport { TxStatus } from \'./txStatus\';\\\\n\\\\nimport txCompletedImg from \'../../assets/txstatus-completed.jpg\';\\\\n\\\\nconst Spacer = styled.div`\\\\n  margin: 10px 0 10px 0;\\\\n`;\\\\n\\\\nexport default {\\\\n  title: \'Components/TransactionStatus\',\\\\n} as Meta;\\\\n\\\\nconst argTypes = {\\\\n  status: {\\\\n    control: {\\\\n      type: \'select\',\\\\n      options: Object.keys(TxStatus),\\\\n    },\\\\n  },\\\\n};\\\\n\\\\nconst controlsToProps = (args: IProps): IProps => {\\\\n  if (args.status && TxStatus[args.status]) {\\\\n    args.status = TxStatus[args.status];\\\\n  }\\\\n\\\\n  return args;\\\\n};\\\\n\\\\nexport const Basic: Story<IProps> = (args) => <TransactionStatus {...controlsToProps(args)} />;\\\\nBasic.argTypes = argTypes;\\\\nBasic.args = {\\\\n  status: TxStatus.COMPLETED,\\\\n  amount: \'0.1\',\\\\n  symbol: \'BTC\',\\\\n  animated: false,\\\\n  noShadow: false,\\\\n  uncapitalizeStatus: false,\\\\n};\\\\n\\\\nexport const Statuses: Story<IProps> = () => (\\\\n  <Fragment>\\\\n    <Spacer>\\\\n      <TransactionStatus\\\\n        amount=\'0.1\'\\\\n        symbol=\'BTC\'\\\\n        txURL=\'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\'\\\\n      />\\\\n    </Spacer>\\\\n    <Spacer>\\\\n      <TransactionStatus\\\\n        amount=\'0.1\'\\\\n        symbol=\'BTC\'\\\\n        status={TxStatus.PENDING}\\\\n        txURL=\'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\'\\\\n      />\\\\n    </Spacer>\\\\n    <Spacer>\\\\n      <TransactionStatus\\\\n        amount=\'0.1\'\\\\n        symbol=\'BTC\'\\\\n        status={TxStatus.COMPLETED}\\\\n        txURL=\'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\'\\\\n      />\\\\n    </Spacer>\\\\n    <Spacer>\\\\n      <TransactionStatus\\\\n        amount=\'0.1\'\\\\n        symbol=\'BTC\'\\\\n        status={TxStatus.FAILED}\\\\n        txURL=\'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\'\\\\n      />\\\\n    </Spacer>\\\\n  </Fragment>\\\\n);\\\\nStatuses.parameters = {\\\\n  controls: { hideNoControlsWarning: true },\\\\n};\\\\n\\\\nexport const TransactionDetails: Story<IProps> = (args) => (\\\\n  <TransactionStatus\\\\n    txFees=\'0.0001\'\\\\n    date={{\\\\n      value: new Date(),\\\\n    }}\\\\n    sender={{\\\\n      hash: \'1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa\',\\\\n      url: \'https://www.blockchain.com/btc/address/1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa\',\\\\n    }}\\\\n    receiver={{\\\\n      hash: \'1CounterpartyXXXXXXXXXXXXXXXUWLpVr\',\\\\n    }}\\\\n    customDetailComponent={<b>Hello, this is a custom component!</b>}\\\\n    txURL=\'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\'\\\\n    {...controlsToProps(args)}\\\\n  />\\\\n);\\\\nTransactionDetails.argTypes = argTypes;\\\\nTransactionDetails.args = {\\\\n  ...Basic.args,\\\\n  txFees: \'0.0001\',\\\\n  date: {\\\\n    value: new Date(),\\\\n  },\\\\n  sender: {\\\\n    hash: \'1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa\',\\\\n    url: \'https://www.blockchain.com/btc/address/1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa\',\\\\n  },\\\\n  receiver: {\\\\n    hash: \'1CounterpartyXXXXXXXXXXXXXXXUWLpVr\',\\\\n  },\\\\n  customDetailComponent: <b>Hello, this is a custom component!</b>,\\\\n  txURL:\\\\n    \'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\',\\\\n};\\\\n\\\\nexport const Animated: Story<IProps> = () => (\\\\n  <Fragment>\\\\n    <Spacer>\\\\n      <TransactionStatus\\\\n        animated\\\\n        amount=\'0.1\'\\\\n        symbol=\'BTC\'\\\\n        status={TxStatus.PENDING}\\\\n        txURL=\'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\'\\\\n      />\\\\n    </Spacer>\\\\n    <Spacer>\\\\n      <TransactionStatus\\\\n        animated\\\\n        amount=\'0.1\'\\\\n        symbol=\'BTC\'\\\\n        status={TxStatus.UNKNOWN}\\\\n        txURL=\'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\'\\\\n      />\\\\n    </Spacer>\\\\n    <Spacer>\\\\n      <TransactionStatus\\\\n        animated\\\\n        amount=\'0.1\'\\\\n        symbol=\'BTC\'\\\\n        status={TxStatus.COMPLETED}\\\\n        txURL=\'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\'\\\\n      />\\\\n    </Spacer>\\\\n    <Spacer>\\\\n      <TransactionStatus\\\\n        animated\\\\n        amount=\'0.1\'\\\\n        symbol=\'BTC\'\\\\n        status={TxStatus.FAILED}\\\\n        txURL=\'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\'\\\\n      />\\\\n    </Spacer>\\\\n  </Fragment>\\\\n);\\\\nAnimated.parameters = {\\\\n  controls: { hideNoControlsWarning: true },\\\\n};\\\\n\\\\nexport const Scenario: Story<IProps> = () => {\\\\n  interface ITransaction {\\\\n    sender: IAddress;\\\\n    receiver: IAddress;\\\\n  }\\\\n\\\\n  const timer = useRef<NodeJS.Timeout>();\\\\n\\\\n  const [status, setStatus] = useState<TxStatus>(TxStatus.PENDING);\\\\n  const [tx, setTx] = useState<Partial<ITransaction>>({});\\\\n  const [isInit, setIsInit] = useState<boolean>(false);\\\\n  const [txURL, setTxURL] = useState<string>();\\\\n\\\\n  const _clearTimeout = () => timer.current && clearInterval(timer.current);\\\\n  const _delay = (delay: number): Promise<void> =>\\\\n    new Promise((resolve) => setTimeout(resolve, delay));\\\\n\\\\n  useEffect(() => {\\\\n    return () => _clearTimeout();\\\\n  }, []);\\\\n\\\\n  const runScenario = (): void => {\\\\n    _clearTimeout();\\\\n\\\\n    _delay(3 * 1000)\\\\n      .then(() =>\\\\n        setTxURL(\\\\n          \'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\'\\\\n        )\\\\n      )\\\\n\\\\n      // wait 5s before completing that transaction\\\\n      .then(() => _delay(5 * 1000))\\\\n      .then(() => setStatus(TxStatus.COMPLETED))\\\\n\\\\n      // let\'s say, tx infos need to be fetched before being able to render them\\\\n      .then(() => _delay(1.5 * 1000))\\\\n      .then(() =>\\\\n        setTx({\\\\n          ...tx,\\\\n          ...{\\\\n            sender: {\\\\n              hash: \'1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa\',\\\\n              url: \'https://www.blockchain.com/btc/address/1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa\',\\\\n            },\\\\n            receiver: {\\\\n              hash: \'1CounterpartyXXXXXXXXXXXXXXXUWLpVr\',\\\\n              url: \'https://www.blockchain.com/btc/address/1CounterpartyXXXXXXXXXXXXXXXUWLpVr\',\\\\n            },\\\\n            txFees: \'0.0001\',\\\\n            customDetailComponent: (\\\\n              <img src={txCompletedImg} alt=\'Custom component\' style={{ width: \'100%\' }} />\\\\n            ),\\\\n          },\\\\n        })\\\\n      );\\\\n  };\\\\n\\\\n  const _handleReset = (): void => {\\\\n    setTx({});\\\\n    setStatus(TxStatus.PENDING);\\\\n    runScenario();\\\\n  };\\\\n\\\\n  const _handleInit = (): void => {\\\\n    setIsInit(true);\\\\n    runScenario();\\\\n  };\\\\n\\\\n  if (!isInit) {\\\\n    return <button onClick={_handleInit}>Begin transaction</button>;\\\\n  }\\\\n\\\\n  return (\\\\n    <Spacer>\\\\n      <TransactionStatus\\\\n        animated\\\\n        autoShowDetails\\\\n        amount=\'0.1\'\\\\n        symbol=\'BTC\'\\\\n        status={status}\\\\n        txURL={txURL}\\\\n        date={{\\\\n          value: new Date(),\\\\n        }}\\\\n        {...tx}\\\\n      />\\\\n      <button style={{ marginTop: \'10px\' }} onClick={_handleReset}>\\\\n        Reset\\\\n      </button>\\\\n      <i style={{ display: \'block\', fontSize: \'12px\', marginTop: \'10px\' }}>\\\\n        <p>\\\\n          In this example, <u>autoShowDetails</u> property is added. <br />\\\\n          When the component will receive props, it will automatically expand the card. This is\\\\n          fully optional.\\\\n        </p>\\\\n      </i>\\\\n    </Spacer>\\\\n  );\\\\n};\\\\nScenario.parameters = {\\\\n  controls: { hideNoControlsWarning: true },\\\\n};\\\\n\\",\\"locationsMap\\":{\\"basic\\":{\\"startLoc\\":{\\"col\\":36,\\"line\\":35},\\"endLoc\\":{\\"col\\":94,\\"line\\":35},\\"startBody\\":{\\"col\\":36,\\"line\\":35},\\"endBody\\":{\\"col\\":94,\\"line\\":35}},\\"statuses\\":{\\"startLoc\\":{\\"col\\":39,\\"line\\":46},\\"endLoc\\":{\\"col\\":1,\\"line\\":80},\\"startBody\\":{\\"col\\":39,\\"line\\":46},\\"endBody\\":{\\"col\\":1,\\"line\\":80}},\\"transaction-details\\":{\\"startLoc\\":{\\"col\\":49,\\"line\\":85},\\"endLoc\\":{\\"col\\":1,\\"line\\":102},\\"startBody\\":{\\"col\\":49,\\"line\\":85},\\"endBody\\":{\\"col\\":1,\\"line\\":102}},\\"animated\\":{\\"startLoc\\":{\\"col\\":39,\\"line\\":122},\\"endLoc\\":{\\"col\\":1,\\"line\\":161},\\"startBody\\":{\\"col\\":39,\\"line\\":122},\\"endBody\\":{\\"col\\":1,\\"line\\":161}},\\"scenario\\":{\\"startLoc\\":{\\"col\\":39,\\"line\\":166},\\"endLoc\\":{\\"col\\":1,\\"line\\":265},\\"startBody\\":{\\"col\\":39,\\"line\\":166},\\"endBody\\":{\\"col\\":1,\\"line\\":265}}}},},\\n  title: \'Components/TransactionStatus\',\\n} as Meta;\\n\\nconst argTypes = {\\n  status: {\\n    control: {\\n      type: \'select\',\\n      options: Object.keys(TxStatus),\\n    },\\n  },\\n};\\n\\nconst controlsToProps = (args: IProps): IProps => {\\n  if (args.status && TxStatus[args.status]) {\\n    args.status = TxStatus[args.status];\\n  }\\n\\n  return args;\\n};\\n\\nexport const Basic: Story<IProps> = (args) => <TransactionStatus {...controlsToProps(args)} />;;\\nBasic.argTypes = argTypes;\\nBasic.args = {\\n  status: TxStatus.COMPLETED,\\n  amount: \'0.1\',\\n  symbol: \'BTC\',\\n  animated: false,\\n  noShadow: false,\\n  uncapitalizeStatus: false,\\n};\\n\\nexport const Statuses: Story<IProps> = () => (\\n  <Fragment>\\n    <Spacer>\\n      <TransactionStatus\\n        amount=\'0.1\'\\n        symbol=\'BTC\'\\n        txURL=\'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\'\\n      />\\n    </Spacer>\\n    <Spacer>\\n      <TransactionStatus\\n        amount=\'0.1\'\\n        symbol=\'BTC\'\\n        status={TxStatus.PENDING}\\n        txURL=\'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\'\\n      />\\n    </Spacer>\\n    <Spacer>\\n      <TransactionStatus\\n        amount=\'0.1\'\\n        symbol=\'BTC\'\\n        status={TxStatus.COMPLETED}\\n        txURL=\'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\'\\n      />\\n    </Spacer>\\n    <Spacer>\\n      <TransactionStatus\\n        amount=\'0.1\'\\n        symbol=\'BTC\'\\n        status={TxStatus.FAILED}\\n        txURL=\'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\'\\n      />\\n    </Spacer>\\n  </Fragment>\\n);;\\nStatuses.parameters = {\\n  controls: { hideNoControlsWarning: true },\\n};\\n\\nexport const TransactionDetails: Story<IProps> = (args) => (\\n  <TransactionStatus\\n    txFees=\'0.0001\'\\n    date={{\\n      value: new Date(),\\n    }}\\n    sender={{\\n      hash: \'1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa\',\\n      url: \'https://www.blockchain.com/btc/address/1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa\',\\n    }}\\n    receiver={{\\n      hash: \'1CounterpartyXXXXXXXXXXXXXXXUWLpVr\',\\n    }}\\n    customDetailComponent={<b>Hello, this is a custom component!</b>}\\n    txURL=\'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\'\\n    {...controlsToProps(args)}\\n  />\\n);;\\nTransactionDetails.argTypes = argTypes;\\nTransactionDetails.args = {\\n  ...Basic.args,\\n  txFees: \'0.0001\',\\n  date: {\\n    value: new Date(),\\n  },\\n  sender: {\\n    hash: \'1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa\',\\n    url: \'https://www.blockchain.com/btc/address/1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa\',\\n  },\\n  receiver: {\\n    hash: \'1CounterpartyXXXXXXXXXXXXXXXUWLpVr\',\\n  },\\n  customDetailComponent: <b>Hello, this is a custom component!</b>,\\n  txURL:\\n    \'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\',\\n};\\n\\nexport const Animated: Story<IProps> = () => (\\n  <Fragment>\\n    <Spacer>\\n      <TransactionStatus\\n        animated\\n        amount=\'0.1\'\\n        symbol=\'BTC\'\\n        status={TxStatus.PENDING}\\n        txURL=\'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\'\\n      />\\n    </Spacer>\\n    <Spacer>\\n      <TransactionStatus\\n        animated\\n        amount=\'0.1\'\\n        symbol=\'BTC\'\\n        status={TxStatus.UNKNOWN}\\n        txURL=\'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\'\\n      />\\n    </Spacer>\\n    <Spacer>\\n      <TransactionStatus\\n        animated\\n        amount=\'0.1\'\\n        symbol=\'BTC\'\\n        status={TxStatus.COMPLETED}\\n        txURL=\'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\'\\n      />\\n    </Spacer>\\n    <Spacer>\\n      <TransactionStatus\\n        animated\\n        amount=\'0.1\'\\n        symbol=\'BTC\'\\n        status={TxStatus.FAILED}\\n        txURL=\'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\'\\n      />\\n    </Spacer>\\n  </Fragment>\\n);;\\nAnimated.parameters = {\\n  controls: { hideNoControlsWarning: true },\\n};\\n\\nexport const Scenario: Story<IProps> = () => {\\n  interface ITransaction {\\n    sender: IAddress;\\n    receiver: IAddress;\\n  }\\n\\n  const timer = useRef<NodeJS.Timeout>();\\n\\n  const [status, setStatus] = useState<TxStatus>(TxStatus.PENDING);\\n  const [tx, setTx] = useState<Partial<ITransaction>>({});\\n  const [isInit, setIsInit] = useState<boolean>(false);\\n  const [txURL, setTxURL] = useState<string>();\\n\\n  const _clearTimeout = () => timer.current && clearInterval(timer.current);\\n  const _delay = (delay: number): Promise<void> =>\\n    new Promise((resolve) => setTimeout(resolve, delay));\\n\\n  useEffect(() => {\\n    return () => _clearTimeout();\\n  }, []);\\n\\n  const runScenario = (): void => {\\n    _clearTimeout();\\n\\n    _delay(3 * 1000)\\n      .then(() =>\\n        setTxURL(\\n          \'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\'\\n        )\\n      )\\n\\n      // wait 5s before completing that transaction\\n      .then(() => _delay(5 * 1000))\\n      .then(() => setStatus(TxStatus.COMPLETED))\\n\\n      // let\'s say, tx infos need to be fetched before being able to render them\\n      .then(() => _delay(1.5 * 1000))\\n      .then(() =>\\n        setTx({\\n          ...tx,\\n          ...{\\n            sender: {\\n              hash: \'1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa\',\\n              url: \'https://www.blockchain.com/btc/address/1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa\',\\n            },\\n            receiver: {\\n              hash: \'1CounterpartyXXXXXXXXXXXXXXXUWLpVr\',\\n              url: \'https://www.blockchain.com/btc/address/1CounterpartyXXXXXXXXXXXXXXXUWLpVr\',\\n            },\\n            txFees: \'0.0001\',\\n            customDetailComponent: (\\n              <img src={txCompletedImg} alt=\'Custom component\' style={{ width: \'100%\' }} />\\n            ),\\n          },\\n        })\\n      );\\n  };\\n\\n  const _handleReset = (): void => {\\n    setTx({});\\n    setStatus(TxStatus.PENDING);\\n    runScenario();\\n  };\\n\\n  const _handleInit = (): void => {\\n    setIsInit(true);\\n    runScenario();\\n  };\\n\\n  if (!isInit) {\\n    return <button onClick={_handleInit}>Begin transaction</button>;\\n  }\\n\\n  return (\\n    <Spacer>\\n      <TransactionStatus\\n        animated\\n        autoShowDetails\\n        amount=\'0.1\'\\n        symbol=\'BTC\'\\n        status={status}\\n        txURL={txURL}\\n        date={{\\n          value: new Date(),\\n        }}\\n        {...tx}\\n      />\\n      <button style={{ marginTop: \'10px\' }} onClick={_handleReset}>\\n        Reset\\n      </button>\\n      <i style={{ display: \'block\', fontSize: \'12px\', marginTop: \'10px\' }}>\\n        <p>\\n          In this example, <u>autoShowDetails</u> property is added. <br />\\n          When the component will receive props, it will automatically expand the card. This is\\n          fully optional.\\n        </p>\\n      </i>\\n    </Spacer>\\n  );\\n};\\nScenario.parameters = {\\n  controls: { hideNoControlsWarning: true },\\n};\\n","locationsMap":{"basic":{"startLoc":{"col":36,"line":43},"endLoc":{"col":94,"line":43},"startBody":{"col":36,"line":43},"endBody":{"col":94,"line":43}},"statuses":{"startLoc":{"col":39,"line":54},"endLoc":{"col":1,"line":88},"startBody":{"col":39,"line":54},"endBody":{"col":1,"line":88}},"transaction-details":{"startLoc":{"col":49,"line":93},"endLoc":{"col":1,"line":110},"startBody":{"col":49,"line":93},"endBody":{"col":1,"line":110}},"animated":{"startLoc":{"col":39,"line":130},"endLoc":{"col":1,"line":169},"startBody":{"col":39,"line":130},"endBody":{"col":1,"line":169}},"scenario":{"startLoc":{"col":39,"line":174},"endLoc":{"col":1,"line":273},"startBody":{"col":39,"line":174},"endBody":{"col":1,"line":273}}}},"storySource":{"source":"import React, { Fragment, useEffect, useRef, useState } from \'react\';\\nimport styled from \'styled-components\';\\nimport { Meta, Story } from \'@storybook/react\';\\nimport { TransactionStatus } from \'../TransactionStatus\';\\nimport { IAddress, IProps } from \'./interfaces\';\\nimport { TxStatus } from \'./txStatus\';\\n\\nimport txCompletedImg from \'../../assets/txstatus-completed.jpg\';\\n\\nconst Spacer = styled.div`\\n  margin: 10px 0 10px 0;\\n`;\\n\\nexport default {\\n  title: \'Components/TransactionStatus\',\\n} as Meta;\\n\\nconst argTypes = {\\n  status: {\\n    control: {\\n      type: \'select\',\\n      options: Object.keys(TxStatus),\\n    },\\n  },\\n};\\n\\nconst controlsToProps = (args: IProps): IProps => {\\n  if (args.status && TxStatus[args.status]) {\\n    args.status = TxStatus[args.status];\\n  }\\n\\n  return args;\\n};\\n\\nexport const Basic: Story<IProps> = (args) => <TransactionStatus {...controlsToProps(args)} />;\\nBasic.argTypes = argTypes;\\nBasic.args = {\\n  status: TxStatus.COMPLETED,\\n  amount: \'0.1\',\\n  symbol: \'BTC\',\\n  animated: false,\\n  noShadow: false,\\n  uncapitalizeStatus: false,\\n};\\n\\nexport const Statuses: Story<IProps> = () => (\\n  <Fragment>\\n    <Spacer>\\n      <TransactionStatus\\n        amount=\'0.1\'\\n        symbol=\'BTC\'\\n        txURL=\'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\'\\n      />\\n    </Spacer>\\n    <Spacer>\\n      <TransactionStatus\\n        amount=\'0.1\'\\n        symbol=\'BTC\'\\n        status={TxStatus.PENDING}\\n        txURL=\'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\'\\n      />\\n    </Spacer>\\n    <Spacer>\\n      <TransactionStatus\\n        amount=\'0.1\'\\n        symbol=\'BTC\'\\n        status={TxStatus.COMPLETED}\\n        txURL=\'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\'\\n      />\\n    </Spacer>\\n    <Spacer>\\n      <TransactionStatus\\n        amount=\'0.1\'\\n        symbol=\'BTC\'\\n        status={TxStatus.FAILED}\\n        txURL=\'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\'\\n      />\\n    </Spacer>\\n  </Fragment>\\n);\\nStatuses.parameters = {\\n  controls: { hideNoControlsWarning: true },\\n};\\n\\nexport const TransactionDetails: Story<IProps> = (args) => (\\n  <TransactionStatus\\n    txFees=\'0.0001\'\\n    date={{\\n      value: new Date(),\\n    }}\\n    sender={{\\n      hash: \'1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa\',\\n      url: \'https://www.blockchain.com/btc/address/1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa\',\\n    }}\\n    receiver={{\\n      hash: \'1CounterpartyXXXXXXXXXXXXXXXUWLpVr\',\\n    }}\\n    customDetailComponent={<b>Hello, this is a custom component!</b>}\\n    txURL=\'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\'\\n    {...controlsToProps(args)}\\n  />\\n);\\nTransactionDetails.argTypes = argTypes;\\nTransactionDetails.args = {\\n  ...Basic.args,\\n  txFees: \'0.0001\',\\n  date: {\\n    value: new Date(),\\n  },\\n  sender: {\\n    hash: \'1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa\',\\n    url: \'https://www.blockchain.com/btc/address/1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa\',\\n  },\\n  receiver: {\\n    hash: \'1CounterpartyXXXXXXXXXXXXXXXUWLpVr\',\\n  },\\n  customDetailComponent: <b>Hello, this is a custom component!</b>,\\n  txURL:\\n    \'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\',\\n};\\n\\nexport const Animated: Story<IProps> = () => (\\n  <Fragment>\\n    <Spacer>\\n      <TransactionStatus\\n        animated\\n        amount=\'0.1\'\\n        symbol=\'BTC\'\\n        status={TxStatus.PENDING}\\n        txURL=\'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\'\\n      />\\n    </Spacer>\\n    <Spacer>\\n      <TransactionStatus\\n        animated\\n        amount=\'0.1\'\\n        symbol=\'BTC\'\\n        status={TxStatus.UNKNOWN}\\n        txURL=\'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\'\\n      />\\n    </Spacer>\\n    <Spacer>\\n      <TransactionStatus\\n        animated\\n        amount=\'0.1\'\\n        symbol=\'BTC\'\\n        status={TxStatus.COMPLETED}\\n        txURL=\'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\'\\n      />\\n    </Spacer>\\n    <Spacer>\\n      <TransactionStatus\\n        animated\\n        amount=\'0.1\'\\n        symbol=\'BTC\'\\n        status={TxStatus.FAILED}\\n        txURL=\'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\'\\n      />\\n    </Spacer>\\n  </Fragment>\\n);\\nAnimated.parameters = {\\n  controls: { hideNoControlsWarning: true },\\n};\\n\\nexport const Scenario: Story<IProps> = () => {\\n  interface ITransaction {\\n    sender: IAddress;\\n    receiver: IAddress;\\n  }\\n\\n  const timer = useRef<NodeJS.Timeout>();\\n\\n  const [status, setStatus] = useState<TxStatus>(TxStatus.PENDING);\\n  const [tx, setTx] = useState<Partial<ITransaction>>({});\\n  const [isInit, setIsInit] = useState<boolean>(false);\\n  const [txURL, setTxURL] = useState<string>();\\n\\n  const _clearTimeout = () => timer.current && clearInterval(timer.current);\\n  const _delay = (delay: number): Promise<void> =>\\n    new Promise((resolve) => setTimeout(resolve, delay));\\n\\n  useEffect(() => {\\n    return () => _clearTimeout();\\n  }, []);\\n\\n  const runScenario = (): void => {\\n    _clearTimeout();\\n\\n    _delay(3 * 1000)\\n      .then(() =>\\n        setTxURL(\\n          \'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\'\\n        )\\n      )\\n\\n      // wait 5s before completing that transaction\\n      .then(() => _delay(5 * 1000))\\n      .then(() => setStatus(TxStatus.COMPLETED))\\n\\n      // let\'s say, tx infos need to be fetched before being able to render them\\n      .then(() => _delay(1.5 * 1000))\\n      .then(() =>\\n        setTx({\\n          ...tx,\\n          ...{\\n            sender: {\\n              hash: \'1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa\',\\n              url: \'https://www.blockchain.com/btc/address/1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa\',\\n            },\\n            receiver: {\\n              hash: \'1CounterpartyXXXXXXXXXXXXXXXUWLpVr\',\\n              url: \'https://www.blockchain.com/btc/address/1CounterpartyXXXXXXXXXXXXXXXUWLpVr\',\\n            },\\n            txFees: \'0.0001\',\\n            customDetailComponent: (\\n              <img src={txCompletedImg} alt=\'Custom component\' style={{ width: \'100%\' }} />\\n            ),\\n          },\\n        })\\n      );\\n  };\\n\\n  const _handleReset = (): void => {\\n    setTx({});\\n    setStatus(TxStatus.PENDING);\\n    runScenario();\\n  };\\n\\n  const _handleInit = (): void => {\\n    setIsInit(true);\\n    runScenario();\\n  };\\n\\n  if (!isInit) {\\n    return <button onClick={_handleInit}>Begin transaction</button>;\\n  }\\n\\n  return (\\n    <Spacer>\\n      <TransactionStatus\\n        animated\\n        autoShowDetails\\n        amount=\'0.1\'\\n        symbol=\'BTC\'\\n        status={status}\\n        txURL={txURL}\\n        date={{\\n          value: new Date(),\\n        }}\\n        {...tx}\\n      />\\n      <button style={{ marginTop: \'10px\' }} onClick={_handleReset}>\\n        Reset\\n      </button>\\n      <i style={{ display: \'block\', fontSize: \'12px\', marginTop: \'10px\' }}>\\n        <p>\\n          In this example, <u>autoShowDetails</u> property is added. <br />\\n          When the component will receive props, it will automatically expand the card. This is\\n          fully optional.\\n        </p>\\n      </i>\\n    </Spacer>\\n  );\\n};\\nScenario.parameters = {\\n  controls: { hideNoControlsWarning: true },\\n};\\n","locationsMap":{"basic":{"startLoc":{"col":36,"line":35},"endLoc":{"col":94,"line":35},"startBody":{"col":36,"line":35},"endBody":{"col":94,"line":35}},"statuses":{"startLoc":{"col":39,"line":46},"endLoc":{"col":1,"line":80},"startBody":{"col":39,"line":46},"endBody":{"col":1,"line":80}},"transaction-details":{"startLoc":{"col":49,"line":85},"endLoc":{"col":1,"line":102},"startBody":{"col":49,"line":85},"endBody":{"col":1,"line":102}},"animated":{"startLoc":{"col":39,"line":122},"endLoc":{"col":1,"line":161},"startBody":{"col":39,"line":122},"endBody":{"col":1,"line":161}},"scenario":{"startLoc":{"col":39,"line":166},"endLoc":{"col":1,"line":265},"startBody":{"col":39,"line":166},"endBody":{"col":1,"line":265}}}},},\n  title: \'Components/TransactionStatus\',\n} as Meta;\n\nconst argTypes = {\n  status: {\n    control: {\n      type: \'select\',\n      options: Object.keys(TxStatus),\n    },\n  },\n};\n\nconst controlsToProps = (args: IProps): IProps => {\n  if (args.status && TxStatus[args.status]) {\n    args.status = TxStatus[args.status];\n  }\n\n  return args;\n};\n\nexport const Basic: Story<IProps> = (args) => <TransactionStatus {...controlsToProps(args)} />;;;\nBasic.argTypes = argTypes;\nBasic.args = {\n  status: TxStatus.COMPLETED,\n  amount: \'0.1\',\n  symbol: \'BTC\',\n  animated: false,\n  noShadow: false,\n  uncapitalizeStatus: false,\n};\n\nexport const Statuses: Story<IProps> = () => (\n  <Fragment>\n    <Spacer>\n      <TransactionStatus\n        amount=\'0.1\'\n        symbol=\'BTC\'\n        txURL=\'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\'\n      />\n    </Spacer>\n    <Spacer>\n      <TransactionStatus\n        amount=\'0.1\'\n        symbol=\'BTC\'\n        status={TxStatus.PENDING}\n        txURL=\'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\'\n      />\n    </Spacer>\n    <Spacer>\n      <TransactionStatus\n        amount=\'0.1\'\n        symbol=\'BTC\'\n        status={TxStatus.COMPLETED}\n        txURL=\'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\'\n      />\n    </Spacer>\n    <Spacer>\n      <TransactionStatus\n        amount=\'0.1\'\n        symbol=\'BTC\'\n        status={TxStatus.FAILED}\n        txURL=\'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\'\n      />\n    </Spacer>\n  </Fragment>\n);;;\nStatuses.parameters = {\n  controls: { hideNoControlsWarning: true },\n};\n\nexport const TransactionDetails: Story<IProps> = (args) => (\n  <TransactionStatus\n    txFees=\'0.0001\'\n    date={{\n      value: new Date(),\n    }}\n    sender={{\n      hash: \'1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa\',\n      url: \'https://www.blockchain.com/btc/address/1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa\',\n    }}\n    receiver={{\n      hash: \'1CounterpartyXXXXXXXXXXXXXXXUWLpVr\',\n    }}\n    customDetailComponent={<b>Hello, this is a custom component!</b>}\n    txURL=\'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\'\n    {...controlsToProps(args)}\n  />\n);;;\nTransactionDetails.argTypes = argTypes;\nTransactionDetails.args = {\n  ...Basic.args,\n  txFees: \'0.0001\',\n  date: {\n    value: new Date(),\n  },\n  sender: {\n    hash: \'1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa\',\n    url: \'https://www.blockchain.com/btc/address/1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa\',\n  },\n  receiver: {\n    hash: \'1CounterpartyXXXXXXXXXXXXXXXUWLpVr\',\n  },\n  customDetailComponent: <b>Hello, this is a custom component!</b>,\n  txURL:\n    \'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\',\n};\n\nexport const Animated: Story<IProps> = () => (\n  <Fragment>\n    <Spacer>\n      <TransactionStatus\n        animated\n        amount=\'0.1\'\n        symbol=\'BTC\'\n        status={TxStatus.PENDING}\n        txURL=\'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\'\n      />\n    </Spacer>\n    <Spacer>\n      <TransactionStatus\n        animated\n        amount=\'0.1\'\n        symbol=\'BTC\'\n        status={TxStatus.UNKNOWN}\n        txURL=\'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\'\n      />\n    </Spacer>\n    <Spacer>\n      <TransactionStatus\n        animated\n        amount=\'0.1\'\n        symbol=\'BTC\'\n        status={TxStatus.COMPLETED}\n        txURL=\'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\'\n      />\n    </Spacer>\n    <Spacer>\n      <TransactionStatus\n        animated\n        amount=\'0.1\'\n        symbol=\'BTC\'\n        status={TxStatus.FAILED}\n        txURL=\'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\'\n      />\n    </Spacer>\n  </Fragment>\n);;;\nAnimated.parameters = {\n  controls: { hideNoControlsWarning: true },\n};\n\nexport const Scenario: Story<IProps> = () => {\n  interface ITransaction {\n    sender: IAddress;\n    receiver: IAddress;\n  }\n\n  const timer = useRef<NodeJS.Timeout>();\n\n  const [status, setStatus] = useState<TxStatus>(TxStatus.PENDING);\n  const [tx, setTx] = useState<Partial<ITransaction>>({});\n  const [isInit, setIsInit] = useState<boolean>(false);\n  const [txURL, setTxURL] = useState<string>();\n\n  const _clearTimeout = () => timer.current && clearInterval(timer.current);\n  const _delay = (delay: number): Promise<void> =>\n    new Promise((resolve) => setTimeout(resolve, delay));\n\n  useEffect(() => {\n    return () => _clearTimeout();\n  }, []);\n\n  const runScenario = (): void => {\n    _clearTimeout();\n\n    _delay(3 * 1000)\n      .then(() =>\n        setTxURL(\n          \'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1\'\n        )\n      )\n\n      // wait 5s before completing that transaction\n      .then(() => _delay(5 * 1000))\n      .then(() => setStatus(TxStatus.COMPLETED))\n\n      // let\'s say, tx infos need to be fetched before being able to render them\n      .then(() => _delay(1.5 * 1000))\n      .then(() =>\n        setTx({\n          ...tx,\n          ...{\n            sender: {\n              hash: \'1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa\',\n              url: \'https://www.blockchain.com/btc/address/1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa\',\n            },\n            receiver: {\n              hash: \'1CounterpartyXXXXXXXXXXXXXXXUWLpVr\',\n              url: \'https://www.blockchain.com/btc/address/1CounterpartyXXXXXXXXXXXXXXXUWLpVr\',\n            },\n            txFees: \'0.0001\',\n            customDetailComponent: (\n              <img src={txCompletedImg} alt=\'Custom component\' style={{ width: \'100%\' }} />\n            ),\n          },\n        })\n      );\n  };\n\n  const _handleReset = (): void => {\n    setTx({});\n    setStatus(TxStatus.PENDING);\n    runScenario();\n  };\n\n  const _handleInit = (): void => {\n    setIsInit(true);\n    runScenario();\n  };\n\n  if (!isInit) {\n    return <button onClick={_handleInit}>Begin transaction</button>;\n  }\n\n  return (\n    <Spacer>\n      <TransactionStatus\n        animated\n        autoShowDetails\n        amount=\'0.1\'\n        symbol=\'BTC\'\n        status={status}\n        txURL={txURL}\n        date={{\n          value: new Date(),\n        }}\n        {...tx}\n      />\n      <button style={{ marginTop: \'10px\' }} onClick={_handleReset}>\n        Reset\n      </button>\n      <i style={{ display: \'block\', fontSize: \'12px\', marginTop: \'10px\' }}>\n        <p>\n          In this example, <u>autoShowDetails</u> property is added. <br />\n          When the component will receive props, it will automatically expand the card. This is\n          fully optional.\n        </p>\n      </i>\n    </Spacer>\n  );\n};\nScenario.parameters = {\n  controls: { hideNoControlsWarning: true },\n};\n',locationsMap:{basic:{startLoc:{col:36,line:51},endLoc:{col:94,line:51},startBody:{col:36,line:51},endBody:{col:94,line:51}},statuses:{startLoc:{col:39,line:62},endLoc:{col:1,line:96},startBody:{col:39,line:62},endBody:{col:1,line:96}},"transaction-details":{startLoc:{col:49,line:101},endLoc:{col:1,line:118},startBody:{col:49,line:101},endBody:{col:1,line:118}},animated:{startLoc:{col:39,line:138},endLoc:{col:1,line:177},startBody:{col:39,line:138},endBody:{col:1,line:177}},scenario:{startLoc:{col:39,line:182},endLoc:{col:1,line:281},startBody:{col:39,line:182},endBody:{col:1,line:281}}}}},_defineProperty(_parameters,"storySource",{source:"\n    \n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React, { Fragment, useEffect, useRef, useState } from 'react';\\nimport styled from 'styled-components';\\nimport { Meta, Story } from '@storybook/react';\\nimport { TransactionStatus } from '../TransactionStatus';\\nimport { IAddress, IProps } from './interfaces';\\nimport { TxStatus } from './txStatus';\\n\\nimport txCompletedImg from '../../assets/txstatus-completed.jpg';\\n\\nconst Spacer = styled.div`\\n  margin: 10px 0 10px 0;\\n`;\\n\\nexport default {\\n  title: 'Components/TransactionStatus',\\n} as Meta;\\n\\nconst argTypes = {\\n  status: {\\n    control: {\\n      type: 'select',\\n      options: Object.keys(TxStatus),\\n    },\\n  },\\n};\\n\\nconst controlsToProps = (args: IProps): IProps => {\\n  if (args.status && TxStatus[args.status]) {\\n    args.status = TxStatus[args.status];\\n  }\\n\\n  return args;\\n};\\n\\nexport const Basic: Story<IProps> = (args) => <TransactionStatus {...controlsToProps(args)} />;\\nBasic.argTypes = argTypes;\\nBasic.args = {\\n  status: TxStatus.COMPLETED,\\n  amount: '0.1',\\n  symbol: 'BTC',\\n  animated: false,\\n  noShadow: false,\\n  uncapitalizeStatus: false,\\n};\\n\\nexport const Statuses: Story<IProps> = () => (\\n  <Fragment>\\n    <Spacer>\\n      <TransactionStatus\\n        amount='0.1'\\n        symbol='BTC'\\n        txURL='https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1'\\n      />\\n    </Spacer>\\n    <Spacer>\\n      <TransactionStatus\\n        amount='0.1'\\n        symbol='BTC'\\n        status={TxStatus.PENDING}\\n        txURL='https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1'\\n      />\\n    </Spacer>\\n    <Spacer>\\n      <TransactionStatus\\n        amount='0.1'\\n        symbol='BTC'\\n        status={TxStatus.COMPLETED}\\n        txURL='https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1'\\n      />\\n    </Spacer>\\n    <Spacer>\\n      <TransactionStatus\\n        amount='0.1'\\n        symbol='BTC'\\n        status={TxStatus.FAILED}\\n        txURL='https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1'\\n      />\\n    </Spacer>\\n  </Fragment>\\n);\\nStatuses.parameters = {\\n  controls: { hideNoControlsWarning: true },\\n};\\n\\nexport const TransactionDetails: Story<IProps> = (args) => (\\n  <TransactionStatus\\n    txFees='0.0001'\\n    date={{\\n      value: new Date(),\\n    }}\\n    sender={{\\n      hash: '1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa',\\n      url: 'https://www.blockchain.com/btc/address/1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa',\\n    }}\\n    receiver={{\\n      hash: '1CounterpartyXXXXXXXXXXXXXXXUWLpVr',\\n    }}\\n    customDetailComponent={<b>Hello, this is a custom component!</b>}\\n    txURL='https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1'\\n    {...controlsToProps(args)}\\n  />\\n);\\nTransactionDetails.argTypes = argTypes;\\nTransactionDetails.args = {\\n  ...Basic.args,\\n  txFees: '0.0001',\\n  date: {\\n    value: new Date(),\\n  },\\n  sender: {\\n    hash: '1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa',\\n    url: 'https://www.blockchain.com/btc/address/1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa',\\n  },\\n  receiver: {\\n    hash: '1CounterpartyXXXXXXXXXXXXXXXUWLpVr',\\n  },\\n  customDetailComponent: <b>Hello, this is a custom component!</b>,\\n  txURL:\\n    'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1',\\n};\\n\\nexport const Animated: Story<IProps> = () => (\\n  <Fragment>\\n    <Spacer>\\n      <TransactionStatus\\n        animated\\n        amount='0.1'\\n        symbol='BTC'\\n        status={TxStatus.PENDING}\\n        txURL='https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1'\\n      />\\n    </Spacer>\\n    <Spacer>\\n      <TransactionStatus\\n        animated\\n        amount='0.1'\\n        symbol='BTC'\\n        status={TxStatus.UNKNOWN}\\n        txURL='https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1'\\n      />\\n    </Spacer>\\n    <Spacer>\\n      <TransactionStatus\\n        animated\\n        amount='0.1'\\n        symbol='BTC'\\n        status={TxStatus.COMPLETED}\\n        txURL='https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1'\\n      />\\n    </Spacer>\\n    <Spacer>\\n      <TransactionStatus\\n        animated\\n        amount='0.1'\\n        symbol='BTC'\\n        status={TxStatus.FAILED}\\n        txURL='https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1'\\n      />\\n    </Spacer>\\n  </Fragment>\\n);\\nAnimated.parameters = {\\n  controls: { hideNoControlsWarning: true },\\n};\\n\\nexport const Scenario: Story<IProps> = () => {\\n  interface ITransaction {\\n    sender: IAddress;\\n    receiver: IAddress;\\n  }\\n\\n  const timer = useRef<NodeJS.Timeout>();\\n\\n  const [status, setStatus] = useState<TxStatus>(TxStatus.PENDING);\\n  const [tx, setTx] = useState<Partial<ITransaction>>({});\\n  const [isInit, setIsInit] = useState<boolean>(false);\\n  const [txURL, setTxURL] = useState<string>();\\n\\n  const _clearTimeout = () => timer.current && clearInterval(timer.current);\\n  const _delay = (delay: number): Promise<void> =>\\n    new Promise((resolve) => setTimeout(resolve, delay));\\n\\n  useEffect(() => {\\n    return () => _clearTimeout();\\n  }, []);\\n\\n  const runScenario = (): void => {\\n    _clearTimeout();\\n\\n    _delay(3 * 1000)\\n      .then(() =>\\n        setTxURL(\\n          'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1'\\n        )\\n      )\\n\\n      // wait 5s before completing that transaction\\n      .then(() => _delay(5 * 1000))\\n      .then(() => setStatus(TxStatus.COMPLETED))\\n\\n      // let's say, tx infos need to be fetched before being able to render them\\n      .then(() => _delay(1.5 * 1000))\\n      .then(() =>\\n        setTx({\\n          ...tx,\\n          ...{\\n            sender: {\\n              hash: '1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa',\\n              url: 'https://www.blockchain.com/btc/address/1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa',\\n            },\\n            receiver: {\\n              hash: '1CounterpartyXXXXXXXXXXXXXXXUWLpVr',\\n              url: 'https://www.blockchain.com/btc/address/1CounterpartyXXXXXXXXXXXXXXXUWLpVr',\\n            },\\n            txFees: '0.0001',\\n            customDetailComponent: (\\n              <img src={txCompletedImg} alt='Custom component' style={{ width: '100%' }} />\\n            ),\\n          },\\n        })\\n      );\\n  };\\n\\n  const _handleReset = (): void => {\\n    setTx({});\\n    setStatus(TxStatus.PENDING);\\n    runScenario();\\n  };\\n\\n  const _handleInit = (): void => {\\n    setIsInit(true);\\n    runScenario();\\n  };\\n\\n  if (!isInit) {\\n    return <button onClick={_handleInit}>Begin transaction</button>;\\n  }\\n\\n  return (\\n    <Spacer>\\n      <TransactionStatus\\n        animated\\n        autoShowDetails\\n        amount='0.1'\\n        symbol='BTC'\\n        status={status}\\n        txURL={txURL}\\n        date={{\\n          value: new Date(),\\n        }}\\n        {...tx}\\n      />\\n      <button style={{ marginTop: '10px' }} onClick={_handleReset}>\\n        Reset\\n      </button>\\n      <i style={{ display: 'block', fontSize: '12px', marginTop: '10px' }}>\\n        <p>\\n          In this example, <u>autoShowDetails</u> property is added. <br />\\n          When the component will receive props, it will automatically expand the card. This is\\n          fully optional.\\n        </p>\\n      </i>\\n    </Spacer>\\n  );\\n};\\nScenario.parameters = {\\n  controls: { hideNoControlsWarning: true },\\n};\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Basic\":{\"startLoc\":{\"col\":36,\"line\":35},\"endLoc\":{\"col\":94,\"line\":35},\"startBody\":{\"col\":36,\"line\":35},\"endBody\":{\"col\":94,\"line\":35}},\"Statuses\":{\"startLoc\":{\"col\":39,\"line\":46},\"endLoc\":{\"col\":1,\"line\":80},\"startBody\":{\"col\":39,\"line\":46},\"endBody\":{\"col\":1,\"line\":80}},\"TransactionDetails\":{\"startLoc\":{\"col\":49,\"line\":85},\"endLoc\":{\"col\":1,\"line\":102},\"startBody\":{\"col\":49,\"line\":85},\"endBody\":{\"col\":1,\"line\":102}},\"Animated\":{\"startLoc\":{\"col\":39,\"line\":122},\"endLoc\":{\"col\":1,\"line\":161},\"startBody\":{\"col\":39,\"line\":122},\"endBody\":{\"col\":1,\"line\":161}},\"Scenario\":{\"startLoc\":{\"col\":39,\"line\":166},\"endLoc\":{\"col\":1,\"line\":265},\"startBody\":{\"col\":39,\"line\":166},\"endBody\":{\"col\":1,\"line\":265}}};\n    \nimport React, { Fragment, useEffect, useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport { Meta, Story } from '@storybook/react';\nimport { TransactionStatus } from '../TransactionStatus';\nimport { IAddress, IProps } from './interfaces';\nimport { TxStatus } from './txStatus';\n\nimport txCompletedImg from '../../assets/txstatus-completed.jpg';\n\nconst Spacer = styled.div`\n  margin: 10px 0 10px 0;\n`;\n\nexport default {parameters: {\"storySource\":{\"source\":\"import React, { Fragment, useEffect, useRef, useState } from 'react';\\nimport styled from 'styled-components';\\nimport { Meta, Story } from '@storybook/react';\\nimport { TransactionStatus } from '../TransactionStatus';\\nimport { IAddress, IProps } from './interfaces';\\nimport { TxStatus } from './txStatus';\\n\\nimport txCompletedImg from '../../assets/txstatus-completed.jpg';\\n\\nconst Spacer = styled.div`\\n  margin: 10px 0 10px 0;\\n`;\\n\\nexport default {\\n  title: 'Components/TransactionStatus',\\n} as Meta;\\n\\nconst argTypes = {\\n  status: {\\n    control: {\\n      type: 'select',\\n      options: Object.keys(TxStatus),\\n    },\\n  },\\n};\\n\\nconst controlsToProps = (args: IProps): IProps => {\\n  if (args.status && TxStatus[args.status]) {\\n    args.status = TxStatus[args.status];\\n  }\\n\\n  return args;\\n};\\n\\nexport const Basic: Story<IProps> = (args) => <TransactionStatus {...controlsToProps(args)} />;\\nBasic.argTypes = argTypes;\\nBasic.args = {\\n  status: TxStatus.COMPLETED,\\n  amount: '0.1',\\n  symbol: 'BTC',\\n  animated: false,\\n  noShadow: false,\\n  uncapitalizeStatus: false,\\n};\\n\\nexport const Statuses: Story<IProps> = () => (\\n  <Fragment>\\n    <Spacer>\\n      <TransactionStatus\\n        amount='0.1'\\n        symbol='BTC'\\n        txURL='https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1'\\n      />\\n    </Spacer>\\n    <Spacer>\\n      <TransactionStatus\\n        amount='0.1'\\n        symbol='BTC'\\n        status={TxStatus.PENDING}\\n        txURL='https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1'\\n      />\\n    </Spacer>\\n    <Spacer>\\n      <TransactionStatus\\n        amount='0.1'\\n        symbol='BTC'\\n        status={TxStatus.COMPLETED}\\n        txURL='https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1'\\n      />\\n    </Spacer>\\n    <Spacer>\\n      <TransactionStatus\\n        amount='0.1'\\n        symbol='BTC'\\n        status={TxStatus.FAILED}\\n        txURL='https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1'\\n      />\\n    </Spacer>\\n  </Fragment>\\n);\\nStatuses.parameters = {\\n  controls: { hideNoControlsWarning: true },\\n};\\n\\nexport const TransactionDetails: Story<IProps> = (args) => (\\n  <TransactionStatus\\n    txFees='0.0001'\\n    date={{\\n      value: new Date(),\\n    }}\\n    sender={{\\n      hash: '1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa',\\n      url: 'https://www.blockchain.com/btc/address/1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa',\\n    }}\\n    receiver={{\\n      hash: '1CounterpartyXXXXXXXXXXXXXXXUWLpVr',\\n    }}\\n    customDetailComponent={<b>Hello, this is a custom component!</b>}\\n    txURL='https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1'\\n    {...controlsToProps(args)}\\n  />\\n);\\nTransactionDetails.argTypes = argTypes;\\nTransactionDetails.args = {\\n  ...Basic.args,\\n  txFees: '0.0001',\\n  date: {\\n    value: new Date(),\\n  },\\n  sender: {\\n    hash: '1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa',\\n    url: 'https://www.blockchain.com/btc/address/1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa',\\n  },\\n  receiver: {\\n    hash: '1CounterpartyXXXXXXXXXXXXXXXUWLpVr',\\n  },\\n  customDetailComponent: <b>Hello, this is a custom component!</b>,\\n  txURL:\\n    'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1',\\n};\\n\\nexport const Animated: Story<IProps> = () => (\\n  <Fragment>\\n    <Spacer>\\n      <TransactionStatus\\n        animated\\n        amount='0.1'\\n        symbol='BTC'\\n        status={TxStatus.PENDING}\\n        txURL='https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1'\\n      />\\n    </Spacer>\\n    <Spacer>\\n      <TransactionStatus\\n        animated\\n        amount='0.1'\\n        symbol='BTC'\\n        status={TxStatus.UNKNOWN}\\n        txURL='https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1'\\n      />\\n    </Spacer>\\n    <Spacer>\\n      <TransactionStatus\\n        animated\\n        amount='0.1'\\n        symbol='BTC'\\n        status={TxStatus.COMPLETED}\\n        txURL='https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1'\\n      />\\n    </Spacer>\\n    <Spacer>\\n      <TransactionStatus\\n        animated\\n        amount='0.1'\\n        symbol='BTC'\\n        status={TxStatus.FAILED}\\n        txURL='https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1'\\n      />\\n    </Spacer>\\n  </Fragment>\\n);\\nAnimated.parameters = {\\n  controls: { hideNoControlsWarning: true },\\n};\\n\\nexport const Scenario: Story<IProps> = () => {\\n  interface ITransaction {\\n    sender: IAddress;\\n    receiver: IAddress;\\n  }\\n\\n  const timer = useRef<NodeJS.Timeout>();\\n\\n  const [status, setStatus] = useState<TxStatus>(TxStatus.PENDING);\\n  const [tx, setTx] = useState<Partial<ITransaction>>({});\\n  const [isInit, setIsInit] = useState<boolean>(false);\\n  const [txURL, setTxURL] = useState<string>();\\n\\n  const _clearTimeout = () => timer.current && clearInterval(timer.current);\\n  const _delay = (delay: number): Promise<void> =>\\n    new Promise((resolve) => setTimeout(resolve, delay));\\n\\n  useEffect(() => {\\n    return () => _clearTimeout();\\n  }, []);\\n\\n  const runScenario = (): void => {\\n    _clearTimeout();\\n\\n    _delay(3 * 1000)\\n      .then(() =>\\n        setTxURL(\\n          'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1'\\n        )\\n      )\\n\\n      // wait 5s before completing that transaction\\n      .then(() => _delay(5 * 1000))\\n      .then(() => setStatus(TxStatus.COMPLETED))\\n\\n      // let's say, tx infos need to be fetched before being able to render them\\n      .then(() => _delay(1.5 * 1000))\\n      .then(() =>\\n        setTx({\\n          ...tx,\\n          ...{\\n            sender: {\\n              hash: '1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa',\\n              url: 'https://www.blockchain.com/btc/address/1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa',\\n            },\\n            receiver: {\\n              hash: '1CounterpartyXXXXXXXXXXXXXXXUWLpVr',\\n              url: 'https://www.blockchain.com/btc/address/1CounterpartyXXXXXXXXXXXXXXXUWLpVr',\\n            },\\n            txFees: '0.0001',\\n            customDetailComponent: (\\n              <img src={txCompletedImg} alt='Custom component' style={{ width: '100%' }} />\\n            ),\\n          },\\n        })\\n      );\\n  };\\n\\n  const _handleReset = (): void => {\\n    setTx({});\\n    setStatus(TxStatus.PENDING);\\n    runScenario();\\n  };\\n\\n  const _handleInit = (): void => {\\n    setIsInit(true);\\n    runScenario();\\n  };\\n\\n  if (!isInit) {\\n    return <button onClick={_handleInit}>Begin transaction</button>;\\n  }\\n\\n  return (\\n    <Spacer>\\n      <TransactionStatus\\n        animated\\n        autoShowDetails\\n        amount='0.1'\\n        symbol='BTC'\\n        status={status}\\n        txURL={txURL}\\n        date={{\\n          value: new Date(),\\n        }}\\n        {...tx}\\n      />\\n      <button style={{ marginTop: '10px' }} onClick={_handleReset}>\\n        Reset\\n      </button>\\n      <i style={{ display: 'block', fontSize: '12px', marginTop: '10px' }}>\\n        <p>\\n          In this example, <u>autoShowDetails</u> property is added. <br />\\n          When the component will receive props, it will automatically expand the card. This is\\n          fully optional.\\n        </p>\\n      </i>\\n    </Spacer>\\n  );\\n};\\nScenario.parameters = {\\n  controls: { hideNoControlsWarning: true },\\n};\\n\",\"locationsMap\":{\"basic\":{\"startLoc\":{\"col\":36,\"line\":35},\"endLoc\":{\"col\":94,\"line\":35},\"startBody\":{\"col\":36,\"line\":35},\"endBody\":{\"col\":94,\"line\":35}},\"statuses\":{\"startLoc\":{\"col\":39,\"line\":46},\"endLoc\":{\"col\":1,\"line\":80},\"startBody\":{\"col\":39,\"line\":46},\"endBody\":{\"col\":1,\"line\":80}},\"transaction-details\":{\"startLoc\":{\"col\":49,\"line\":85},\"endLoc\":{\"col\":1,\"line\":102},\"startBody\":{\"col\":49,\"line\":85},\"endBody\":{\"col\":1,\"line\":102}},\"animated\":{\"startLoc\":{\"col\":39,\"line\":122},\"endLoc\":{\"col\":1,\"line\":161},\"startBody\":{\"col\":39,\"line\":122},\"endBody\":{\"col\":1,\"line\":161}},\"scenario\":{\"startLoc\":{\"col\":39,\"line\":166},\"endLoc\":{\"col\":1,\"line\":265},\"startBody\":{\"col\":39,\"line\":166},\"endBody\":{\"col\":1,\"line\":265}}}},},\n  title: 'Components/TransactionStatus',\n} as Meta;\n\nconst argTypes = {\n  status: {\n    control: {\n      type: 'select',\n      options: Object.keys(TxStatus),\n    },\n  },\n};\n\nconst controlsToProps = (args: IProps): IProps => {\n  if (args.status && TxStatus[args.status]) {\n    args.status = TxStatus[args.status];\n  }\n\n  return args;\n};\n\nexport const Basic: Story<IProps> = (args) => <TransactionStatus {...controlsToProps(args)} />;;\nBasic.argTypes = argTypes;\nBasic.args = {\n  status: TxStatus.COMPLETED,\n  amount: '0.1',\n  symbol: 'BTC',\n  animated: false,\n  noShadow: false,\n  uncapitalizeStatus: false,\n};\n\nexport const Statuses: Story<IProps> = () => (\n  <Fragment>\n    <Spacer>\n      <TransactionStatus\n        amount='0.1'\n        symbol='BTC'\n        txURL='https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1'\n      />\n    </Spacer>\n    <Spacer>\n      <TransactionStatus\n        amount='0.1'\n        symbol='BTC'\n        status={TxStatus.PENDING}\n        txURL='https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1'\n      />\n    </Spacer>\n    <Spacer>\n      <TransactionStatus\n        amount='0.1'\n        symbol='BTC'\n        status={TxStatus.COMPLETED}\n        txURL='https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1'\n      />\n    </Spacer>\n    <Spacer>\n      <TransactionStatus\n        amount='0.1'\n        symbol='BTC'\n        status={TxStatus.FAILED}\n        txURL='https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1'\n      />\n    </Spacer>\n  </Fragment>\n);;\nStatuses.parameters = {\n  controls: { hideNoControlsWarning: true },\n};\n\nexport const TransactionDetails: Story<IProps> = (args) => (\n  <TransactionStatus\n    txFees='0.0001'\n    date={{\n      value: new Date(),\n    }}\n    sender={{\n      hash: '1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa',\n      url: 'https://www.blockchain.com/btc/address/1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa',\n    }}\n    receiver={{\n      hash: '1CounterpartyXXXXXXXXXXXXXXXUWLpVr',\n    }}\n    customDetailComponent={<b>Hello, this is a custom component!</b>}\n    txURL='https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1'\n    {...controlsToProps(args)}\n  />\n);;\nTransactionDetails.argTypes = argTypes;\nTransactionDetails.args = {\n  ...Basic.args,\n  txFees: '0.0001',\n  date: {\n    value: new Date(),\n  },\n  sender: {\n    hash: '1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa',\n    url: 'https://www.blockchain.com/btc/address/1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa',\n  },\n  receiver: {\n    hash: '1CounterpartyXXXXXXXXXXXXXXXUWLpVr',\n  },\n  customDetailComponent: <b>Hello, this is a custom component!</b>,\n  txURL:\n    'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1',\n};\n\nexport const Animated: Story<IProps> = () => (\n  <Fragment>\n    <Spacer>\n      <TransactionStatus\n        animated\n        amount='0.1'\n        symbol='BTC'\n        status={TxStatus.PENDING}\n        txURL='https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1'\n      />\n    </Spacer>\n    <Spacer>\n      <TransactionStatus\n        animated\n        amount='0.1'\n        symbol='BTC'\n        status={TxStatus.UNKNOWN}\n        txURL='https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1'\n      />\n    </Spacer>\n    <Spacer>\n      <TransactionStatus\n        animated\n        amount='0.1'\n        symbol='BTC'\n        status={TxStatus.COMPLETED}\n        txURL='https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1'\n      />\n    </Spacer>\n    <Spacer>\n      <TransactionStatus\n        animated\n        amount='0.1'\n        symbol='BTC'\n        status={TxStatus.FAILED}\n        txURL='https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1'\n      />\n    </Spacer>\n  </Fragment>\n);;\nAnimated.parameters = {\n  controls: { hideNoControlsWarning: true },\n};\n\nexport const Scenario: Story<IProps> = () => {\n  interface ITransaction {\n    sender: IAddress;\n    receiver: IAddress;\n  }\n\n  const timer = useRef<NodeJS.Timeout>();\n\n  const [status, setStatus] = useState<TxStatus>(TxStatus.PENDING);\n  const [tx, setTx] = useState<Partial<ITransaction>>({});\n  const [isInit, setIsInit] = useState<boolean>(false);\n  const [txURL, setTxURL] = useState<string>();\n\n  const _clearTimeout = () => timer.current && clearInterval(timer.current);\n  const _delay = (delay: number): Promise<void> =>\n    new Promise((resolve) => setTimeout(resolve, delay));\n\n  useEffect(() => {\n    return () => _clearTimeout();\n  }, []);\n\n  const runScenario = (): void => {\n    _clearTimeout();\n\n    _delay(3 * 1000)\n      .then(() =>\n        setTxURL(\n          'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1'\n        )\n      )\n\n      // wait 5s before completing that transaction\n      .then(() => _delay(5 * 1000))\n      .then(() => setStatus(TxStatus.COMPLETED))\n\n      // let's say, tx infos need to be fetched before being able to render them\n      .then(() => _delay(1.5 * 1000))\n      .then(() =>\n        setTx({\n          ...tx,\n          ...{\n            sender: {\n              hash: '1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa',\n              url: 'https://www.blockchain.com/btc/address/1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa',\n            },\n            receiver: {\n              hash: '1CounterpartyXXXXXXXXXXXXXXXUWLpVr',\n              url: 'https://www.blockchain.com/btc/address/1CounterpartyXXXXXXXXXXXXXXXUWLpVr',\n            },\n            txFees: '0.0001',\n            customDetailComponent: (\n              <img src={txCompletedImg} alt='Custom component' style={{ width: '100%' }} />\n            ),\n          },\n        })\n      );\n  };\n\n  const _handleReset = (): void => {\n    setTx({});\n    setStatus(TxStatus.PENDING);\n    runScenario();\n  };\n\n  const _handleInit = (): void => {\n    setIsInit(true);\n    runScenario();\n  };\n\n  if (!isInit) {\n    return <button onClick={_handleInit}>Begin transaction</button>;\n  }\n\n  return (\n    <Spacer>\n      <TransactionStatus\n        animated\n        autoShowDetails\n        amount='0.1'\n        symbol='BTC'\n        status={status}\n        txURL={txURL}\n        date={{\n          value: new Date(),\n        }}\n        {...tx}\n      />\n      <button style={{ marginTop: '10px' }} onClick={_handleReset}>\n        Reset\n      </button>\n      <i style={{ display: 'block', fontSize: '12px', marginTop: '10px' }}>\n        <p>\n          In this example, <u>autoShowDetails</u> property is added. <br />\n          When the component will receive props, it will automatically expand the card. This is\n          fully optional.\n        </p>\n      </i>\n    </Spacer>\n  );\n};\nScenario.parameters = {\n  controls: { hideNoControlsWarning: true },\n};\n",locationsMap:{basic:{startLoc:{col:36,line:43},endLoc:{col:94,line:43},startBody:{col:36,line:43},endBody:{col:94,line:43}},statuses:{startLoc:{col:39,line:54},endLoc:{col:1,line:88},startBody:{col:39,line:54},endBody:{col:1,line:88}},"transaction-details":{startLoc:{col:49,line:93},endLoc:{col:1,line:110},startBody:{col:49,line:93},endBody:{col:1,line:110}},animated:{startLoc:{col:39,line:130},endLoc:{col:1,line:169},startBody:{col:39,line:130},endBody:{col:1,line:169}},scenario:{startLoc:{col:39,line:174},endLoc:{col:1,line:273},startBody:{col:39,line:174},endBody:{col:1,line:273}}}}),_defineProperty(_parameters,"storySource",{source:"import React, { Fragment, useEffect, useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport { Meta, Story } from '@storybook/react';\nimport { TransactionStatus } from '../TransactionStatus';\nimport { IAddress, IProps } from './interfaces';\nimport { TxStatus } from './txStatus';\n\nimport txCompletedImg from '../../assets/txstatus-completed.jpg';\n\nconst Spacer = styled.div`\n  margin: 10px 0 10px 0;\n`;\n\nexport default {\n  title: 'Components/TransactionStatus',\n} as Meta;\n\nconst argTypes = {\n  status: {\n    control: {\n      type: 'select',\n      options: Object.keys(TxStatus),\n    },\n  },\n};\n\nconst controlsToProps = (args: IProps): IProps => {\n  if (args.status && TxStatus[args.status]) {\n    args.status = TxStatus[args.status];\n  }\n\n  return args;\n};\n\nexport const Basic: Story<IProps> = (args) => <TransactionStatus {...controlsToProps(args)} />;\nBasic.argTypes = argTypes;\nBasic.args = {\n  status: TxStatus.COMPLETED,\n  amount: '0.1',\n  symbol: 'BTC',\n  animated: false,\n  noShadow: false,\n  uncapitalizeStatus: false,\n};\n\nexport const Statuses: Story<IProps> = () => (\n  <Fragment>\n    <Spacer>\n      <TransactionStatus\n        amount='0.1'\n        symbol='BTC'\n        txURL='https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1'\n      />\n    </Spacer>\n    <Spacer>\n      <TransactionStatus\n        amount='0.1'\n        symbol='BTC'\n        status={TxStatus.PENDING}\n        txURL='https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1'\n      />\n    </Spacer>\n    <Spacer>\n      <TransactionStatus\n        amount='0.1'\n        symbol='BTC'\n        status={TxStatus.COMPLETED}\n        txURL='https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1'\n      />\n    </Spacer>\n    <Spacer>\n      <TransactionStatus\n        amount='0.1'\n        symbol='BTC'\n        status={TxStatus.FAILED}\n        txURL='https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1'\n      />\n    </Spacer>\n  </Fragment>\n);\nStatuses.parameters = {\n  controls: { hideNoControlsWarning: true },\n};\n\nexport const TransactionDetails: Story<IProps> = (args) => (\n  <TransactionStatus\n    txFees='0.0001'\n    date={{\n      value: new Date(),\n    }}\n    sender={{\n      hash: '1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa',\n      url: 'https://www.blockchain.com/btc/address/1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa',\n    }}\n    receiver={{\n      hash: '1CounterpartyXXXXXXXXXXXXXXXUWLpVr',\n    }}\n    customDetailComponent={<b>Hello, this is a custom component!</b>}\n    txURL='https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1'\n    {...controlsToProps(args)}\n  />\n);\nTransactionDetails.argTypes = argTypes;\nTransactionDetails.args = {\n  ...Basic.args,\n  txFees: '0.0001',\n  date: {\n    value: new Date(),\n  },\n  sender: {\n    hash: '1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa',\n    url: 'https://www.blockchain.com/btc/address/1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa',\n  },\n  receiver: {\n    hash: '1CounterpartyXXXXXXXXXXXXXXXUWLpVr',\n  },\n  customDetailComponent: <b>Hello, this is a custom component!</b>,\n  txURL:\n    'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1',\n};\n\nexport const Animated: Story<IProps> = () => (\n  <Fragment>\n    <Spacer>\n      <TransactionStatus\n        animated\n        amount='0.1'\n        symbol='BTC'\n        status={TxStatus.PENDING}\n        txURL='https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1'\n      />\n    </Spacer>\n    <Spacer>\n      <TransactionStatus\n        animated\n        amount='0.1'\n        symbol='BTC'\n        status={TxStatus.UNKNOWN}\n        txURL='https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1'\n      />\n    </Spacer>\n    <Spacer>\n      <TransactionStatus\n        animated\n        amount='0.1'\n        symbol='BTC'\n        status={TxStatus.COMPLETED}\n        txURL='https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1'\n      />\n    </Spacer>\n    <Spacer>\n      <TransactionStatus\n        animated\n        amount='0.1'\n        symbol='BTC'\n        status={TxStatus.FAILED}\n        txURL='https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1'\n      />\n    </Spacer>\n  </Fragment>\n);\nAnimated.parameters = {\n  controls: { hideNoControlsWarning: true },\n};\n\nexport const Scenario: Story<IProps> = () => {\n  interface ITransaction {\n    sender: IAddress;\n    receiver: IAddress;\n  }\n\n  const timer = useRef<NodeJS.Timeout>();\n\n  const [status, setStatus] = useState<TxStatus>(TxStatus.PENDING);\n  const [tx, setTx] = useState<Partial<ITransaction>>({});\n  const [isInit, setIsInit] = useState<boolean>(false);\n  const [txURL, setTxURL] = useState<string>();\n\n  const _clearTimeout = () => timer.current && clearInterval(timer.current);\n  const _delay = (delay: number): Promise<void> =>\n    new Promise((resolve) => setTimeout(resolve, delay));\n\n  useEffect(() => {\n    return () => _clearTimeout();\n  }, []);\n\n  const runScenario = (): void => {\n    _clearTimeout();\n\n    _delay(3 * 1000)\n      .then(() =>\n        setTxURL(\n          'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1'\n        )\n      )\n\n      // wait 5s before completing that transaction\n      .then(() => _delay(5 * 1000))\n      .then(() => setStatus(TxStatus.COMPLETED))\n\n      // let's say, tx infos need to be fetched before being able to render them\n      .then(() => _delay(1.5 * 1000))\n      .then(() =>\n        setTx({\n          ...tx,\n          ...{\n            sender: {\n              hash: '1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa',\n              url: 'https://www.blockchain.com/btc/address/1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa',\n            },\n            receiver: {\n              hash: '1CounterpartyXXXXXXXXXXXXXXXUWLpVr',\n              url: 'https://www.blockchain.com/btc/address/1CounterpartyXXXXXXXXXXXXXXXUWLpVr',\n            },\n            txFees: '0.0001',\n            customDetailComponent: (\n              <img src={txCompletedImg} alt='Custom component' style={{ width: '100%' }} />\n            ),\n          },\n        })\n      );\n  };\n\n  const _handleReset = (): void => {\n    setTx({});\n    setStatus(TxStatus.PENDING);\n    runScenario();\n  };\n\n  const _handleInit = (): void => {\n    setIsInit(true);\n    runScenario();\n  };\n\n  if (!isInit) {\n    return <button onClick={_handleInit}>Begin transaction</button>;\n  }\n\n  return (\n    <Spacer>\n      <TransactionStatus\n        animated\n        autoShowDetails\n        amount='0.1'\n        symbol='BTC'\n        status={status}\n        txURL={txURL}\n        date={{\n          value: new Date(),\n        }}\n        {...tx}\n      />\n      <button style={{ marginTop: '10px' }} onClick={_handleReset}>\n        Reset\n      </button>\n      <i style={{ display: 'block', fontSize: '12px', marginTop: '10px' }}>\n        <p>\n          In this example, <u>autoShowDetails</u> property is added. <br />\n          When the component will receive props, it will automatically expand the card. This is\n          fully optional.\n        </p>\n      </i>\n    </Spacer>\n  );\n};\nScenario.parameters = {\n  controls: { hideNoControlsWarning: true },\n};\n",locationsMap:{basic:{startLoc:{col:36,line:35},endLoc:{col:94,line:35},startBody:{col:36,line:35},endBody:{col:94,line:35}},statuses:{startLoc:{col:39,line:46},endLoc:{col:1,line:80},startBody:{col:39,line:46},endBody:{col:1,line:80}},"transaction-details":{startLoc:{col:49,line:85},endLoc:{col:1,line:102},startBody:{col:49,line:85},endBody:{col:1,line:102}},animated:{startLoc:{col:39,line:122},endLoc:{col:1,line:161},startBody:{col:39,line:122},endBody:{col:1,line:161}},scenario:{startLoc:{col:39,line:166},endLoc:{col:1,line:265},startBody:{col:39,line:166},endBody:{col:1,line:265}}}}),_parameters),title:"Components/TransactionStatus"},{status:{control:{type:"select",options:Object.keys(txStatus.a)}}}),index_stories_controlsToProps=function controlsToProps(args){return args.status&&txStatus.a[args.status]&&(args.status=txStatus.a[args.status]),args},index_stories_Basic=function Basic(args){return Object(jsx_runtime.jsx)(TransactionStatus.a,Object.assign({},index_stories_controlsToProps(args)))};index_stories_Basic.displayName="Basic",index_stories_Basic.argTypes=argTypes,index_stories_Basic.args={status:txStatus.a.COMPLETED,amount:"0.1",symbol:"BTC",animated:!1,noShadow:!1,uncapitalizeStatus:!1};var index_stories_Statuses=function Statuses(){return Object(jsx_runtime.jsxs)(react.Fragment,{children:[Object(jsx_runtime.jsx)(Spacer,{children:Object(jsx_runtime.jsx)(TransactionStatus.a,{amount:"0.1",symbol:"BTC",txURL:"https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1"})}),Object(jsx_runtime.jsx)(Spacer,{children:Object(jsx_runtime.jsx)(TransactionStatus.a,{amount:"0.1",symbol:"BTC",status:txStatus.a.PENDING,txURL:"https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1"})}),Object(jsx_runtime.jsx)(Spacer,{children:Object(jsx_runtime.jsx)(TransactionStatus.a,{amount:"0.1",symbol:"BTC",status:txStatus.a.COMPLETED,txURL:"https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1"})}),Object(jsx_runtime.jsx)(Spacer,{children:Object(jsx_runtime.jsx)(TransactionStatus.a,{amount:"0.1",symbol:"BTC",status:txStatus.a.FAILED,txURL:"https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1"})})]})};index_stories_Statuses.displayName="Statuses",index_stories_Statuses.parameters={controls:{hideNoControlsWarning:!0}};var index_stories_TransactionDetails=function TransactionDetails(args){return Object(jsx_runtime.jsx)(TransactionStatus.a,Object.assign({txFees:"0.0001",date:{value:new Date},sender:{hash:"1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa",url:"https://www.blockchain.com/btc/address/1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa"},receiver:{hash:"1CounterpartyXXXXXXXXXXXXXXXUWLpVr"},customDetailComponent:Object(jsx_runtime.jsx)("b",{children:"Hello, this is a custom component!"}),txURL:"https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1"},index_stories_controlsToProps(args)))};index_stories_TransactionDetails.displayName="TransactionDetails",index_stories_TransactionDetails.argTypes=argTypes,index_stories_TransactionDetails.args=Object.assign({},index_stories_Basic.args,{txFees:"0.0001",date:{value:new Date},sender:{hash:"1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa",url:"https://www.blockchain.com/btc/address/1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa"},receiver:{hash:"1CounterpartyXXXXXXXXXXXXXXXUWLpVr"},customDetailComponent:Object(jsx_runtime.jsx)("b",{children:"Hello, this is a custom component!"}),txURL:"https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1"});var index_stories_Animated=function Animated(){return Object(jsx_runtime.jsxs)(react.Fragment,{children:[Object(jsx_runtime.jsx)(Spacer,{children:Object(jsx_runtime.jsx)(TransactionStatus.a,{animated:!0,amount:"0.1",symbol:"BTC",status:txStatus.a.PENDING,txURL:"https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1"})}),Object(jsx_runtime.jsx)(Spacer,{children:Object(jsx_runtime.jsx)(TransactionStatus.a,{animated:!0,amount:"0.1",symbol:"BTC",status:txStatus.a.UNKNOWN,txURL:"https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1"})}),Object(jsx_runtime.jsx)(Spacer,{children:Object(jsx_runtime.jsx)(TransactionStatus.a,{animated:!0,amount:"0.1",symbol:"BTC",status:txStatus.a.COMPLETED,txURL:"https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1"})}),Object(jsx_runtime.jsx)(Spacer,{children:Object(jsx_runtime.jsx)(TransactionStatus.a,{animated:!0,amount:"0.1",symbol:"BTC",status:txStatus.a.FAILED,txURL:"https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1"})})]})};index_stories_Animated.displayName="Animated",index_stories_Animated.parameters={controls:{hideNoControlsWarning:!0}};var index_stories_Scenario=function Scenario(){var timer=Object(react.useRef)(),_useState2=_slicedToArray(Object(react.useState)(txStatus.a.PENDING),2),status=_useState2[0],setStatus=_useState2[1],_useState4=_slicedToArray(Object(react.useState)({}),2),tx=_useState4[0],setTx=_useState4[1],_useState6=_slicedToArray(Object(react.useState)(!1),2),isInit=_useState6[0],setIsInit=_useState6[1],_useState8=_slicedToArray(Object(react.useState)(),2),txURL=_useState8[0],setTxURL=_useState8[1],_clearTimeout=function _clearTimeout(){return timer.current&&clearInterval(timer.current)},_delay=function _delay(delay){return new Promise((function(resolve){return setTimeout(resolve,delay)}))};Object(react.useEffect)((function(){return function(){return _clearTimeout()}}),[]);var runScenario=function runScenario(){_clearTimeout(),_delay(3e3).then((function(){return setTxURL("https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1")})).then((function(){return _delay(5e3)})).then((function(){return setStatus(txStatus.a.COMPLETED)})).then((function(){return _delay(1500)})).then((function(){return setTx(Object.assign({},tx,{sender:{hash:"1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa",url:"https://www.blockchain.com/btc/address/1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa"},receiver:{hash:"1CounterpartyXXXXXXXXXXXXXXXUWLpVr",url:"https://www.blockchain.com/btc/address/1CounterpartyXXXXXXXXXXXXXXXUWLpVr"},txFees:"0.0001",customDetailComponent:Object(jsx_runtime.jsx)("img",{src:txstatus_completed,alt:"Custom component",style:{width:"100%"}})}))}))};return isInit?Object(jsx_runtime.jsxs)(Spacer,{children:[Object(jsx_runtime.jsx)(TransactionStatus.a,Object.assign({animated:!0,autoShowDetails:!0,amount:"0.1",symbol:"BTC",status:status,txURL:txURL,date:{value:new Date}},tx)),Object(jsx_runtime.jsx)("button",{style:{marginTop:"10px"},onClick:function _handleReset(){setTx({}),setStatus(txStatus.a.PENDING),runScenario()},children:"Reset"}),Object(jsx_runtime.jsx)("i",{style:{display:"block",fontSize:"12px",marginTop:"10px"},children:Object(jsx_runtime.jsxs)("p",{children:["In this example, ",Object(jsx_runtime.jsx)("u",{children:"autoShowDetails"})," property is added. ",Object(jsx_runtime.jsx)("br",{}),"When the component will receive props, it will automatically expand the card. This is fully optional."]})})]}):Object(jsx_runtime.jsx)("button",{onClick:function _handleInit(){setIsInit(!0),runScenario()},children:"Begin transaction"})};index_stories_Scenario.displayName="Scenario",index_stories_Scenario.parameters={controls:{hideNoControlsWarning:!0}}},1094:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"CustomLocales",(function(){return localizationProvider_stories_CustomLocales}));__webpack_require__(106),__webpack_require__(356),__webpack_require__(105);var react=__webpack_require__(0),paymentStatus=__webpack_require__(48),TransactionStatus=__webpack_require__(55),PaymentRequest=__webpack_require__(77),localizationProvider=__webpack_require__(123),defaultLocalization=(__webpack_require__(13),__webpack_require__(17),__webpack_require__(15),__webpack_require__(14),__webpack_require__(60),__webpack_require__(86),__webpack_require__(27),__webpack_require__(28),__webpack_require__(54),__webpack_require__(32),__webpack_require__(30),__webpack_require__(34),__webpack_require__(65),__webpack_require__(25),__webpack_require__(12),__webpack_require__(89)),jsx_runtime=__webpack_require__(1);function _toConsumableArray(arr){return function _arrayWithoutHoles(arr){if(Array.isArray(arr))return _arrayLikeToArray(arr)}(arr)||function _iterableToArray(iter){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(iter))return Array.from(iter)}(arr)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr)||function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}var localizationWrapper_LocalizationWrapper=function LocalizationWrapper(_ref){var customLocales=_ref.customLocales,children=_ref.children,Wrapper=function Wrapper(_ref2){var customLocales=_ref2.customLocales,children=_ref2.children,_useContext=Object(react.useContext)(localizationProvider.a),currentlocalization=_useContext.currentlocalization,switchTo=_useContext.switchTo,availableThemes=[].concat(_toConsumableArray(Object.keys(null!=customLocales?customLocales:[])),[defaultLocalization.a]);return Object(jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[Object(jsx_runtime.jsxs)("div",{style:{marginBottom:"1rem"},children:[Object(jsx_runtime.jsxs)("p",{children:["Locale is ",Object(jsx_runtime.jsx)("b",{children:currentlocalization.locale}),Object(jsx_runtime.jsx)("br",{}),Object(jsx_runtime.jsx)("small",{children:"It's saved into your browser's localStorage, so this locale will persist if you refresh the page."})]}),availableThemes.map((function(key,i){return Object(jsx_runtime.jsxs)("button",{style:{margin:"0 0.2rem"},onClick:function onClick(){return switchTo(key)},children:["Go ",key]},i.toString())}))]}),children]})};return Object(jsx_runtime.jsx)(localizationProvider.b,{customLocales:customLocales,children:Object(jsx_runtime.jsx)(Wrapper,{customLocales:customLocales,children:children})})};localizationWrapper_LocalizationWrapper.displayName="LocalizationWrapper";try{localizationWrapper_LocalizationWrapper.displayName="LocalizationWrapper",localizationWrapper_LocalizationWrapper.__docgenInfo={description:"",displayName:"LocalizationWrapper",props:{customLocales:{defaultValue:null,description:"",name:"customLocales",required:!1,type:{name:"Record<string, Partial<ILocalizedStrings>>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/providers/localization/localizationWrapper.tsx#LocalizationWrapper"]={docgenInfo:localizationWrapper_LocalizationWrapper.__docgenInfo,name:"LocalizationWrapper",path:"src/providers/localization/localizationWrapper.tsx#LocalizationWrapper"})}catch(__react_docgen_typescript_loader_error){}var _parameters,fictiveCompany=__webpack_require__(146);function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}__webpack_exports__.default={parameters:(_parameters={storySource:{source:"\n    \n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"\\n    \\n    // @ts-nocheck\\n    // @ts-ignore\\n    var __STORY__ = \\\"import React, { useContext } from 'react';\\\\nimport { PaymentStatus } from '../../components/PaymentRequest/enums/paymentStatus';\\\\nimport { TransactionStatus, TxStatus } from '../../components/TransactionStatus';\\\\nimport { PaymentRequest } from '../../components/PaymentRequest';\\\\nimport { LocalizationContext } from './localizationProvider';\\\\nimport { ILocalizedStrings } from './ILocalizedStrings';\\\\nimport { LocalizationWrapper } from './localizationWrapper';\\\\nimport { Meta, Story } from '@storybook/react';\\\\n\\\\nimport companyAsset from '../../assets/fictiveCompany.png';\\\\n\\\\nexport default {\\\\n  title: 'LocalizationProvider',\\\\n} as Meta;\\\\n\\\\nconst LabRat = (): React.ReactElement => (\\\\n  <>\\\\n    <TransactionStatus\\\\n      status={TxStatus.PENDING}\\\\n      amount='0.1'\\\\n      symbol='BTC'\\\\n      txURL='https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1'\\\\n    />\\\\n    <br />\\\\n    <PaymentRequest\\\\n      symbol='BTC'\\\\n      decimalPlaces={8}\\\\n      sellerName='Such Company LTD'\\\\n      logos={{\\\\n        coin: 'https://upload.wikimedia.org/wikipedia/commons/c/c5/Bitcoin_logo.svg',\\\\n        company: companyAsset,\\\\n      }}\\\\n      address='1BitcoinEaterAddressDontSendf59kuE'\\\\n      amount={{ toPay: 0.9, received: 0.2 }}\\\\n      transactions={[\\\\n        {\\\\n          txHash: '369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1',\\\\n          txUrl:\\\\n            'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1',\\\\n          amount: 0.1,\\\\n        },\\\\n        {\\\\n          txHash: '519f6c9581ce27e0a59f5f8e427b672087e1f2eb1aead0d66288de62ed3e9647',\\\\n          txUrl:\\\\n            'https://www.blockchain.com/btc/tx/519f6c9581ce27e0a59f5f8e427b672087e1f2eb1aead0d66288de62ed3e9647',\\\\n          amount: 0.1,\\\\n        },\\\\n      ]}\\\\n      helpUrl='https://github.com/PaulFasola/adoption/blob/master/README.md'\\\\n      deadline={{\\\\n        dateLocale: 'en-US',\\\\n        datetime: new Date(),\\\\n        humanized: true,\\\\n      }}\\\\n      status={PaymentStatus.PENDING}\\\\n    />\\\\n  </>\\\\n);\\\\n\\\\nexport const CustomLocales: Story = () => {\\\\n  const FailButton: React.FC = () => {\\\\n    const { switchTo } = useContext(LocalizationContext);\\\\n    return (\\\\n      <button\\\\n        style={{ marginBottom: '1.5rem' }}\\\\n        onClick={() => {\\\\n          switchTo('thatDoesNotExist');\\\\n          setTimeout(() => {\\\\n            alert('Check the console below, a warning is waiting for you ;)');\\\\n          }, 200);\\\\n        }}\\\\n      >\\\\n        Go thatDoesNotExist (will fail).\\\\n      </button>\\\\n    );\\\\n  };\\\\n\\\\n  const customLocales: Record<string, Partial<ILocalizedStrings>> = {\\\\n    'fr-FR': {\\\\n      transactionStatus: {\\\\n        statuses: {\\\\n          completed: 'Terminé',\\\\n          failed: 'Echec',\\\\n          pending: 'En attente',\\\\n          unknown: 'Iconnu',\\\\n        },\\\\n      },\\\\n      paymentRequest: {\\\\n        request: \\\\\\\"Merci d'envoyer {amount} {symbol} à l'adresse suivante:\\\\\\\",\\\\n        seller: 'Marchand',\\\\n        receivedAmount: 'Montant reçu',\\\\n        deadline: 'Envoyer avant',\\\\n        remainingAmount: 'Montant restant',\\\\n        status: 'État',\\\\n        help: \\\\\\\"Besoin d'aide? Cliquez ici!\\\\\\\",\\\\n        txStatus: {\\\\n          complete: 'Payment terminé',\\\\n          failed: 'Échec du paiement',\\\\n          pending: 'En attente du paiement',\\\\n        },\\\\n      },\\\\n    },\\\\n    'do-GE': {\\\\n      transactionStatus: {\\\\n        statuses: {\\\\n          completed: 'WOW, Done',\\\\n          failed: 'very failing',\\\\n          pending: 'so pending',\\\\n          unknown: '?????',\\\\n        },\\\\n      },\\\\n      paymentRequest: {\\\\n        request: 'Pls send much {symbol} ({amount} {symbol}) to:',\\\\n        help: 'Such help? Click here!',\\\\n        receivedAmount: 'Received (wow thanks)',\\\\n        remainingAmount: 'Remaining (pls)',\\\\n        txStatus: {\\\\n          complete: 'Very paid',\\\\n          failed: 'Not paid :(',\\\\n          pending: 'Waiting...',\\\\n        },\\\\n      },\\\\n    },\\\\n  };\\\\n\\\\n  return (\\\\n    <LocalizationWrapper customLocales={customLocales}>\\\\n      <FailButton />\\\\n      <LabRat />\\\\n    </LocalizationWrapper>\\\\n  );\\\\n};\\\\nCustomLocales.parameters = {\\\\n  controls: { hideNoControlsWarning: true },\\\\n};\\\\n\\\";\\n    // @ts-ignore\\n    var __LOCATIONS_MAP__ = {\\\"CustomLocales\\\":{\\\"startLoc\\\":{\\\"col\\\":36,\\\"line\\\":60},\\\"endLoc\\\":{\\\"col\\\":1,\\\"line\\\":132},\\\"startBody\\\":{\\\"col\\\":36,\\\"line\\\":60},\\\"endBody\\\":{\\\"col\\\":1,\\\"line\\\":132}}};\\n    \\nimport React, { useContext } from 'react';\\nimport { PaymentStatus } from '../../components/PaymentRequest/enums/paymentStatus';\\nimport { TransactionStatus, TxStatus } from '../../components/TransactionStatus';\\nimport { PaymentRequest } from '../../components/PaymentRequest';\\nimport { LocalizationContext } from './localizationProvider';\\nimport { ILocalizedStrings } from './ILocalizedStrings';\\nimport { LocalizationWrapper } from './localizationWrapper';\\nimport { Meta, Story } from '@storybook/react';\\n\\nimport companyAsset from '../../assets/fictiveCompany.png';\\n\\nexport default {parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"import React, { useContext } from 'react';\\\\nimport { PaymentStatus } from '../../components/PaymentRequest/enums/paymentStatus';\\\\nimport { TransactionStatus, TxStatus } from '../../components/TransactionStatus';\\\\nimport { PaymentRequest } from '../../components/PaymentRequest';\\\\nimport { LocalizationContext } from './localizationProvider';\\\\nimport { ILocalizedStrings } from './ILocalizedStrings';\\\\nimport { LocalizationWrapper } from './localizationWrapper';\\\\nimport { Meta, Story } from '@storybook/react';\\\\n\\\\nimport companyAsset from '../../assets/fictiveCompany.png';\\\\n\\\\nexport default {\\\\n  title: 'LocalizationProvider',\\\\n} as Meta;\\\\n\\\\nconst LabRat = (): React.ReactElement => (\\\\n  <>\\\\n    <TransactionStatus\\\\n      status={TxStatus.PENDING}\\\\n      amount='0.1'\\\\n      symbol='BTC'\\\\n      txURL='https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1'\\\\n    />\\\\n    <br />\\\\n    <PaymentRequest\\\\n      symbol='BTC'\\\\n      decimalPlaces={8}\\\\n      sellerName='Such Company LTD'\\\\n      logos={{\\\\n        coin: 'https://upload.wikimedia.org/wikipedia/commons/c/c5/Bitcoin_logo.svg',\\\\n        company: companyAsset,\\\\n      }}\\\\n      address='1BitcoinEaterAddressDontSendf59kuE'\\\\n      amount={{ toPay: 0.9, received: 0.2 }}\\\\n      transactions={[\\\\n        {\\\\n          txHash: '369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1',\\\\n          txUrl:\\\\n            'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1',\\\\n          amount: 0.1,\\\\n        },\\\\n        {\\\\n          txHash: '519f6c9581ce27e0a59f5f8e427b672087e1f2eb1aead0d66288de62ed3e9647',\\\\n          txUrl:\\\\n            'https://www.blockchain.com/btc/tx/519f6c9581ce27e0a59f5f8e427b672087e1f2eb1aead0d66288de62ed3e9647',\\\\n          amount: 0.1,\\\\n        },\\\\n      ]}\\\\n      helpUrl='https://github.com/PaulFasola/adoption/blob/master/README.md'\\\\n      deadline={{\\\\n        dateLocale: 'en-US',\\\\n        datetime: new Date(),\\\\n        humanized: true,\\\\n      }}\\\\n      status={PaymentStatus.PENDING}\\\\n    />\\\\n  </>\\\\n);\\\\n\\\\nexport const CustomLocales: Story = () => {\\\\n  const FailButton: React.FC = () => {\\\\n    const { switchTo } = useContext(LocalizationContext);\\\\n    return (\\\\n      <button\\\\n        style={{ marginBottom: '1.5rem' }}\\\\n        onClick={() => {\\\\n          switchTo('thatDoesNotExist');\\\\n          setTimeout(() => {\\\\n            alert('Check the console below, a warning is waiting for you ;)');\\\\n          }, 200);\\\\n        }}\\\\n      >\\\\n        Go thatDoesNotExist (will fail).\\\\n      </button>\\\\n    );\\\\n  };\\\\n\\\\n  const customLocales: Record<string, Partial<ILocalizedStrings>> = {\\\\n    'fr-FR': {\\\\n      transactionStatus: {\\\\n        statuses: {\\\\n          completed: 'Terminé',\\\\n          failed: 'Echec',\\\\n          pending: 'En attente',\\\\n          unknown: 'Iconnu',\\\\n        },\\\\n      },\\\\n      paymentRequest: {\\\\n        request: \\\\\\\"Merci d'envoyer {amount} {symbol} à l'adresse suivante:\\\\\\\",\\\\n        seller: 'Marchand',\\\\n        receivedAmount: 'Montant reçu',\\\\n        deadline: 'Envoyer avant',\\\\n        remainingAmount: 'Montant restant',\\\\n        status: 'État',\\\\n        help: \\\\\\\"Besoin d'aide? Cliquez ici!\\\\\\\",\\\\n        txStatus: {\\\\n          complete: 'Payment terminé',\\\\n          failed: 'Échec du paiement',\\\\n          pending: 'En attente du paiement',\\\\n        },\\\\n      },\\\\n    },\\\\n    'do-GE': {\\\\n      transactionStatus: {\\\\n        statuses: {\\\\n          completed: 'WOW, Done',\\\\n          failed: 'very failing',\\\\n          pending: 'so pending',\\\\n          unknown: '?????',\\\\n        },\\\\n      },\\\\n      paymentRequest: {\\\\n        request: 'Pls send much {symbol} ({amount} {symbol}) to:',\\\\n        help: 'Such help? Click here!',\\\\n        receivedAmount: 'Received (wow thanks)',\\\\n        remainingAmount: 'Remaining (pls)',\\\\n        txStatus: {\\\\n          complete: 'Very paid',\\\\n          failed: 'Not paid :(',\\\\n          pending: 'Waiting...',\\\\n        },\\\\n      },\\\\n    },\\\\n  };\\\\n\\\\n  return (\\\\n    <LocalizationWrapper customLocales={customLocales}>\\\\n      <FailButton />\\\\n      <LabRat />\\\\n    </LocalizationWrapper>\\\\n  );\\\\n};\\\\nCustomLocales.parameters = {\\\\n  controls: { hideNoControlsWarning: true },\\\\n};\\\\n\\\",\\\"locationsMap\\\":{\\\"custom-locales\\\":{\\\"startLoc\\\":{\\\"col\\\":36,\\\"line\\\":60},\\\"endLoc\\\":{\\\"col\\\":1,\\\"line\\\":132},\\\"startBody\\\":{\\\"col\\\":36,\\\"line\\\":60},\\\"endBody\\\":{\\\"col\\\":1,\\\"line\\\":132}}}},},\\n  title: 'LocalizationProvider',\\n} as Meta;\\n\\nconst LabRat = (): React.ReactElement => (\\n  <>\\n    <TransactionStatus\\n      status={TxStatus.PENDING}\\n      amount='0.1'\\n      symbol='BTC'\\n      txURL='https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1'\\n    />\\n    <br />\\n    <PaymentRequest\\n      symbol='BTC'\\n      decimalPlaces={8}\\n      sellerName='Such Company LTD'\\n      logos={{\\n        coin: 'https://upload.wikimedia.org/wikipedia/commons/c/c5/Bitcoin_logo.svg',\\n        company: companyAsset,\\n      }}\\n      address='1BitcoinEaterAddressDontSendf59kuE'\\n      amount={{ toPay: 0.9, received: 0.2 }}\\n      transactions={[\\n        {\\n          txHash: '369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1',\\n          txUrl:\\n            'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1',\\n          amount: 0.1,\\n        },\\n        {\\n          txHash: '519f6c9581ce27e0a59f5f8e427b672087e1f2eb1aead0d66288de62ed3e9647',\\n          txUrl:\\n            'https://www.blockchain.com/btc/tx/519f6c9581ce27e0a59f5f8e427b672087e1f2eb1aead0d66288de62ed3e9647',\\n          amount: 0.1,\\n        },\\n      ]}\\n      helpUrl='https://github.com/PaulFasola/adoption/blob/master/README.md'\\n      deadline={{\\n        dateLocale: 'en-US',\\n        datetime: new Date(),\\n        humanized: true,\\n      }}\\n      status={PaymentStatus.PENDING}\\n    />\\n  </>\\n);\\n\\nexport const CustomLocales: Story = () => {\\n  const FailButton: React.FC = () => {\\n    const { switchTo } = useContext(LocalizationContext);\\n    return (\\n      <button\\n        style={{ marginBottom: '1.5rem' }}\\n        onClick={() => {\\n          switchTo('thatDoesNotExist');\\n          setTimeout(() => {\\n            alert('Check the console below, a warning is waiting for you ;)');\\n          }, 200);\\n        }}\\n      >\\n        Go thatDoesNotExist (will fail).\\n      </button>\\n    );\\n  };\\n\\n  const customLocales: Record<string, Partial<ILocalizedStrings>> = {\\n    'fr-FR': {\\n      transactionStatus: {\\n        statuses: {\\n          completed: 'Terminé',\\n          failed: 'Echec',\\n          pending: 'En attente',\\n          unknown: 'Iconnu',\\n        },\\n      },\\n      paymentRequest: {\\n        request: \\\"Merci d'envoyer {amount} {symbol} à l'adresse suivante:\\\",\\n        seller: 'Marchand',\\n        receivedAmount: 'Montant reçu',\\n        deadline: 'Envoyer avant',\\n        remainingAmount: 'Montant restant',\\n        status: 'État',\\n        help: \\\"Besoin d'aide? Cliquez ici!\\\",\\n        txStatus: {\\n          complete: 'Payment terminé',\\n          failed: 'Échec du paiement',\\n          pending: 'En attente du paiement',\\n        },\\n      },\\n    },\\n    'do-GE': {\\n      transactionStatus: {\\n        statuses: {\\n          completed: 'WOW, Done',\\n          failed: 'very failing',\\n          pending: 'so pending',\\n          unknown: '?????',\\n        },\\n      },\\n      paymentRequest: {\\n        request: 'Pls send much {symbol} ({amount} {symbol}) to:',\\n        help: 'Such help? Click here!',\\n        receivedAmount: 'Received (wow thanks)',\\n        remainingAmount: 'Remaining (pls)',\\n        txStatus: {\\n          complete: 'Very paid',\\n          failed: 'Not paid :(',\\n          pending: 'Waiting...',\\n        },\\n      },\\n    },\\n  };\\n\\n  return (\\n    <LocalizationWrapper customLocales={customLocales}>\\n      <FailButton />\\n      <LabRat />\\n    </LocalizationWrapper>\\n  );\\n};\\nCustomLocales.parameters = {\\n  controls: { hideNoControlsWarning: true },\\n};\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"CustomLocales\":{\"startLoc\":{\"col\":36,\"line\":68},\"endLoc\":{\"col\":1,\"line\":140},\"startBody\":{\"col\":36,\"line\":68},\"endBody\":{\"col\":1,\"line\":140}}};\n    \n\n    \n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React, { useContext } from 'react';\\nimport { PaymentStatus } from '../../components/PaymentRequest/enums/paymentStatus';\\nimport { TransactionStatus, TxStatus } from '../../components/TransactionStatus';\\nimport { PaymentRequest } from '../../components/PaymentRequest';\\nimport { LocalizationContext } from './localizationProvider';\\nimport { ILocalizedStrings } from './ILocalizedStrings';\\nimport { LocalizationWrapper } from './localizationWrapper';\\nimport { Meta, Story } from '@storybook/react';\\n\\nimport companyAsset from '../../assets/fictiveCompany.png';\\n\\nexport default {\\n  title: 'LocalizationProvider',\\n} as Meta;\\n\\nconst LabRat = (): React.ReactElement => (\\n  <>\\n    <TransactionStatus\\n      status={TxStatus.PENDING}\\n      amount='0.1'\\n      symbol='BTC'\\n      txURL='https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1'\\n    />\\n    <br />\\n    <PaymentRequest\\n      symbol='BTC'\\n      decimalPlaces={8}\\n      sellerName='Such Company LTD'\\n      logos={{\\n        coin: 'https://upload.wikimedia.org/wikipedia/commons/c/c5/Bitcoin_logo.svg',\\n        company: companyAsset,\\n      }}\\n      address='1BitcoinEaterAddressDontSendf59kuE'\\n      amount={{ toPay: 0.9, received: 0.2 }}\\n      transactions={[\\n        {\\n          txHash: '369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1',\\n          txUrl:\\n            'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1',\\n          amount: 0.1,\\n        },\\n        {\\n          txHash: '519f6c9581ce27e0a59f5f8e427b672087e1f2eb1aead0d66288de62ed3e9647',\\n          txUrl:\\n            'https://www.blockchain.com/btc/tx/519f6c9581ce27e0a59f5f8e427b672087e1f2eb1aead0d66288de62ed3e9647',\\n          amount: 0.1,\\n        },\\n      ]}\\n      helpUrl='https://github.com/PaulFasola/adoption/blob/master/README.md'\\n      deadline={{\\n        dateLocale: 'en-US',\\n        datetime: new Date(),\\n        humanized: true,\\n      }}\\n      status={PaymentStatus.PENDING}\\n    />\\n  </>\\n);\\n\\nexport const CustomLocales: Story = () => {\\n  const FailButton: React.FC = () => {\\n    const { switchTo } = useContext(LocalizationContext);\\n    return (\\n      <button\\n        style={{ marginBottom: '1.5rem' }}\\n        onClick={() => {\\n          switchTo('thatDoesNotExist');\\n          setTimeout(() => {\\n            alert('Check the console below, a warning is waiting for you ;)');\\n          }, 200);\\n        }}\\n      >\\n        Go thatDoesNotExist (will fail).\\n      </button>\\n    );\\n  };\\n\\n  const customLocales: Record<string, Partial<ILocalizedStrings>> = {\\n    'fr-FR': {\\n      transactionStatus: {\\n        statuses: {\\n          completed: 'Terminé',\\n          failed: 'Echec',\\n          pending: 'En attente',\\n          unknown: 'Iconnu',\\n        },\\n      },\\n      paymentRequest: {\\n        request: \\\"Merci d'envoyer {amount} {symbol} à l'adresse suivante:\\\",\\n        seller: 'Marchand',\\n        receivedAmount: 'Montant reçu',\\n        deadline: 'Envoyer avant',\\n        remainingAmount: 'Montant restant',\\n        status: 'État',\\n        help: \\\"Besoin d'aide? Cliquez ici!\\\",\\n        txStatus: {\\n          complete: 'Payment terminé',\\n          failed: 'Échec du paiement',\\n          pending: 'En attente du paiement',\\n        },\\n      },\\n    },\\n    'do-GE': {\\n      transactionStatus: {\\n        statuses: {\\n          completed: 'WOW, Done',\\n          failed: 'very failing',\\n          pending: 'so pending',\\n          unknown: '?????',\\n        },\\n      },\\n      paymentRequest: {\\n        request: 'Pls send much {symbol} ({amount} {symbol}) to:',\\n        help: 'Such help? Click here!',\\n        receivedAmount: 'Received (wow thanks)',\\n        remainingAmount: 'Remaining (pls)',\\n        txStatus: {\\n          complete: 'Very paid',\\n          failed: 'Not paid :(',\\n          pending: 'Waiting...',\\n        },\\n      },\\n    },\\n  };\\n\\n  return (\\n    <LocalizationWrapper customLocales={customLocales}>\\n      <FailButton />\\n      <LabRat />\\n    </LocalizationWrapper>\\n  );\\n};\\nCustomLocales.parameters = {\\n  controls: { hideNoControlsWarning: true },\\n};\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"CustomLocales\":{\"startLoc\":{\"col\":36,\"line\":60},\"endLoc\":{\"col\":1,\"line\":132},\"startBody\":{\"col\":36,\"line\":60},\"endBody\":{\"col\":1,\"line\":132}}};\n    \nimport React, { useContext } from 'react';\nimport { PaymentStatus } from '../../components/PaymentRequest/enums/paymentStatus';\nimport { TransactionStatus, TxStatus } from '../../components/TransactionStatus';\nimport { PaymentRequest } from '../../components/PaymentRequest';\nimport { LocalizationContext } from './localizationProvider';\nimport { ILocalizedStrings } from './ILocalizedStrings';\nimport { LocalizationWrapper } from './localizationWrapper';\nimport { Meta, Story } from '@storybook/react';\n\nimport companyAsset from '../../assets/fictiveCompany.png';\n\nexport default {parameters: {\"storySource\":{\"source\":\"\\n    \\n    // @ts-nocheck\\n    // @ts-ignore\\n    var __STORY__ = \\\"import React, { useContext } from 'react';\\\\nimport { PaymentStatus } from '../../components/PaymentRequest/enums/paymentStatus';\\\\nimport { TransactionStatus, TxStatus } from '../../components/TransactionStatus';\\\\nimport { PaymentRequest } from '../../components/PaymentRequest';\\\\nimport { LocalizationContext } from './localizationProvider';\\\\nimport { ILocalizedStrings } from './ILocalizedStrings';\\\\nimport { LocalizationWrapper } from './localizationWrapper';\\\\nimport { Meta, Story } from '@storybook/react';\\\\n\\\\nimport companyAsset from '../../assets/fictiveCompany.png';\\\\n\\\\nexport default {\\\\n  title: 'LocalizationProvider',\\\\n} as Meta;\\\\n\\\\nconst LabRat = (): React.ReactElement => (\\\\n  <>\\\\n    <TransactionStatus\\\\n      status={TxStatus.PENDING}\\\\n      amount='0.1'\\\\n      symbol='BTC'\\\\n      txURL='https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1'\\\\n    />\\\\n    <br />\\\\n    <PaymentRequest\\\\n      symbol='BTC'\\\\n      decimalPlaces={8}\\\\n      sellerName='Such Company LTD'\\\\n      logos={{\\\\n        coin: 'https://upload.wikimedia.org/wikipedia/commons/c/c5/Bitcoin_logo.svg',\\\\n        company: companyAsset,\\\\n      }}\\\\n      address='1BitcoinEaterAddressDontSendf59kuE'\\\\n      amount={{ toPay: 0.9, received: 0.2 }}\\\\n      transactions={[\\\\n        {\\\\n          txHash: '369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1',\\\\n          txUrl:\\\\n            'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1',\\\\n          amount: 0.1,\\\\n        },\\\\n        {\\\\n          txHash: '519f6c9581ce27e0a59f5f8e427b672087e1f2eb1aead0d66288de62ed3e9647',\\\\n          txUrl:\\\\n            'https://www.blockchain.com/btc/tx/519f6c9581ce27e0a59f5f8e427b672087e1f2eb1aead0d66288de62ed3e9647',\\\\n          amount: 0.1,\\\\n        },\\\\n      ]}\\\\n      helpUrl='https://github.com/PaulFasola/adoption/blob/master/README.md'\\\\n      deadline={{\\\\n        dateLocale: 'en-US',\\\\n        datetime: new Date(),\\\\n        humanized: true,\\\\n      }}\\\\n      status={PaymentStatus.PENDING}\\\\n    />\\\\n  </>\\\\n);\\\\n\\\\nexport const CustomLocales: Story = () => {\\\\n  const FailButton: React.FC = () => {\\\\n    const { switchTo } = useContext(LocalizationContext);\\\\n    return (\\\\n      <button\\\\n        style={{ marginBottom: '1.5rem' }}\\\\n        onClick={() => {\\\\n          switchTo('thatDoesNotExist');\\\\n          setTimeout(() => {\\\\n            alert('Check the console below, a warning is waiting for you ;)');\\\\n          }, 200);\\\\n        }}\\\\n      >\\\\n        Go thatDoesNotExist (will fail).\\\\n      </button>\\\\n    );\\\\n  };\\\\n\\\\n  const customLocales: Record<string, Partial<ILocalizedStrings>> = {\\\\n    'fr-FR': {\\\\n      transactionStatus: {\\\\n        statuses: {\\\\n          completed: 'Terminé',\\\\n          failed: 'Echec',\\\\n          pending: 'En attente',\\\\n          unknown: 'Iconnu',\\\\n        },\\\\n      },\\\\n      paymentRequest: {\\\\n        request: \\\\\\\"Merci d'envoyer {amount} {symbol} à l'adresse suivante:\\\\\\\",\\\\n        seller: 'Marchand',\\\\n        receivedAmount: 'Montant reçu',\\\\n        deadline: 'Envoyer avant',\\\\n        remainingAmount: 'Montant restant',\\\\n        status: 'État',\\\\n        help: \\\\\\\"Besoin d'aide? Cliquez ici!\\\\\\\",\\\\n        txStatus: {\\\\n          complete: 'Payment terminé',\\\\n          failed: 'Échec du paiement',\\\\n          pending: 'En attente du paiement',\\\\n        },\\\\n      },\\\\n    },\\\\n    'do-GE': {\\\\n      transactionStatus: {\\\\n        statuses: {\\\\n          completed: 'WOW, Done',\\\\n          failed: 'very failing',\\\\n          pending: 'so pending',\\\\n          unknown: '?????',\\\\n        },\\\\n      },\\\\n      paymentRequest: {\\\\n        request: 'Pls send much {symbol} ({amount} {symbol}) to:',\\\\n        help: 'Such help? Click here!',\\\\n        receivedAmount: 'Received (wow thanks)',\\\\n        remainingAmount: 'Remaining (pls)',\\\\n        txStatus: {\\\\n          complete: 'Very paid',\\\\n          failed: 'Not paid :(',\\\\n          pending: 'Waiting...',\\\\n        },\\\\n      },\\\\n    },\\\\n  };\\\\n\\\\n  return (\\\\n    <LocalizationWrapper customLocales={customLocales}>\\\\n      <FailButton />\\\\n      <LabRat />\\\\n    </LocalizationWrapper>\\\\n  );\\\\n};\\\\nCustomLocales.parameters = {\\\\n  controls: { hideNoControlsWarning: true },\\\\n};\\\\n\\\";\\n    // @ts-ignore\\n    var __LOCATIONS_MAP__ = {\\\"CustomLocales\\\":{\\\"startLoc\\\":{\\\"col\\\":36,\\\"line\\\":60},\\\"endLoc\\\":{\\\"col\\\":1,\\\"line\\\":132},\\\"startBody\\\":{\\\"col\\\":36,\\\"line\\\":60},\\\"endBody\\\":{\\\"col\\\":1,\\\"line\\\":132}}};\\n    \\nimport React, { useContext } from 'react';\\nimport { PaymentStatus } from '../../components/PaymentRequest/enums/paymentStatus';\\nimport { TransactionStatus, TxStatus } from '../../components/TransactionStatus';\\nimport { PaymentRequest } from '../../components/PaymentRequest';\\nimport { LocalizationContext } from './localizationProvider';\\nimport { ILocalizedStrings } from './ILocalizedStrings';\\nimport { LocalizationWrapper } from './localizationWrapper';\\nimport { Meta, Story } from '@storybook/react';\\n\\nimport companyAsset from '../../assets/fictiveCompany.png';\\n\\nexport default {parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"import React, { useContext } from 'react';\\\\nimport { PaymentStatus } from '../../components/PaymentRequest/enums/paymentStatus';\\\\nimport { TransactionStatus, TxStatus } from '../../components/TransactionStatus';\\\\nimport { PaymentRequest } from '../../components/PaymentRequest';\\\\nimport { LocalizationContext } from './localizationProvider';\\\\nimport { ILocalizedStrings } from './ILocalizedStrings';\\\\nimport { LocalizationWrapper } from './localizationWrapper';\\\\nimport { Meta, Story } from '@storybook/react';\\\\n\\\\nimport companyAsset from '../../assets/fictiveCompany.png';\\\\n\\\\nexport default {\\\\n  title: 'LocalizationProvider',\\\\n} as Meta;\\\\n\\\\nconst LabRat = (): React.ReactElement => (\\\\n  <>\\\\n    <TransactionStatus\\\\n      status={TxStatus.PENDING}\\\\n      amount='0.1'\\\\n      symbol='BTC'\\\\n      txURL='https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1'\\\\n    />\\\\n    <br />\\\\n    <PaymentRequest\\\\n      symbol='BTC'\\\\n      decimalPlaces={8}\\\\n      sellerName='Such Company LTD'\\\\n      logos={{\\\\n        coin: 'https://upload.wikimedia.org/wikipedia/commons/c/c5/Bitcoin_logo.svg',\\\\n        company: companyAsset,\\\\n      }}\\\\n      address='1BitcoinEaterAddressDontSendf59kuE'\\\\n      amount={{ toPay: 0.9, received: 0.2 }}\\\\n      transactions={[\\\\n        {\\\\n          txHash: '369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1',\\\\n          txUrl:\\\\n            'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1',\\\\n          amount: 0.1,\\\\n        },\\\\n        {\\\\n          txHash: '519f6c9581ce27e0a59f5f8e427b672087e1f2eb1aead0d66288de62ed3e9647',\\\\n          txUrl:\\\\n            'https://www.blockchain.com/btc/tx/519f6c9581ce27e0a59f5f8e427b672087e1f2eb1aead0d66288de62ed3e9647',\\\\n          amount: 0.1,\\\\n        },\\\\n      ]}\\\\n      helpUrl='https://github.com/PaulFasola/adoption/blob/master/README.md'\\\\n      deadline={{\\\\n        dateLocale: 'en-US',\\\\n        datetime: new Date(),\\\\n        humanized: true,\\\\n      }}\\\\n      status={PaymentStatus.PENDING}\\\\n    />\\\\n  </>\\\\n);\\\\n\\\\nexport const CustomLocales: Story = () => {\\\\n  const FailButton: React.FC = () => {\\\\n    const { switchTo } = useContext(LocalizationContext);\\\\n    return (\\\\n      <button\\\\n        style={{ marginBottom: '1.5rem' }}\\\\n        onClick={() => {\\\\n          switchTo('thatDoesNotExist');\\\\n          setTimeout(() => {\\\\n            alert('Check the console below, a warning is waiting for you ;)');\\\\n          }, 200);\\\\n        }}\\\\n      >\\\\n        Go thatDoesNotExist (will fail).\\\\n      </button>\\\\n    );\\\\n  };\\\\n\\\\n  const customLocales: Record<string, Partial<ILocalizedStrings>> = {\\\\n    'fr-FR': {\\\\n      transactionStatus: {\\\\n        statuses: {\\\\n          completed: 'Terminé',\\\\n          failed: 'Echec',\\\\n          pending: 'En attente',\\\\n          unknown: 'Iconnu',\\\\n        },\\\\n      },\\\\n      paymentRequest: {\\\\n        request: \\\\\\\"Merci d'envoyer {amount} {symbol} à l'adresse suivante:\\\\\\\",\\\\n        seller: 'Marchand',\\\\n        receivedAmount: 'Montant reçu',\\\\n        deadline: 'Envoyer avant',\\\\n        remainingAmount: 'Montant restant',\\\\n        status: 'État',\\\\n        help: \\\\\\\"Besoin d'aide? Cliquez ici!\\\\\\\",\\\\n        txStatus: {\\\\n          complete: 'Payment terminé',\\\\n          failed: 'Échec du paiement',\\\\n          pending: 'En attente du paiement',\\\\n        },\\\\n      },\\\\n    },\\\\n    'do-GE': {\\\\n      transactionStatus: {\\\\n        statuses: {\\\\n          completed: 'WOW, Done',\\\\n          failed: 'very failing',\\\\n          pending: 'so pending',\\\\n          unknown: '?????',\\\\n        },\\\\n      },\\\\n      paymentRequest: {\\\\n        request: 'Pls send much {symbol} ({amount} {symbol}) to:',\\\\n        help: 'Such help? Click here!',\\\\n        receivedAmount: 'Received (wow thanks)',\\\\n        remainingAmount: 'Remaining (pls)',\\\\n        txStatus: {\\\\n          complete: 'Very paid',\\\\n          failed: 'Not paid :(',\\\\n          pending: 'Waiting...',\\\\n        },\\\\n      },\\\\n    },\\\\n  };\\\\n\\\\n  return (\\\\n    <LocalizationWrapper customLocales={customLocales}>\\\\n      <FailButton />\\\\n      <LabRat />\\\\n    </LocalizationWrapper>\\\\n  );\\\\n};\\\\nCustomLocales.parameters = {\\\\n  controls: { hideNoControlsWarning: true },\\\\n};\\\\n\\\",\\\"locationsMap\\\":{\\\"custom-locales\\\":{\\\"startLoc\\\":{\\\"col\\\":36,\\\"line\\\":60},\\\"endLoc\\\":{\\\"col\\\":1,\\\"line\\\":132},\\\"startBody\\\":{\\\"col\\\":36,\\\"line\\\":60},\\\"endBody\\\":{\\\"col\\\":1,\\\"line\\\":132}}}},},\\n  title: 'LocalizationProvider',\\n} as Meta;\\n\\nconst LabRat = (): React.ReactElement => (\\n  <>\\n    <TransactionStatus\\n      status={TxStatus.PENDING}\\n      amount='0.1'\\n      symbol='BTC'\\n      txURL='https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1'\\n    />\\n    <br />\\n    <PaymentRequest\\n      symbol='BTC'\\n      decimalPlaces={8}\\n      sellerName='Such Company LTD'\\n      logos={{\\n        coin: 'https://upload.wikimedia.org/wikipedia/commons/c/c5/Bitcoin_logo.svg',\\n        company: companyAsset,\\n      }}\\n      address='1BitcoinEaterAddressDontSendf59kuE'\\n      amount={{ toPay: 0.9, received: 0.2 }}\\n      transactions={[\\n        {\\n          txHash: '369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1',\\n          txUrl:\\n            'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1',\\n          amount: 0.1,\\n        },\\n        {\\n          txHash: '519f6c9581ce27e0a59f5f8e427b672087e1f2eb1aead0d66288de62ed3e9647',\\n          txUrl:\\n            'https://www.blockchain.com/btc/tx/519f6c9581ce27e0a59f5f8e427b672087e1f2eb1aead0d66288de62ed3e9647',\\n          amount: 0.1,\\n        },\\n      ]}\\n      helpUrl='https://github.com/PaulFasola/adoption/blob/master/README.md'\\n      deadline={{\\n        dateLocale: 'en-US',\\n        datetime: new Date(),\\n        humanized: true,\\n      }}\\n      status={PaymentStatus.PENDING}\\n    />\\n  </>\\n);\\n\\nexport const CustomLocales: Story = () => {\\n  const FailButton: React.FC = () => {\\n    const { switchTo } = useContext(LocalizationContext);\\n    return (\\n      <button\\n        style={{ marginBottom: '1.5rem' }}\\n        onClick={() => {\\n          switchTo('thatDoesNotExist');\\n          setTimeout(() => {\\n            alert('Check the console below, a warning is waiting for you ;)');\\n          }, 200);\\n        }}\\n      >\\n        Go thatDoesNotExist (will fail).\\n      </button>\\n    );\\n  };\\n\\n  const customLocales: Record<string, Partial<ILocalizedStrings>> = {\\n    'fr-FR': {\\n      transactionStatus: {\\n        statuses: {\\n          completed: 'Terminé',\\n          failed: 'Echec',\\n          pending: 'En attente',\\n          unknown: 'Iconnu',\\n        },\\n      },\\n      paymentRequest: {\\n        request: \\\"Merci d'envoyer {amount} {symbol} à l'adresse suivante:\\\",\\n        seller: 'Marchand',\\n        receivedAmount: 'Montant reçu',\\n        deadline: 'Envoyer avant',\\n        remainingAmount: 'Montant restant',\\n        status: 'État',\\n        help: \\\"Besoin d'aide? Cliquez ici!\\\",\\n        txStatus: {\\n          complete: 'Payment terminé',\\n          failed: 'Échec du paiement',\\n          pending: 'En attente du paiement',\\n        },\\n      },\\n    },\\n    'do-GE': {\\n      transactionStatus: {\\n        statuses: {\\n          completed: 'WOW, Done',\\n          failed: 'very failing',\\n          pending: 'so pending',\\n          unknown: '?????',\\n        },\\n      },\\n      paymentRequest: {\\n        request: 'Pls send much {symbol} ({amount} {symbol}) to:',\\n        help: 'Such help? Click here!',\\n        receivedAmount: 'Received (wow thanks)',\\n        remainingAmount: 'Remaining (pls)',\\n        txStatus: {\\n          complete: 'Very paid',\\n          failed: 'Not paid :(',\\n          pending: 'Waiting...',\\n        },\\n      },\\n    },\\n  };\\n\\n  return (\\n    <LocalizationWrapper customLocales={customLocales}>\\n      <FailButton />\\n      <LabRat />\\n    </LocalizationWrapper>\\n  );\\n};\\nCustomLocales.parameters = {\\n  controls: { hideNoControlsWarning: true },\\n};\\n\",\"locationsMap\":{\"custom-locales\":{\"startLoc\":{\"col\":36,\"line\":68},\"endLoc\":{\"col\":1,\"line\":140},\"startBody\":{\"col\":36,\"line\":68},\"endBody\":{\"col\":1,\"line\":140}}}},\"storySource\":{\"source\":\"import React, { useContext } from 'react';\\nimport { PaymentStatus } from '../../components/PaymentRequest/enums/paymentStatus';\\nimport { TransactionStatus, TxStatus } from '../../components/TransactionStatus';\\nimport { PaymentRequest } from '../../components/PaymentRequest';\\nimport { LocalizationContext } from './localizationProvider';\\nimport { ILocalizedStrings } from './ILocalizedStrings';\\nimport { LocalizationWrapper } from './localizationWrapper';\\nimport { Meta, Story } from '@storybook/react';\\n\\nimport companyAsset from '../../assets/fictiveCompany.png';\\n\\nexport default {\\n  title: 'LocalizationProvider',\\n} as Meta;\\n\\nconst LabRat = (): React.ReactElement => (\\n  <>\\n    <TransactionStatus\\n      status={TxStatus.PENDING}\\n      amount='0.1'\\n      symbol='BTC'\\n      txURL='https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1'\\n    />\\n    <br />\\n    <PaymentRequest\\n      symbol='BTC'\\n      decimalPlaces={8}\\n      sellerName='Such Company LTD'\\n      logos={{\\n        coin: 'https://upload.wikimedia.org/wikipedia/commons/c/c5/Bitcoin_logo.svg',\\n        company: companyAsset,\\n      }}\\n      address='1BitcoinEaterAddressDontSendf59kuE'\\n      amount={{ toPay: 0.9, received: 0.2 }}\\n      transactions={[\\n        {\\n          txHash: '369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1',\\n          txUrl:\\n            'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1',\\n          amount: 0.1,\\n        },\\n        {\\n          txHash: '519f6c9581ce27e0a59f5f8e427b672087e1f2eb1aead0d66288de62ed3e9647',\\n          txUrl:\\n            'https://www.blockchain.com/btc/tx/519f6c9581ce27e0a59f5f8e427b672087e1f2eb1aead0d66288de62ed3e9647',\\n          amount: 0.1,\\n        },\\n      ]}\\n      helpUrl='https://github.com/PaulFasola/adoption/blob/master/README.md'\\n      deadline={{\\n        dateLocale: 'en-US',\\n        datetime: new Date(),\\n        humanized: true,\\n      }}\\n      status={PaymentStatus.PENDING}\\n    />\\n  </>\\n);\\n\\nexport const CustomLocales: Story = () => {\\n  const FailButton: React.FC = () => {\\n    const { switchTo } = useContext(LocalizationContext);\\n    return (\\n      <button\\n        style={{ marginBottom: '1.5rem' }}\\n        onClick={() => {\\n          switchTo('thatDoesNotExist');\\n          setTimeout(() => {\\n            alert('Check the console below, a warning is waiting for you ;)');\\n          }, 200);\\n        }}\\n      >\\n        Go thatDoesNotExist (will fail).\\n      </button>\\n    );\\n  };\\n\\n  const customLocales: Record<string, Partial<ILocalizedStrings>> = {\\n    'fr-FR': {\\n      transactionStatus: {\\n        statuses: {\\n          completed: 'Terminé',\\n          failed: 'Echec',\\n          pending: 'En attente',\\n          unknown: 'Iconnu',\\n        },\\n      },\\n      paymentRequest: {\\n        request: \\\"Merci d'envoyer {amount} {symbol} à l'adresse suivante:\\\",\\n        seller: 'Marchand',\\n        receivedAmount: 'Montant reçu',\\n        deadline: 'Envoyer avant',\\n        remainingAmount: 'Montant restant',\\n        status: 'État',\\n        help: \\\"Besoin d'aide? Cliquez ici!\\\",\\n        txStatus: {\\n          complete: 'Payment terminé',\\n          failed: 'Échec du paiement',\\n          pending: 'En attente du paiement',\\n        },\\n      },\\n    },\\n    'do-GE': {\\n      transactionStatus: {\\n        statuses: {\\n          completed: 'WOW, Done',\\n          failed: 'very failing',\\n          pending: 'so pending',\\n          unknown: '?????',\\n        },\\n      },\\n      paymentRequest: {\\n        request: 'Pls send much {symbol} ({amount} {symbol}) to:',\\n        help: 'Such help? Click here!',\\n        receivedAmount: 'Received (wow thanks)',\\n        remainingAmount: 'Remaining (pls)',\\n        txStatus: {\\n          complete: 'Very paid',\\n          failed: 'Not paid :(',\\n          pending: 'Waiting...',\\n        },\\n      },\\n    },\\n  };\\n\\n  return (\\n    <LocalizationWrapper customLocales={customLocales}>\\n      <FailButton />\\n      <LabRat />\\n    </LocalizationWrapper>\\n  );\\n};\\nCustomLocales.parameters = {\\n  controls: { hideNoControlsWarning: true },\\n};\\n\",\"locationsMap\":{\"custom-locales\":{\"startLoc\":{\"col\":36,\"line\":60},\"endLoc\":{\"col\":1,\"line\":132},\"startBody\":{\"col\":36,\"line\":60},\"endBody\":{\"col\":1,\"line\":132}}}},},\n  title: 'LocalizationProvider',\n} as Meta;\n\nconst LabRat = (): React.ReactElement => (\n  <>\n    <TransactionStatus\n      status={TxStatus.PENDING}\n      amount='0.1'\n      symbol='BTC'\n      txURL='https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1'\n    />\n    <br />\n    <PaymentRequest\n      symbol='BTC'\n      decimalPlaces={8}\n      sellerName='Such Company LTD'\n      logos={{\n        coin: 'https://upload.wikimedia.org/wikipedia/commons/c/c5/Bitcoin_logo.svg',\n        company: companyAsset,\n      }}\n      address='1BitcoinEaterAddressDontSendf59kuE'\n      amount={{ toPay: 0.9, received: 0.2 }}\n      transactions={[\n        {\n          txHash: '369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1',\n          txUrl:\n            'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1',\n          amount: 0.1,\n        },\n        {\n          txHash: '519f6c9581ce27e0a59f5f8e427b672087e1f2eb1aead0d66288de62ed3e9647',\n          txUrl:\n            'https://www.blockchain.com/btc/tx/519f6c9581ce27e0a59f5f8e427b672087e1f2eb1aead0d66288de62ed3e9647',\n          amount: 0.1,\n        },\n      ]}\n      helpUrl='https://github.com/PaulFasola/adoption/blob/master/README.md'\n      deadline={{\n        dateLocale: 'en-US',\n        datetime: new Date(),\n        humanized: true,\n      }}\n      status={PaymentStatus.PENDING}\n    />\n  </>\n);\n\nexport const CustomLocales: Story = () => {\n  const FailButton: React.FC = () => {\n    const { switchTo } = useContext(LocalizationContext);\n    return (\n      <button\n        style={{ marginBottom: '1.5rem' }}\n        onClick={() => {\n          switchTo('thatDoesNotExist');\n          setTimeout(() => {\n            alert('Check the console below, a warning is waiting for you ;)');\n          }, 200);\n        }}\n      >\n        Go thatDoesNotExist (will fail).\n      </button>\n    );\n  };\n\n  const customLocales: Record<string, Partial<ILocalizedStrings>> = {\n    'fr-FR': {\n      transactionStatus: {\n        statuses: {\n          completed: 'Terminé',\n          failed: 'Echec',\n          pending: 'En attente',\n          unknown: 'Iconnu',\n        },\n      },\n      paymentRequest: {\n        request: \"Merci d'envoyer {amount} {symbol} à l'adresse suivante:\",\n        seller: 'Marchand',\n        receivedAmount: 'Montant reçu',\n        deadline: 'Envoyer avant',\n        remainingAmount: 'Montant restant',\n        status: 'État',\n        help: \"Besoin d'aide? Cliquez ici!\",\n        txStatus: {\n          complete: 'Payment terminé',\n          failed: 'Échec du paiement',\n          pending: 'En attente du paiement',\n        },\n      },\n    },\n    'do-GE': {\n      transactionStatus: {\n        statuses: {\n          completed: 'WOW, Done',\n          failed: 'very failing',\n          pending: 'so pending',\n          unknown: '?????',\n        },\n      },\n      paymentRequest: {\n        request: 'Pls send much {symbol} ({amount} {symbol}) to:',\n        help: 'Such help? Click here!',\n        receivedAmount: 'Received (wow thanks)',\n        remainingAmount: 'Remaining (pls)',\n        txStatus: {\n          complete: 'Very paid',\n          failed: 'Not paid :(',\n          pending: 'Waiting...',\n        },\n      },\n    },\n  };\n\n  return (\n    <LocalizationWrapper customLocales={customLocales}>\n      <FailButton />\n      <LabRat />\n    </LocalizationWrapper>\n  );\n};\nCustomLocales.parameters = {\n  controls: { hideNoControlsWarning: true },\n};\n",locationsMap:{"custom-locales":{startLoc:{col:36,line:76},endLoc:{col:1,line:148},startBody:{col:36,line:76},endBody:{col:1,line:148}}}}},_defineProperty(_parameters,"storySource",{source:"\n    \n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React, { useContext } from 'react';\\nimport { PaymentStatus } from '../../components/PaymentRequest/enums/paymentStatus';\\nimport { TransactionStatus, TxStatus } from '../../components/TransactionStatus';\\nimport { PaymentRequest } from '../../components/PaymentRequest';\\nimport { LocalizationContext } from './localizationProvider';\\nimport { ILocalizedStrings } from './ILocalizedStrings';\\nimport { LocalizationWrapper } from './localizationWrapper';\\nimport { Meta, Story } from '@storybook/react';\\n\\nimport companyAsset from '../../assets/fictiveCompany.png';\\n\\nexport default {\\n  title: 'LocalizationProvider',\\n} as Meta;\\n\\nconst LabRat = (): React.ReactElement => (\\n  <>\\n    <TransactionStatus\\n      status={TxStatus.PENDING}\\n      amount='0.1'\\n      symbol='BTC'\\n      txURL='https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1'\\n    />\\n    <br />\\n    <PaymentRequest\\n      symbol='BTC'\\n      decimalPlaces={8}\\n      sellerName='Such Company LTD'\\n      logos={{\\n        coin: 'https://upload.wikimedia.org/wikipedia/commons/c/c5/Bitcoin_logo.svg',\\n        company: companyAsset,\\n      }}\\n      address='1BitcoinEaterAddressDontSendf59kuE'\\n      amount={{ toPay: 0.9, received: 0.2 }}\\n      transactions={[\\n        {\\n          txHash: '369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1',\\n          txUrl:\\n            'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1',\\n          amount: 0.1,\\n        },\\n        {\\n          txHash: '519f6c9581ce27e0a59f5f8e427b672087e1f2eb1aead0d66288de62ed3e9647',\\n          txUrl:\\n            'https://www.blockchain.com/btc/tx/519f6c9581ce27e0a59f5f8e427b672087e1f2eb1aead0d66288de62ed3e9647',\\n          amount: 0.1,\\n        },\\n      ]}\\n      helpUrl='https://github.com/PaulFasola/adoption/blob/master/README.md'\\n      deadline={{\\n        dateLocale: 'en-US',\\n        datetime: new Date(),\\n        humanized: true,\\n      }}\\n      status={PaymentStatus.PENDING}\\n    />\\n  </>\\n);\\n\\nexport const CustomLocales: Story = () => {\\n  const FailButton: React.FC = () => {\\n    const { switchTo } = useContext(LocalizationContext);\\n    return (\\n      <button\\n        style={{ marginBottom: '1.5rem' }}\\n        onClick={() => {\\n          switchTo('thatDoesNotExist');\\n          setTimeout(() => {\\n            alert('Check the console below, a warning is waiting for you ;)');\\n          }, 200);\\n        }}\\n      >\\n        Go thatDoesNotExist (will fail).\\n      </button>\\n    );\\n  };\\n\\n  const customLocales: Record<string, Partial<ILocalizedStrings>> = {\\n    'fr-FR': {\\n      transactionStatus: {\\n        statuses: {\\n          completed: 'Terminé',\\n          failed: 'Echec',\\n          pending: 'En attente',\\n          unknown: 'Iconnu',\\n        },\\n      },\\n      paymentRequest: {\\n        request: \\\"Merci d'envoyer {amount} {symbol} à l'adresse suivante:\\\",\\n        seller: 'Marchand',\\n        receivedAmount: 'Montant reçu',\\n        deadline: 'Envoyer avant',\\n        remainingAmount: 'Montant restant',\\n        status: 'État',\\n        help: \\\"Besoin d'aide? Cliquez ici!\\\",\\n        txStatus: {\\n          complete: 'Payment terminé',\\n          failed: 'Échec du paiement',\\n          pending: 'En attente du paiement',\\n        },\\n      },\\n    },\\n    'do-GE': {\\n      transactionStatus: {\\n        statuses: {\\n          completed: 'WOW, Done',\\n          failed: 'very failing',\\n          pending: 'so pending',\\n          unknown: '?????',\\n        },\\n      },\\n      paymentRequest: {\\n        request: 'Pls send much {symbol} ({amount} {symbol}) to:',\\n        help: 'Such help? Click here!',\\n        receivedAmount: 'Received (wow thanks)',\\n        remainingAmount: 'Remaining (pls)',\\n        txStatus: {\\n          complete: 'Very paid',\\n          failed: 'Not paid :(',\\n          pending: 'Waiting...',\\n        },\\n      },\\n    },\\n  };\\n\\n  return (\\n    <LocalizationWrapper customLocales={customLocales}>\\n      <FailButton />\\n      <LabRat />\\n    </LocalizationWrapper>\\n  );\\n};\\nCustomLocales.parameters = {\\n  controls: { hideNoControlsWarning: true },\\n};\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"CustomLocales\":{\"startLoc\":{\"col\":36,\"line\":60},\"endLoc\":{\"col\":1,\"line\":132},\"startBody\":{\"col\":36,\"line\":60},\"endBody\":{\"col\":1,\"line\":132}}};\n    \nimport React, { useContext } from 'react';\nimport { PaymentStatus } from '../../components/PaymentRequest/enums/paymentStatus';\nimport { TransactionStatus, TxStatus } from '../../components/TransactionStatus';\nimport { PaymentRequest } from '../../components/PaymentRequest';\nimport { LocalizationContext } from './localizationProvider';\nimport { ILocalizedStrings } from './ILocalizedStrings';\nimport { LocalizationWrapper } from './localizationWrapper';\nimport { Meta, Story } from '@storybook/react';\n\nimport companyAsset from '../../assets/fictiveCompany.png';\n\nexport default {parameters: {\"storySource\":{\"source\":\"import React, { useContext } from 'react';\\nimport { PaymentStatus } from '../../components/PaymentRequest/enums/paymentStatus';\\nimport { TransactionStatus, TxStatus } from '../../components/TransactionStatus';\\nimport { PaymentRequest } from '../../components/PaymentRequest';\\nimport { LocalizationContext } from './localizationProvider';\\nimport { ILocalizedStrings } from './ILocalizedStrings';\\nimport { LocalizationWrapper } from './localizationWrapper';\\nimport { Meta, Story } from '@storybook/react';\\n\\nimport companyAsset from '../../assets/fictiveCompany.png';\\n\\nexport default {\\n  title: 'LocalizationProvider',\\n} as Meta;\\n\\nconst LabRat = (): React.ReactElement => (\\n  <>\\n    <TransactionStatus\\n      status={TxStatus.PENDING}\\n      amount='0.1'\\n      symbol='BTC'\\n      txURL='https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1'\\n    />\\n    <br />\\n    <PaymentRequest\\n      symbol='BTC'\\n      decimalPlaces={8}\\n      sellerName='Such Company LTD'\\n      logos={{\\n        coin: 'https://upload.wikimedia.org/wikipedia/commons/c/c5/Bitcoin_logo.svg',\\n        company: companyAsset,\\n      }}\\n      address='1BitcoinEaterAddressDontSendf59kuE'\\n      amount={{ toPay: 0.9, received: 0.2 }}\\n      transactions={[\\n        {\\n          txHash: '369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1',\\n          txUrl:\\n            'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1',\\n          amount: 0.1,\\n        },\\n        {\\n          txHash: '519f6c9581ce27e0a59f5f8e427b672087e1f2eb1aead0d66288de62ed3e9647',\\n          txUrl:\\n            'https://www.blockchain.com/btc/tx/519f6c9581ce27e0a59f5f8e427b672087e1f2eb1aead0d66288de62ed3e9647',\\n          amount: 0.1,\\n        },\\n      ]}\\n      helpUrl='https://github.com/PaulFasola/adoption/blob/master/README.md'\\n      deadline={{\\n        dateLocale: 'en-US',\\n        datetime: new Date(),\\n        humanized: true,\\n      }}\\n      status={PaymentStatus.PENDING}\\n    />\\n  </>\\n);\\n\\nexport const CustomLocales: Story = () => {\\n  const FailButton: React.FC = () => {\\n    const { switchTo } = useContext(LocalizationContext);\\n    return (\\n      <button\\n        style={{ marginBottom: '1.5rem' }}\\n        onClick={() => {\\n          switchTo('thatDoesNotExist');\\n          setTimeout(() => {\\n            alert('Check the console below, a warning is waiting for you ;)');\\n          }, 200);\\n        }}\\n      >\\n        Go thatDoesNotExist (will fail).\\n      </button>\\n    );\\n  };\\n\\n  const customLocales: Record<string, Partial<ILocalizedStrings>> = {\\n    'fr-FR': {\\n      transactionStatus: {\\n        statuses: {\\n          completed: 'Terminé',\\n          failed: 'Echec',\\n          pending: 'En attente',\\n          unknown: 'Iconnu',\\n        },\\n      },\\n      paymentRequest: {\\n        request: \\\"Merci d'envoyer {amount} {symbol} à l'adresse suivante:\\\",\\n        seller: 'Marchand',\\n        receivedAmount: 'Montant reçu',\\n        deadline: 'Envoyer avant',\\n        remainingAmount: 'Montant restant',\\n        status: 'État',\\n        help: \\\"Besoin d'aide? Cliquez ici!\\\",\\n        txStatus: {\\n          complete: 'Payment terminé',\\n          failed: 'Échec du paiement',\\n          pending: 'En attente du paiement',\\n        },\\n      },\\n    },\\n    'do-GE': {\\n      transactionStatus: {\\n        statuses: {\\n          completed: 'WOW, Done',\\n          failed: 'very failing',\\n          pending: 'so pending',\\n          unknown: '?????',\\n        },\\n      },\\n      paymentRequest: {\\n        request: 'Pls send much {symbol} ({amount} {symbol}) to:',\\n        help: 'Such help? Click here!',\\n        receivedAmount: 'Received (wow thanks)',\\n        remainingAmount: 'Remaining (pls)',\\n        txStatus: {\\n          complete: 'Very paid',\\n          failed: 'Not paid :(',\\n          pending: 'Waiting...',\\n        },\\n      },\\n    },\\n  };\\n\\n  return (\\n    <LocalizationWrapper customLocales={customLocales}>\\n      <FailButton />\\n      <LabRat />\\n    </LocalizationWrapper>\\n  );\\n};\\nCustomLocales.parameters = {\\n  controls: { hideNoControlsWarning: true },\\n};\\n\",\"locationsMap\":{\"custom-locales\":{\"startLoc\":{\"col\":36,\"line\":60},\"endLoc\":{\"col\":1,\"line\":132},\"startBody\":{\"col\":36,\"line\":60},\"endBody\":{\"col\":1,\"line\":132}}}},},\n  title: 'LocalizationProvider',\n} as Meta;\n\nconst LabRat = (): React.ReactElement => (\n  <>\n    <TransactionStatus\n      status={TxStatus.PENDING}\n      amount='0.1'\n      symbol='BTC'\n      txURL='https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1'\n    />\n    <br />\n    <PaymentRequest\n      symbol='BTC'\n      decimalPlaces={8}\n      sellerName='Such Company LTD'\n      logos={{\n        coin: 'https://upload.wikimedia.org/wikipedia/commons/c/c5/Bitcoin_logo.svg',\n        company: companyAsset,\n      }}\n      address='1BitcoinEaterAddressDontSendf59kuE'\n      amount={{ toPay: 0.9, received: 0.2 }}\n      transactions={[\n        {\n          txHash: '369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1',\n          txUrl:\n            'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1',\n          amount: 0.1,\n        },\n        {\n          txHash: '519f6c9581ce27e0a59f5f8e427b672087e1f2eb1aead0d66288de62ed3e9647',\n          txUrl:\n            'https://www.blockchain.com/btc/tx/519f6c9581ce27e0a59f5f8e427b672087e1f2eb1aead0d66288de62ed3e9647',\n          amount: 0.1,\n        },\n      ]}\n      helpUrl='https://github.com/PaulFasola/adoption/blob/master/README.md'\n      deadline={{\n        dateLocale: 'en-US',\n        datetime: new Date(),\n        humanized: true,\n      }}\n      status={PaymentStatus.PENDING}\n    />\n  </>\n);\n\nexport const CustomLocales: Story = () => {\n  const FailButton: React.FC = () => {\n    const { switchTo } = useContext(LocalizationContext);\n    return (\n      <button\n        style={{ marginBottom: '1.5rem' }}\n        onClick={() => {\n          switchTo('thatDoesNotExist');\n          setTimeout(() => {\n            alert('Check the console below, a warning is waiting for you ;)');\n          }, 200);\n        }}\n      >\n        Go thatDoesNotExist (will fail).\n      </button>\n    );\n  };\n\n  const customLocales: Record<string, Partial<ILocalizedStrings>> = {\n    'fr-FR': {\n      transactionStatus: {\n        statuses: {\n          completed: 'Terminé',\n          failed: 'Echec',\n          pending: 'En attente',\n          unknown: 'Iconnu',\n        },\n      },\n      paymentRequest: {\n        request: \"Merci d'envoyer {amount} {symbol} à l'adresse suivante:\",\n        seller: 'Marchand',\n        receivedAmount: 'Montant reçu',\n        deadline: 'Envoyer avant',\n        remainingAmount: 'Montant restant',\n        status: 'État',\n        help: \"Besoin d'aide? Cliquez ici!\",\n        txStatus: {\n          complete: 'Payment terminé',\n          failed: 'Échec du paiement',\n          pending: 'En attente du paiement',\n        },\n      },\n    },\n    'do-GE': {\n      transactionStatus: {\n        statuses: {\n          completed: 'WOW, Done',\n          failed: 'very failing',\n          pending: 'so pending',\n          unknown: '?????',\n        },\n      },\n      paymentRequest: {\n        request: 'Pls send much {symbol} ({amount} {symbol}) to:',\n        help: 'Such help? Click here!',\n        receivedAmount: 'Received (wow thanks)',\n        remainingAmount: 'Remaining (pls)',\n        txStatus: {\n          complete: 'Very paid',\n          failed: 'Not paid :(',\n          pending: 'Waiting...',\n        },\n      },\n    },\n  };\n\n  return (\n    <LocalizationWrapper customLocales={customLocales}>\n      <FailButton />\n      <LabRat />\n    </LocalizationWrapper>\n  );\n};\nCustomLocales.parameters = {\n  controls: { hideNoControlsWarning: true },\n};\n",locationsMap:{"custom-locales":{startLoc:{col:36,line:68},endLoc:{col:1,line:140},startBody:{col:36,line:68},endBody:{col:1,line:140}}}}),_defineProperty(_parameters,"storySource",{source:"import React, { useContext } from 'react';\nimport { PaymentStatus } from '../../components/PaymentRequest/enums/paymentStatus';\nimport { TransactionStatus, TxStatus } from '../../components/TransactionStatus';\nimport { PaymentRequest } from '../../components/PaymentRequest';\nimport { LocalizationContext } from './localizationProvider';\nimport { ILocalizedStrings } from './ILocalizedStrings';\nimport { LocalizationWrapper } from './localizationWrapper';\nimport { Meta, Story } from '@storybook/react';\n\nimport companyAsset from '../../assets/fictiveCompany.png';\n\nexport default {\n  title: 'LocalizationProvider',\n} as Meta;\n\nconst LabRat = (): React.ReactElement => (\n  <>\n    <TransactionStatus\n      status={TxStatus.PENDING}\n      amount='0.1'\n      symbol='BTC'\n      txURL='https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1'\n    />\n    <br />\n    <PaymentRequest\n      symbol='BTC'\n      decimalPlaces={8}\n      sellerName='Such Company LTD'\n      logos={{\n        coin: 'https://upload.wikimedia.org/wikipedia/commons/c/c5/Bitcoin_logo.svg',\n        company: companyAsset,\n      }}\n      address='1BitcoinEaterAddressDontSendf59kuE'\n      amount={{ toPay: 0.9, received: 0.2 }}\n      transactions={[\n        {\n          txHash: '369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1',\n          txUrl:\n            'https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1',\n          amount: 0.1,\n        },\n        {\n          txHash: '519f6c9581ce27e0a59f5f8e427b672087e1f2eb1aead0d66288de62ed3e9647',\n          txUrl:\n            'https://www.blockchain.com/btc/tx/519f6c9581ce27e0a59f5f8e427b672087e1f2eb1aead0d66288de62ed3e9647',\n          amount: 0.1,\n        },\n      ]}\n      helpUrl='https://github.com/PaulFasola/adoption/blob/master/README.md'\n      deadline={{\n        dateLocale: 'en-US',\n        datetime: new Date(),\n        humanized: true,\n      }}\n      status={PaymentStatus.PENDING}\n    />\n  </>\n);\n\nexport const CustomLocales: Story = () => {\n  const FailButton: React.FC = () => {\n    const { switchTo } = useContext(LocalizationContext);\n    return (\n      <button\n        style={{ marginBottom: '1.5rem' }}\n        onClick={() => {\n          switchTo('thatDoesNotExist');\n          setTimeout(() => {\n            alert('Check the console below, a warning is waiting for you ;)');\n          }, 200);\n        }}\n      >\n        Go thatDoesNotExist (will fail).\n      </button>\n    );\n  };\n\n  const customLocales: Record<string, Partial<ILocalizedStrings>> = {\n    'fr-FR': {\n      transactionStatus: {\n        statuses: {\n          completed: 'Terminé',\n          failed: 'Echec',\n          pending: 'En attente',\n          unknown: 'Iconnu',\n        },\n      },\n      paymentRequest: {\n        request: \"Merci d'envoyer {amount} {symbol} à l'adresse suivante:\",\n        seller: 'Marchand',\n        receivedAmount: 'Montant reçu',\n        deadline: 'Envoyer avant',\n        remainingAmount: 'Montant restant',\n        status: 'État',\n        help: \"Besoin d'aide? Cliquez ici!\",\n        txStatus: {\n          complete: 'Payment terminé',\n          failed: 'Échec du paiement',\n          pending: 'En attente du paiement',\n        },\n      },\n    },\n    'do-GE': {\n      transactionStatus: {\n        statuses: {\n          completed: 'WOW, Done',\n          failed: 'very failing',\n          pending: 'so pending',\n          unknown: '?????',\n        },\n      },\n      paymentRequest: {\n        request: 'Pls send much {symbol} ({amount} {symbol}) to:',\n        help: 'Such help? Click here!',\n        receivedAmount: 'Received (wow thanks)',\n        remainingAmount: 'Remaining (pls)',\n        txStatus: {\n          complete: 'Very paid',\n          failed: 'Not paid :(',\n          pending: 'Waiting...',\n        },\n      },\n    },\n  };\n\n  return (\n    <LocalizationWrapper customLocales={customLocales}>\n      <FailButton />\n      <LabRat />\n    </LocalizationWrapper>\n  );\n};\nCustomLocales.parameters = {\n  controls: { hideNoControlsWarning: true },\n};\n",locationsMap:{"custom-locales":{startLoc:{col:36,line:60},endLoc:{col:1,line:132},startBody:{col:36,line:60},endBody:{col:1,line:132}}}}),_parameters),title:"LocalizationProvider"};var localizationProvider_stories_LabRat=function LabRat(){return Object(jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[Object(jsx_runtime.jsx)(TransactionStatus.a,{status:TransactionStatus.b.PENDING,amount:"0.1",symbol:"BTC",txURL:"https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1"}),Object(jsx_runtime.jsx)("br",{}),Object(jsx_runtime.jsx)(PaymentRequest.a,{symbol:"BTC",decimalPlaces:8,sellerName:"Such Company LTD",logos:{coin:"https://upload.wikimedia.org/wikipedia/commons/c/c5/Bitcoin_logo.svg",company:fictiveCompany.a},address:"1BitcoinEaterAddressDontSendf59kuE",amount:{toPay:.9,received:.2},transactions:[{txHash:"369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1",txUrl:"https://www.blockchain.com/btc/tx/369d241af595fc253479abe394e2f21fda05820a0416942f63266dd793035cf1",amount:.1},{txHash:"519f6c9581ce27e0a59f5f8e427b672087e1f2eb1aead0d66288de62ed3e9647",txUrl:"https://www.blockchain.com/btc/tx/519f6c9581ce27e0a59f5f8e427b672087e1f2eb1aead0d66288de62ed3e9647",amount:.1}],helpUrl:"https://github.com/PaulFasola/adoption/blob/master/README.md",deadline:{dateLocale:"en-US",datetime:new Date,humanized:!0},status:paymentStatus.a.PENDING})]})},localizationProvider_stories_CustomLocales=function CustomLocales(){var FailButton=function FailButton(){var switchTo=Object(react.useContext)(localizationProvider.a).switchTo;return Object(jsx_runtime.jsx)("button",{style:{marginBottom:"1.5rem"},onClick:function onClick(){switchTo("thatDoesNotExist"),setTimeout((function(){alert("Check the console below, a warning is waiting for you ;)")}),200)},children:"Go thatDoesNotExist (will fail)."})};return Object(jsx_runtime.jsxs)(localizationWrapper_LocalizationWrapper,{customLocales:{"fr-FR":{transactionStatus:{statuses:{completed:"Terminé",failed:"Echec",pending:"En attente",unknown:"Iconnu"}},paymentRequest:{request:"Merci d'envoyer {amount} {symbol} à l'adresse suivante:",seller:"Marchand",receivedAmount:"Montant reçu",deadline:"Envoyer avant",remainingAmount:"Montant restant",status:"État",help:"Besoin d'aide? Cliquez ici!",txStatus:{complete:"Payment terminé",failed:"Échec du paiement",pending:"En attente du paiement"}}},"do-GE":{transactionStatus:{statuses:{completed:"WOW, Done",failed:"very failing",pending:"so pending",unknown:"?????"}},paymentRequest:{request:"Pls send much {symbol} ({amount} {symbol}) to:",help:"Such help? Click here!",receivedAmount:"Received (wow thanks)",remainingAmount:"Remaining (pls)",txStatus:{complete:"Very paid",failed:"Not paid :(",pending:"Waiting..."}}}},children:[Object(jsx_runtime.jsx)(FailButton,{}),Object(jsx_runtime.jsx)(localizationProvider_stories_LabRat,{})]})};localizationProvider_stories_CustomLocales.displayName="CustomLocales",localizationProvider_stories_CustomLocales.parameters={controls:{hideNoControlsWarning:!0}}},122:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"c",(function(){return defaultTheme})),__webpack_require__.d(__webpack_exports__,"a",(function(){return ThemeContext})),__webpack_require__.d(__webpack_exports__,"b",(function(){return ThemeProvider}));__webpack_require__(13),__webpack_require__(12),__webpack_require__(50),__webpack_require__(17),__webpack_require__(39),__webpack_require__(40),__webpack_require__(9),__webpack_require__(86),__webpack_require__(27),__webpack_require__(28),__webpack_require__(14),__webpack_require__(54),__webpack_require__(32),__webpack_require__(30),__webpack_require__(34),__webpack_require__(25),__webpack_require__(65);var react__WEBPACK_IMPORTED_MODULE_17__=__webpack_require__(0),react__WEBPACK_IMPORTED_MODULE_17___default=__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_17__),styled_components__WEBPACK_IMPORTED_MODULE_18__=__webpack_require__(7),_defaultThemes__WEBPACK_IMPORTED_MODULE_19__=__webpack_require__(168),_utils_mergeDeep__WEBPACK_IMPORTED_MODULE_20__=__webpack_require__(260),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_21__=__webpack_require__(1);function _slicedToArray(arr,i){return function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}(arr)||function _iterableToArrayLimit(arr,i){if("undefined"==typeof Symbol||!(Symbol.iterator in Object(arr)))return;var _arr=[],_n=!0,_d=!1,_e=void 0;try{for(var _s,_i=arr[Symbol.iterator]();!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}(arr,i)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr,i)||function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}var defaultTheme=function getDefaultTheme(){return{name:"light",palette:_defaultThemes__WEBPACK_IMPORTED_MODULE_19__.a.light}}(),ThemeContext=react__WEBPACK_IMPORTED_MODULE_17___default.a.createContext({currentTheme:defaultTheme,switchTo:function switchTo(){}}),ThemeProvider=function ThemeProvider(_ref){var customThemes=_ref.customThemes,children=_ref.children,_useState2=_slicedToArray(Object(react__WEBPACK_IMPORTED_MODULE_17__.useState)(!1),2),themesLoaded=_useState2[0],setThemesLoaded=_useState2[1],_useState4=_slicedToArray(Object(react__WEBPACK_IMPORTED_MODULE_17__.useState)(_defaultThemes__WEBPACK_IMPORTED_MODULE_19__.a),2),availableThemes=_useState4[0],setAvailableThemes=_useState4[1],_useState6=_slicedToArray(Object(react__WEBPACK_IMPORTED_MODULE_17__.useState)(defaultTheme),2),currentTheme=_useState6[0],setCurrentTheme=_useState6[1],setViableThemeOrDefault=Object(react__WEBPACK_IMPORTED_MODULE_17__.useCallback)((function(themeName){var requestedTheme=availableThemes[themeName],theme=defaultTheme;return requestedTheme?theme={name:themeName,palette:requestedTheme}:console.warn('[WARN] Adoption Theme - requested theme "'.concat(themeName,'" was not found. Defaulting to "').concat(theme.name,"\" preset.\n\nAdd your theme to 'customThemes' property on <ThemeProvider>.\nAvailable themes: ").concat(Object.keys(availableThemes).join(", "))),setCurrentTheme(theme),[theme.name,theme.palette]}),[availableThemes]);Object(react__WEBPACK_IMPORTED_MODULE_17__.useEffect)((function(){if(!customThemes||0===Object.keys(customThemes).length)return setThemesLoaded(!0);var filledCustomThemes={};Object.keys(customThemes).forEach((function(key){var viableTheme=Object(_utils_mergeDeep__WEBPACK_IMPORTED_MODULE_20__.a)(defaultTheme.palette,customThemes[key]);filledCustomThemes[key]=viableTheme})),setAvailableThemes((function(prevState){return Object.assign({},prevState,filledCustomThemes)})),setThemesLoaded(!0)}),[customThemes]),Object(react__WEBPACK_IMPORTED_MODULE_17__.useEffect)((function(){var _localStorage$getItem;if(themesLoaded){var theme=null!==(_localStorage$getItem=localStorage.getItem("adoption-theme"))&&void 0!==_localStorage$getItem?_localStorage$getItem:"light";setViableThemeOrDefault(theme)}}),[themesLoaded]);return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_21__.jsx)(ThemeContext.Provider,{value:{currentTheme:currentTheme,switchTo:function switchTo(nextTheme){var name=_slicedToArray(setViableThemeOrDefault(nextTheme),1)[0];localStorage.setItem("adoption-theme",name)}},children:Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_21__.jsx)(styled_components__WEBPACK_IMPORTED_MODULE_18__.a,{theme:currentTheme.palette,children:children})})};ThemeProvider.displayName="ThemeProvider";try{ThemeProvider.displayName="ThemeProvider",ThemeProvider.__docgenInfo={description:"",displayName:"ThemeProvider",props:{customThemes:{defaultValue:null,description:"",name:"customThemes",required:!1,type:{name:"Record<string, Partial<ITheme>>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/providers/theme/themeProvider.tsx#ThemeProvider"]={docgenInfo:ThemeProvider.__docgenInfo,name:"ThemeProvider",path:"src/providers/theme/themeProvider.tsx#ThemeProvider"})}catch(__react_docgen_typescript_loader_error){}},123:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return LocalizationContext})),__webpack_require__.d(__webpack_exports__,"b",(function(){return LocalizationProvider}));__webpack_require__(13),__webpack_require__(50),__webpack_require__(17),__webpack_require__(39),__webpack_require__(40),__webpack_require__(9),__webpack_require__(86),__webpack_require__(27),__webpack_require__(28),__webpack_require__(14),__webpack_require__(54),__webpack_require__(32),__webpack_require__(30),__webpack_require__(34),__webpack_require__(25),__webpack_require__(12),__webpack_require__(65),__webpack_require__(105);var react__WEBPACK_IMPORTED_MODULE_18__=__webpack_require__(0),react__WEBPACK_IMPORTED_MODULE_18___default=__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_18__),_utils_mergeDeep__WEBPACK_IMPORTED_MODULE_19__=__webpack_require__(260),_defaultLocalization__WEBPACK_IMPORTED_MODULE_20__=__webpack_require__(89),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_21__=__webpack_require__(1);function _slicedToArray(arr,i){return function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}(arr)||function _iterableToArrayLimit(arr,i){if("undefined"==typeof Symbol||!(Symbol.iterator in Object(arr)))return;var _arr=[],_n=!0,_d=!1,_e=void 0;try{for(var _s,_i=arr[Symbol.iterator]();!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}(arr,i)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr,i)||function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}var LocalizationContext=react__WEBPACK_IMPORTED_MODULE_18___default.a.createContext({currentlocalization:_defaultLocalization__WEBPACK_IMPORTED_MODULE_20__.b,switchTo:function switchTo(){}}),LocalizationProvider=function LocalizationProvider(_ref){var customLocales=_ref.customLocales,children=_ref.children,_useState2=_slicedToArray(Object(react__WEBPACK_IMPORTED_MODULE_18__.useState)(!1),2),localesLoaded=_useState2[0],setLocalesLoaded=_useState2[1],_useState4=_slicedToArray(Object(react__WEBPACK_IMPORTED_MODULE_18__.useState)(function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}({},_defaultLocalization__WEBPACK_IMPORTED_MODULE_20__.a,_defaultLocalization__WEBPACK_IMPORTED_MODULE_20__.b.strings)),2),availableLocales=_useState4[0],setAvailableLocales=_useState4[1],_useState7=_slicedToArray(Object(react__WEBPACK_IMPORTED_MODULE_18__.useState)(_defaultLocalization__WEBPACK_IMPORTED_MODULE_20__.b),2),currentlocalization=_useState7[0],setCurrentLocalization=_useState7[1],setViableLocaleOrDefault=Object(react__WEBPACK_IMPORTED_MODULE_18__.useCallback)((function(locale){var warn=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],requestedStrings=availableLocales[locale],viableLocalization=_defaultLocalization__WEBPACK_IMPORTED_MODULE_20__.b;return requestedStrings?viableLocalization={locale:locale,strings:requestedStrings}:(warn&&console.warn('[WARN] Adoption Localization - requested locale "'.concat(locale,'" was not found. Defaulting to "').concat(_defaultLocalization__WEBPACK_IMPORTED_MODULE_20__.a,"\" preset.\n\nAdd your locale to 'customLocales' property on <LocalizationProvider>.\nAvailable locales: ").concat(Object.keys(availableLocales).join(", "))),locale=_defaultLocalization__WEBPACK_IMPORTED_MODULE_20__.a),setCurrentLocalization(viableLocalization),[locale,requestedStrings]}),[availableLocales]);Object(react__WEBPACK_IMPORTED_MODULE_18__.useEffect)((function(){if(!customLocales||0===Object.keys(customLocales).length)return setLocalesLoaded(!0);var filledCustomLocales={};Object.keys(customLocales).forEach((function(key){var viableLocale=Object(_utils_mergeDeep__WEBPACK_IMPORTED_MODULE_19__.a)(_defaultLocalization__WEBPACK_IMPORTED_MODULE_20__.b.strings,customLocales[key]);filledCustomLocales[key]=viableLocale})),setAvailableLocales((function(prevState){return Object.assign({},prevState,filledCustomLocales)})),setLocalesLoaded(!0)}),[customLocales]),Object(react__WEBPACK_IMPORTED_MODULE_18__.useEffect)((function(){var _locale;if(localesLoaded){var warn=!0,locale=localStorage.getItem("adoption-locale");locale||(locale=navigator.language||navigator.userLanguage,warn=!1),setViableLocaleOrDefault(null!==(_locale=locale)&&void 0!==_locale?_locale:_defaultLocalization__WEBPACK_IMPORTED_MODULE_20__.a,warn)}}),[localesLoaded]);return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_21__.jsx)(LocalizationContext.Provider,{value:{currentlocalization:currentlocalization,switchTo:function switchTo(nextLocale){var name=_slicedToArray(setViableLocaleOrDefault(nextLocale),1)[0];localStorage.setItem("adoption-locale",name)}},children:children})};LocalizationProvider.displayName="LocalizationProvider";try{LocalizationProvider.displayName="LocalizationProvider",LocalizationProvider.__docgenInfo={description:"",displayName:"LocalizationProvider",props:{customLocales:{defaultValue:null,description:"",name:"customLocales",required:!1,type:{name:"Record<string, Partial<ILocalizedStrings>>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/providers/localization/localizationProvider.tsx#LocalizationProvider"]={docgenInfo:LocalizationProvider.__docgenInfo,name:"LocalizationProvider",path:"src/providers/localization/localizationProvider.tsx#LocalizationProvider"})}catch(__react_docgen_typescript_loader_error){}},132:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return useLocale}));var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(0),_providers_localization_localizationProvider__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(123),useLocale=function useLocale(){return Object(react__WEBPACK_IMPORTED_MODULE_0__.useContext)(_providers_localization_localizationProvider__WEBPACK_IMPORTED_MODULE_1__.a).currentlocalization}},145:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return ThemeWrapper}));__webpack_require__(13),__webpack_require__(17),__webpack_require__(12),__webpack_require__(15),__webpack_require__(14),__webpack_require__(60),__webpack_require__(106),__webpack_require__(86),__webpack_require__(27),__webpack_require__(28),__webpack_require__(54),__webpack_require__(32),__webpack_require__(30),__webpack_require__(34),__webpack_require__(65),__webpack_require__(25);var react__WEBPACK_IMPORTED_MODULE_16__=__webpack_require__(0),_themeProvider__WEBPACK_IMPORTED_MODULE_17__=__webpack_require__(122),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_18__=__webpack_require__(1);function _toConsumableArray(arr){return function _arrayWithoutHoles(arr){if(Array.isArray(arr))return _arrayLikeToArray(arr)}(arr)||function _iterableToArray(iter){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(iter))return Array.from(iter)}(arr)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr)||function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}var ThemeWrapper=function ThemeWrapper(_ref){var customThemes=_ref.customThemes,children=_ref.children,Wrapper=function Wrapper(_ref2){var customThemes=_ref2.customThemes,children=_ref2.children,_useContext=Object(react__WEBPACK_IMPORTED_MODULE_16__.useContext)(_themeProvider__WEBPACK_IMPORTED_MODULE_17__.a),currentTheme=_useContext.currentTheme,switchTo=_useContext.switchTo,availableThemes=[].concat(_toConsumableArray(Object.keys(null!=customThemes?customThemes:[])),["light","dark"]);return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_18__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_18__.Fragment,{children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_18__.jsxs)("div",{style:{marginBottom:"1rem"},children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_18__.jsxs)("p",{children:["Theme is ",Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_18__.jsx)("b",{children:currentTheme.name}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_18__.jsx)("br",{}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_18__.jsx)("small",{children:"It's saved into your browser's localStorage, so this theme will persist if you refresh the page."})]}),availableThemes.map((function(key,i){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_18__.jsxs)("button",{style:{margin:"0 0.2rem"},onClick:function onClick(){return switchTo(key)},children:["Go ",key]},i.toString())}))]}),children]})};return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_18__.jsx)(_themeProvider__WEBPACK_IMPORTED_MODULE_17__.b,{customThemes:customThemes,children:Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_18__.jsx)(Wrapper,{customThemes:customThemes,children:children})})};ThemeWrapper.displayName="ThemeWrapper";try{ThemeWrapper.displayName="ThemeWrapper",ThemeWrapper.__docgenInfo={description:"",displayName:"ThemeWrapper",props:{customThemes:{defaultValue:null,description:"",name:"customThemes",required:!1,type:{name:"Record<string, Partial<ITheme>>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/providers/theme/themeWrapper.tsx#ThemeWrapper"]={docgenInfo:ThemeWrapper.__docgenInfo,name:"ThemeWrapper",path:"src/providers/theme/themeWrapper.tsx#ThemeWrapper"})}catch(__react_docgen_typescript_loader_error){}},146:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_exports__.a=__webpack_require__.p+"static/media/fictiveCompany.6ff5374a.png"},147:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"c",(function(){return stroke})),__webpack_require__.d(__webpack_exports__,"b",(function(){return infiniteProgress})),__webpack_require__.d(__webpack_exports__,"a",(function(){return finiteProgress}));__webpack_require__(25),__webpack_require__(94),__webpack_require__(85);var _templateObject,_templateObject2,_templateObject3,_templateObject4,styled_components__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(7);function _taggedTemplateLiteral(strings,raw){return raw||(raw=strings.slice(0)),Object.freeze(Object.defineProperties(strings,{raw:{value:Object.freeze(raw)}}))}var stroke=Object(styled_components__WEBPACK_IMPORTED_MODULE_3__.d)(_templateObject||(_templateObject=_taggedTemplateLiteral(["\n\t100% {\n\t\tstroke-dashoffset: 0;\n\t}\n"]))),infiniteProgress=(Object(styled_components__WEBPACK_IMPORTED_MODULE_3__.d)(_templateObject2||(_templateObject2=_taggedTemplateLiteral(["\n\t0%, 100% {\n\t\ttransform: none;\n\t}\n\n\t50% {\n\t\ttransform: scale3d(1.1, 1.1, 1);\n\t}\n"]))),Object(styled_components__WEBPACK_IMPORTED_MODULE_3__.d)(_templateObject3||(_templateObject3=_taggedTemplateLiteral(["\n\t0% { left: -200%; right: 100%; }\n  \t50% { left: 107%; right: -8%; }\n  \t100% { left: 107%; right: -8%; }\n"])))),finiteProgress=Object(styled_components__WEBPACK_IMPORTED_MODULE_3__.d)(_templateObject4||(_templateObject4=_taggedTemplateLiteral(["\n\t0% {width: 0%; left: 0; right: 0 }\n\t50% { width: 100%; left: 0; right: 0 }\n\t100% { width: 100%; left: 0; right: 0 }\n"])))},168:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return defaultThemes}));var defaultThemes={dark:{primary:{backgroundColor:"#121212",color:"#ffffff",rule:"rgba(255, 255, 255, .5)",boxShadow:"0 3px 28px rgba(255, 255, 255, .1)",borderColor:"rgba(255, 255, 255, .1)",hoverColor:"#ffffff",hoverBgColor:"#2c2f36"},secondary:{color:"#000000"},disabled:{color:"#dddddd"},messages:{success:"#007e33",warning:"#ff8800",info:"#bde5f8",error:"#ff4444"},defaultButton:{backgroundColor:"#efefef",hoverBgColor:"#e7e7e7",color:"#000000"}},light:{primary:{backgroundColor:"#ffffff",color:"#000000",rule:"rgba(0, 0, 0, .55)",boxShadow:"0 12px 28px rgba(0, 0, 0, .1)",borderColor:"rgba(0, 0, 0, .1)",hoverColor:"#000000",hoverBgColor:"#e7e7e7"},secondary:{color:"#000000"},disabled:{color:"#dddddd"},messages:{success:"#007e33",warning:"#ff8800",info:"#bde5f8",error:"#ff4444"},defaultButton:{backgroundColor:"#efefef",hoverBgColor:"#e7e7e7",color:"#000000"}}}},209:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return AdaptiveSpan}));__webpack_require__(39),__webpack_require__(40),__webpack_require__(49),__webpack_require__(24),__webpack_require__(363),__webpack_require__(60),__webpack_require__(14),__webpack_require__(106),__webpack_require__(9),__webpack_require__(0);var dompurify__WEBPACK_IMPORTED_MODULE_10__=__webpack_require__(581),dompurify__WEBPACK_IMPORTED_MODULE_10___default=__webpack_require__.n(dompurify__WEBPACK_IMPORTED_MODULE_10__),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__=__webpack_require__(1),AdaptiveSpan=function AdaptiveSpan(_ref){var text=_ref.text,mapping=_ref.mapping,style=_ref.style,showTitle=_ref.showTitle,_toTag=function _toTag(value,style){return"bold"===style?"<b>".concat(value,"</b>"):"<i>".concat(value,"</i>")},html=text;style&&(html=_toTag(html,style)),null==mapping||mapping.forEach((function(map){var _map$value;map.value=null!==(_map$value=map.value)&&void 0!==_map$value?_map$value:"",text=text.replace(new RegExp(map.tag,"g"),map.value.toString()),map.style&&(map.value=_toTag(map.value,map.style)),html=html.replace(new RegExp(map.tag,"g"),map.value.toString())}));var props={};return showTitle&&(props=Object.assign({},props,{title:text})),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx)("span",Object.assign({},props,{dangerouslySetInnerHTML:{__html:dompurify__WEBPACK_IMPORTED_MODULE_10___default.a.sanitize(html)}}))};AdaptiveSpan.displayName="AdaptiveSpan";try{AdaptiveSpan.displayName="AdaptiveSpan",AdaptiveSpan.__docgenInfo={description:"",displayName:"AdaptiveSpan",props:{text:{defaultValue:null,description:"",name:"text",required:!0,type:{name:"string"}},style:{defaultValue:null,description:"",name:"style",required:!1,type:{name:"TextStyle"}},showTitle:{defaultValue:null,description:"",name:"showTitle",required:!1,type:{name:"boolean"}},mapping:{defaultValue:null,description:"",name:"mapping",required:!1,type:{name:"IMapping[]"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/common/AdaptiveSpan/index.tsx#AdaptiveSpan"]={docgenInfo:AdaptiveSpan.__docgenInfo,name:"AdaptiveSpan",path:"src/components/common/AdaptiveSpan/index.tsx#AdaptiveSpan"})}catch(__react_docgen_typescript_loader_error){}},210:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return ProtocolSelector_ProtocolSelector}));__webpack_require__(13),__webpack_require__(12),__webpack_require__(15),__webpack_require__(86),__webpack_require__(27),__webpack_require__(28),__webpack_require__(14),__webpack_require__(54),__webpack_require__(32),__webpack_require__(30),__webpack_require__(34),__webpack_require__(25),__webpack_require__(65);var _templateObject,_templateObject2,_templateObject3,_templateObject4,react=__webpack_require__(0),styled_components_browser_esm=(__webpack_require__(94),__webpack_require__(85),__webpack_require__(7)),styleFetcher=__webpack_require__(8),style=__webpack_require__(262);function _taggedTemplateLiteral(strings,raw){return raw||(raw=strings.slice(0)),Object.freeze(Object.defineProperties(strings,{raw:{value:Object.freeze(raw)}}))}var Button=styled_components_browser_esm.c.button(_templateObject||(_templateObject=_taggedTemplateLiteral(["\n  display: flex;\n  color: ",";\n  background-color: ",";\n  position: relative;\n  align-items: center;\n  border-radius: 16px;\n  min-height: 1.75rem;\n  min-width: 7.3rem;\n  outline: none;\n  border: none;\n\n  div:nth-child(1) {\n    display: block;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    margin: 0 0.5rem 0 0.5rem;\n  }\n\n  &:not(:disabled) {\n    cursor: pointer;\n\n    &:hover,\n    &:focus {\n      background-color: ",";\n    }\n  }\n\n  > * {\n    display: inline-block;\n  }\n"])),(function(_ref){var theme=_ref.theme;return Object(styleFetcher.a)(theme,"defaultButton","color")}),(function(_ref2){var theme=_ref2.theme;return Object(styleFetcher.a)(theme,"defaultButton","backgroundColor")}),(function(_ref3){var theme=_ref3.theme;return Object(styleFetcher.a)(theme,"defaultButton","hoverBgColor")})),ProtocolIcon=styled_components_browser_esm.c.img(_templateObject2||(_templateObject2=_taggedTemplateLiteral(["\n  height: 20px;\n  width: 35px;\n  margin: 0.15rem 0 0.15rem 0.15rem;\n  vertical-align: middle;\n  overflow: hidden;\n"]))),_Symbol=styled_components_browser_esm.c.div(_templateObject3||(_templateObject3=_taggedTemplateLiteral(["\n  font-size: 1.1em;\n  margin: 2px 0;\n  vertical-align: middle;\n  width: 100%;\n"]))),DropDownList=styled_components_browser_esm.c.div(_templateObject4||(_templateObject4=_taggedTemplateLiteral(["\n  position: absolute;\n  height: 6.5rem;\n  background-color: ",";\n  color: ",";\n  z-index: 1;\n  margin: 0 0 0 10px;\n  max-width: 12rem;\n  padding: 0;\n  overflow-x: hidden;\n  overflow-y: auto;\n  transition: max-height 0.18s ease-in-out;\n  max-height: 0;\n  box-shadow: ",";\n  ",";\n\n  ","\n\n  div {\n    display: flex;\n    align-items: center;\n    cursor: pointer;\n    user-select: none;\n    font-size: 0.9em;\n    padding: 0.17rem 1.5rem 0.25rem 0;\n\n    &:hover,\n    &:focus {\n      outline: none;\n      background-color: ",";\n      color: ",";\n\n      div:nth-of-type(2) {\n        border-color: ",";\n        color: ",";\n      }\n    }\n\n    img {\n      margin-right: 0.5rem;\n    }\n\n    div:nth-of-type(1) {\n      display: inline-block;\n      vertical-align: middle;\n      margin-right: 0.5rem;\n      overflow: hidden;\n      text-overflow: ellipsis;\n    }\n\n    div:nth-of-type(2) {\n      font-size: 0.7em;\n      padding: 1px;\n      border: 1px solid ",";\n      color: ",";\n      position: absolute;\n      right: 0.6rem;\n    }\n  }\n"])),(function(_ref4){var theme=_ref4.theme;return Object(styleFetcher.a)(theme,"primary","backgroundColor")}),(function(_ref5){var theme=_ref5.theme;return Object(styleFetcher.a)(theme,"primary","color")}),(function(_ref6){var theme=_ref6.theme;return Object(styleFetcher.a)(theme,"primary","boxShadow")}),(function(_ref7){return _ref7.open&&"\n    max-height: 10rem;\n  "}),style.a,(function(_ref8){var theme=_ref8.theme;return Object(styleFetcher.a)(theme,"primary","hoverBgColor")}),(function(_ref9){var theme=_ref9.theme;return Object(styleFetcher.a)(theme,"primary","hoverColor")}),(function(_ref10){var theme=_ref10.theme;return Object(styleFetcher.a)(theme,"primary","color")}),(function(_ref11){var theme=_ref11.theme;return Object(styleFetcher.a)(theme,"primary","color")}),(function(_ref12){var theme=_ref12.theme;return Object(styleFetcher.a)(theme,"disabled","color")}),(function(_ref13){var theme=_ref13.theme;return Object(styleFetcher.a)(theme,"disabled","color")})),Icon=__webpack_require__(59),useLocale=__webpack_require__(132),defaultThemes=__webpack_require__(168),jsx_runtime=__webpack_require__(1);function _slicedToArray(arr,i){return function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}(arr)||function _iterableToArrayLimit(arr,i){if("undefined"==typeof Symbol||!(Symbol.iterator in Object(arr)))return;var _arr=[],_n=!0,_d=!1,_e=void 0;try{for(var _s,_i=arr[Symbol.iterator]();!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}(arr,i)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr,i)||function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}var ProtocolSelector_ProtocolSelector=function ProtocolSelector(props){var dropdownRef=Object(react.useRef)(null),strs=Object(useLocale.a)().strings.protocolSelector,_useState2=_slicedToArray(Object(react.useState)(),2),protocol=_useState2[0],setProtocol=_useState2[1],_useState4=_slicedToArray(Object(react.useState)(!1),2),dropdownIsOpen=_useState4[0],setDropdownIsOpen=_useState4[1];Object(react.useEffect)((function(){var _handleOuterClick=function _handleOuterClick(e){dropdownRef.current&&!dropdownRef.current.contains(e.target)&&dropdownIsOpen&&setDropdownIsOpen(!1)};return document.addEventListener("click",_handleOuterClick),function(){document.removeEventListener("click",_handleOuterClick)}}),[dropdownIsOpen]),Object(react.useLayoutEffect)((function(){setProtocol(props.current)}),[props.current]);var handleKeypress=function handleKeypress(protocol){return function(e){"Enter"===e.key&&handleProtocolPick(protocol)()}},handleProtocolPick=function handleProtocolPick(protocol){return function(){"function"==typeof props.onChange&&props.onChange(protocol),setProtocol(protocol),setDropdownIsOpen(!1)}},fullLabel="".concat(null==protocol?void 0:protocol.name," - ").concat(null==protocol?void 0:protocol.symbol),button=Object(react.useMemo)((function(){return protocol?Object(jsx_runtime.jsxs)(Button,{title:fullLabel,disabled:props.disabled,onClick:function onClick(){return setDropdownIsOpen(!dropdownIsOpen)},children:[Object(jsx_runtime.jsx)(ProtocolIcon,{src:protocol.logoURI,title:fullLabel}),Object(jsx_runtime.jsx)(_Symbol,{children:protocol.symbol}),props.list.length>0&&Object(jsx_runtime.jsx)(Icon.a,{overrideTheme:defaultThemes.a.light,type:Icon.b.ArrowDown,style:{width:"0.8em"},disabled:props.disabled})]}):Object(jsx_runtime.jsxs)(Button,{disabled:props.disabled,onClick:function onClick(){return setDropdownIsOpen(!dropdownIsOpen)},children:[Object(jsx_runtime.jsx)("div",{children:strs.selectProtocol}),Object(jsx_runtime.jsx)(Icon.a,{overrideTheme:defaultThemes.a.light,type:Icon.b.ArrowDown,style:{width:"0.6em"},disabled:props.disabled})]})}),[protocol,props.disabled]);return Object(jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[button,Object(jsx_runtime.jsx)(DropDownList,{"data-test":"dropdown",open:dropdownIsOpen,tabIndex:0,ref:dropdownRef,children:props.list.map((function(protocol,i){return Object(jsx_runtime.jsxs)("div",{onClick:handleProtocolPick(protocol),onKeyPress:handleKeypress(protocol),tabIndex:0,children:[Object(jsx_runtime.jsx)(ProtocolIcon,{src:protocol.logoURI,title:fullLabel}),Object(jsx_runtime.jsx)("div",{children:protocol.name}),Object(jsx_runtime.jsx)("div",{children:protocol.symbol})]},i)}))})]})};try{ProtocolSelector_ProtocolSelector.displayName="ProtocolSelector",ProtocolSelector_ProtocolSelector.__docgenInfo={description:"",displayName:"ProtocolSelector",props:{disabled:{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean"}},current:{defaultValue:null,description:"",name:"current",required:!1,type:{name:"IProtocol"}},list:{defaultValue:null,description:"",name:"list",required:!0,type:{name:"IProtocol[]"}},allowCustom:{defaultValue:null,description:"",name:"allowCustom",required:!1,type:{name:"boolean"}},onChange:{defaultValue:null,description:"",name:"onChange",required:!1,type:{name:"((newProtocol: IProtocol) => void)"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/ProtocolSelector/index.tsx#ProtocolSelector"]={docgenInfo:ProtocolSelector_ProtocolSelector.__docgenInfo,name:"ProtocolSelector",path:"src/components/ProtocolSelector/index.tsx#ProtocolSelector"})}catch(__react_docgen_typescript_loader_error){}},260:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return mergeDeep}));__webpack_require__(86),__webpack_require__(9),__webpack_require__(39),__webpack_require__(40),__webpack_require__(17),__webpack_require__(27),__webpack_require__(28),__webpack_require__(14),__webpack_require__(54),__webpack_require__(32),__webpack_require__(30),__webpack_require__(34),__webpack_require__(105);function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function _typeof(obj){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function _typeof(obj){return typeof obj}:function _typeof(obj){return obj&&"function"==typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj})(obj)}var isObject=function isObject(item){return item&&"object"===_typeof(item)&&!Array.isArray(item)},mergeDeep=function mergeDeep(target,source){var output=Object.assign({},target);return isObject(target)&&isObject(source)&&Object.keys(source).forEach((function(key){isObject(source[key])&&key in target?output[key]=mergeDeep(target[key],source[key]):Object.assign(output,_defineProperty({},key,source[key]))})),output}},261:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return activeProtocols}));__webpack_require__(15),__webpack_require__(9);var activeProtocols=[{name:"Bitcoin",symbol:"BTC",decimals:8,price:61e3},{name:"Ethereum",symbol:"ETH",decimals:18,price:2189},{name:"BinanceCoin",symbol:"BNB",decimals:8,price:300},{name:"Cardano",symbol:"ADA",decimals:6,price:1.106},{name:"ChainLink",symbol:"LINK",decimals:6,price:29.76}].map((function(coin){return Object.assign({balance:Math.floor(15*Math.random())+1},coin,{logoURI:"https://s3.us-east-2.amazonaws.com/nomics-api/static/images/currencies/".concat(coin.symbol.toLowerCase(),".svg")})}))},262:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return scrollbar}));__webpack_require__(25),__webpack_require__(94),__webpack_require__(85);var _templateObject,styled_components__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(7),_providers_theme_styleFetcher__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__(8);var scrollbar=Object(styled_components__WEBPACK_IMPORTED_MODULE_3__.b)(_templateObject||(_templateObject=function _taggedTemplateLiteral(strings,raw){return raw||(raw=strings.slice(0)),Object.freeze(Object.defineProperties(strings,{raw:{value:Object.freeze(raw)}}))}(["\n  /* Firefox */\n  scrollbar-color: ",";\n  scrollbar-width: thin;\n\n  /* Webkit-based browsers */\n  &::-webkit-scrollbar-track {\n    background-color: ",";\n    border: 1px solid #dedede;\n  }\n\n  &::-webkit-scrollbar {\n    width: 6px;\n    background-color: #dedede;\n  }\n\n  &::-webkit-scrollbar-thumb {\n    background-color: ",";\n    border: 1px solid #dedede;\n  }\n"])),(function(p){return Object(_providers_theme_styleFetcher__WEBPACK_IMPORTED_MODULE_4__.a)(p.theme,"primary","color")+" "+Object(_providers_theme_styleFetcher__WEBPACK_IMPORTED_MODULE_4__.a)(p.theme,"primary","backgroundColor")}),(function(p){return Object(_providers_theme_styleFetcher__WEBPACK_IMPORTED_MODULE_4__.a)(p.theme,"primary","backgroundColor")}),(function(p){return Object(_providers_theme_styleFetcher__WEBPACK_IMPORTED_MODULE_4__.a)(p.theme,"primary","color")}))},263:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return shortenHash}));__webpack_require__(13);var shortenHash=function shortenHash(hash,length){return hash.length<=2*length?hash:"".concat(hash.substr(0,length),"...").concat(hash.substr(hash.length-length,hash.length-1))}},42:function(module,__webpack_exports__,__webpack_require__){"use strict";var TxStatus;__webpack_require__.d(__webpack_exports__,"a",(function(){return TxStatus})),function(TxStatus){TxStatus.COMPLETED="completed",TxStatus.PENDING="pending",TxStatus.UNKNOWN="unknown",TxStatus.FAILED="failed"}(TxStatus||(TxStatus={}))},48:function(module,__webpack_exports__,__webpack_require__){"use strict";var PaymentStatus;__webpack_require__.d(__webpack_exports__,"a",(function(){return PaymentStatus})),function(PaymentStatus){PaymentStatus.COMPLETE="complete",PaymentStatus.PENDING="pending",PaymentStatus.FAILED="failed"}(PaymentStatus||(PaymentStatus={}))},55:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return TransactionStatus_TransactionStatus})),__webpack_require__.d(__webpack_exports__,"b",(function(){return txStatus.a}));__webpack_require__(9),__webpack_require__(25),__webpack_require__(86),__webpack_require__(27),__webpack_require__(28),__webpack_require__(14),__webpack_require__(54),__webpack_require__(32),__webpack_require__(30),__webpack_require__(34),__webpack_require__(12),__webpack_require__(65);var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5,_templateObject6,_templateObject7,_templateObject8,_templateObject9,_templateObject10,_templateObject11,_templateObject12,_templateObject13,_templateObject14,_templateObject15,react=__webpack_require__(0),styled_components_browser_esm=(__webpack_require__(94),__webpack_require__(85),__webpack_require__(7)),animations=__webpack_require__(147),styleFetcher=__webpack_require__(8),defaultColorMap={completed:"#f08a5d",pending:"deepskyblue",unknown:"grey",failed:"red"},txStatus=__webpack_require__(42);function _taggedTemplateLiteral(strings,raw){return raw||(raw=strings.slice(0)),Object.freeze(Object.defineProperties(strings,{raw:{value:Object.freeze(raw)}}))}var Container=styled_components_browser_esm.c.div(_templateObject||(_templateObject=_taggedTemplateLiteral(["\n  position: relative;\n  width: 100%;\n  max-width: 375px;\n  max-height: 50px;\n  text-align: left;\n  background-color: ",";\n  border-radius: 3px;\n  font-size: 12px;\n  overflow: hidden;\n  transition: max-height 0.4s;\n  box-shadow: ",";\n  color: ",";\n\n  a {\n    color: ",";\n  }\n\n  ","\n\n  ","\n\n  ","\n"])),(function(p){return Object(styleFetcher.a)(p.theme,"primary","backgroundColor")}),(function(p){return Object(styleFetcher.a)(p.theme,"primary","boxShadow")}),(function(p){return Object(styleFetcher.a)(p.theme,"primary","color")}),(function(p){return Object(styleFetcher.a)(p.theme,"primary","color")}),(function(p){return p.noShadow&&"\n    box-shadow: none;\n  "}),(function(p){return p.hasDate&&"\n    \tmax-height: 60px;\n\t"}),(function(p){return p.showDetails&&"\n\t\tmax-height: 500px;\n\t"})),IconWrapper=styled_components_browser_esm.c.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral(["\n  display: inline-block;\n  width: 25px;\n  float: right;\n  ","\n\n  svg {\n    stroke: ",";\n  }\n"])),(function(p){return p.clickable&&"\n\t\tcursor: pointer;\n\t"}),(function(p){return Object(styleFetcher.a)(p.theme,"primary","color")})),Row=styled_components_browser_esm.c.div(_templateObject3||(_templateObject3=_taggedTemplateLiteral(["\n  display: grid;\n  grid-template-columns: 4fr 6fr;\n\n  ","\n"])),(function(p){return p.showSide&&"\n\t\tgrid-template-columns: 4fr 4fr 2fr;\n\t"})),Amount=styled_components_browser_esm.c.div(_templateObject4||(_templateObject4=_taggedTemplateLiteral(["\n  color: ",";\n  padding: 0 10px 0 10px;\n  display: inline-block;\n  margin-right: 5px;\n\n  span.amount,\n  p {\n    display: inline-block;\n  }\n\n  span.amount {\n    font-size: 18px;\n    margin: 10px 3px 15px 0;\n  }\n"])),(function(p){return Object(styleFetcher.a)(p.theme,"primary","color")})),style_Date=styled_components_browser_esm.c.div(_templateObject5||(_templateObject5=_taggedTemplateLiteral(["\n  font-size: 10px;\n  position: absolute;\n  bottom: -4px;\n  width: 100%;\n  height: 20px;\n  color: ",";\n  background-color: ",";\n\n  > span {\n    margin: 0 15px 0 10px;\n  }\n"])),(function(p){return Object(styleFetcher.a)(p.theme,"primary","rule")}),(function(p){return Object(styleFetcher.a)(p.theme,"primary","backgroundColor")})),Status=styled_components_browser_esm.c.div(_templateObject6||(_templateObject6=_taggedTemplateLiteral(["\n  width: 60%;\n  align-self: center;\n  line-height: 1.8em;\n  font-size: 14px;\n  margin: 2px 0 2px 0;\n  color: ",";\n"])),(function(p){return Object(styleFetcher.a)(p.theme,"primary","color")})),Side=styled_components_browser_esm.c.div(_templateObject7||(_templateObject7=_taggedTemplateLiteral(["\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  align-items: center;\n\n  div:not(:first-of-type) {\n    margin: 0 0 0 10px;\n  }\n\n  &:after {\n    content: '';\n    height: 50%;\n    width: 1.3px;\n    left: 0;\n    position: absolute;\n    background-color: ",";\n  }\n"])),(function(p){return Object(styleFetcher.a)(p.theme,"primary","rule")})),style_getAnimation=function _getAnimation(animation,bgColor){switch(animation){case txStatus.a.FAILED:case txStatus.a.UNKNOWN:case txStatus.a.COMPLETED:return function _finiteAnim(bgColor){return Object(styled_components_browser_esm.b)(_templateObject9||(_templateObject9=_taggedTemplateLiteral(["\n  transition: width 0.3s linear;\n  &:before {\n    content: '';\n    display: block;\n    position: absolute;\n    background-color: ",";\n    top: 0;\n    left: 0;\n    bottom: 0;\n    animation: "," 0.8s linear 0s 1 normal forwards;\n  }\n"])),bgColor,animations.a)}(null!=bgColor?bgColor:defaultColorMap[animation]);case txStatus.a.PENDING:return function _pendingAnim(bgColor){return Object(styled_components_browser_esm.b)(_templateObject8||(_templateObject8=_taggedTemplateLiteral(["\n  transition: width 0.3s linear;\n  &:before {\n    content: '';\n    display: block;\n    position: absolute;\n    background-color: ",";\n    top: 0;\n    left: 0;\n    bottom: 0;\n    animation: "," 2.1s cubic-bezier(0.65, 0.815, 0.735, 0.395) infinite;\n  }\n"])),bgColor,animations.b)}(null!=bgColor?bgColor:"lightblue");default:return null}},StatusBar=styled_components_browser_esm.c.div(_templateObject10||(_templateObject10=_taggedTemplateLiteral(["\n  width: 100%;\n  height: 5px;\n  background-color: ",";\n  position: absolute;\n  overflow: hidden;\n  top: 0;\n\n  ","\n"])),(function(p){return p.animate?null:p.backgroundColor}),(function(p){return style_getAnimation(p.animate,p.backgroundColor)})),DetailedView=styled_components_browser_esm.c.div(_templateObject11||(_templateObject11=_taggedTemplateLiteral(["\n  padding: 10px;\n  min-height: 30px;\n  margin-bottom: 15px;\n"]))),Trajectory=styled_components_browser_esm.c.div(_templateObject12||(_templateObject12=_taggedTemplateLiteral(["\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  div {\n    display: inline-block;\n  }\n"]))),Arrow=styled_components_browser_esm.c.div(_templateObject13||(_templateObject13=_taggedTemplateLiteral(["\n  color: ",";\n  transform: rotate(45deg);\n  width: 0;\n  height: 0;\n  border: 5px solid transparent;\n  border-top: 5px solid;\n  border-right: 5px solid;\n  margin: 3px 15px 15px 10px;\n"])),(function(p){return Object(styleFetcher.a)(p.theme,"primary","rule")})),TxFees=styled_components_browser_esm.c.div(_templateObject14||(_templateObject14=_taggedTemplateLiteral(["\n  text-align: center;\n  color: ",";\n"])),(function(p){return Object(styleFetcher.a)(p.theme,"primary","color")})),CustomComponent=styled_components_browser_esm.c.div(_templateObject15||(_templateObject15=_taggedTemplateLiteral(["\n  overflow: auto;\n  max-width: 100%;\n  margin-top: 10px;\n  color: ",";\n"])),(function(p){return Object(styleFetcher.a)(p.theme,"primary","color")})),AdaptiveSpan=__webpack_require__(209),string=__webpack_require__(263),Icon=__webpack_require__(59),useLocale=__webpack_require__(132),jsx_runtime=__webpack_require__(1);function _slicedToArray(arr,i){return function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}(arr)||function _iterableToArrayLimit(arr,i){if("undefined"==typeof Symbol||!(Symbol.iterator in Object(arr)))return;var _arr=[],_n=!0,_d=!1,_e=void 0;try{for(var _s,_i=arr[Symbol.iterator]();!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}(arr,i)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr,i)||function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}var TransactionStatus_TransactionStatus=function TransactionStatus(props){var _props$date,_props$date$locale,locale=Object(useLocale.a)(),strs=locale.strings.transactionStatus,_useState2=_slicedToArray(Object(react.useState)(txStatus.a.UNKNOWN),2),status=_useState2[0],setStatus=_useState2[1],_useState4=_slicedToArray(Object(react.useState)(defaultColorMap),2),colorMap=_useState4[0],setColorMap=_useState4[1],_useState6=_slicedToArray(Object(react.useState)(!1),2),isToggled=_useState6[0],setIsToggled=_useState6[1],shouldRenderDetails=Boolean(props.txFees||props.sender||props.receiver||props.customDetailComponent),shouldRenderTrajectory=Boolean(props.sender||props.receiver),shouldRenderSide=Boolean(props.txURL||shouldRenderDetails)&&shouldRenderTrajectory;Object(react.useLayoutEffect)((function(){props.status&&setStatus(props.status),props.autoShowDetails&&shouldRenderDetails&&setIsToggled(!0),setColorMap(Object.assign({},defaultColorMap,props.colorMap))}),[props.status,props.colorMap,props.autoShowDetails,shouldRenderDetails]);var _getTransaction=function _getTransaction(tx){return tx&&tx.hash?Object(jsx_runtime.jsx)("a",{href:tx.url,rel:"noreferrer",target:"_blank",title:tx.hash,children:Object(string.a)(tx.hash,7)}):null};return Object(jsx_runtime.jsxs)(Container,{showDetails:isToggled,hasDate:Boolean(null===(_props$date=props.date)||void 0===_props$date?void 0:_props$date.value),noShadow:props.noShadow,children:[Object(jsx_runtime.jsx)(StatusBar,{backgroundColor:colorMap[status],animate:props.animated?props.status:null}),Object(jsx_runtime.jsxs)(Row,{showSide:shouldRenderSide,children:[Object(jsx_runtime.jsx)(Amount,{children:Object(jsx_runtime.jsx)(AdaptiveSpan.a,{text:'<span class="amount">{amount}</span><p>{symbol}</p>',mapping:[{tag:"{amount}",value:props.amount,style:"bold"},{tag:"{symbol}",value:props.symbol}]})}),Object(jsx_runtime.jsx)(Status,{title:strs.status,children:Object(jsx_runtime.jsx)("span",{children:function _getStatus(){var statusStr=strs.statuses[status],output=statusStr.toUpperCase()+statusStr.slice(1);return props.uncapitalizeStatus||(output=statusStr.toUpperCase()),output}()})}),shouldRenderSide&&Object(jsx_runtime.jsxs)(Side,{children:[props.txURL&&Object(jsx_runtime.jsx)(IconWrapper,{children:Object(jsx_runtime.jsx)(Icon.a,{type:Icon.b.OutboundLink,style:{width:21},url:props.txURL,targetBlank:!0})}),shouldRenderDetails&&Object(jsx_runtime.jsx)(IconWrapper,{clickable:!0,onClick:function _handleToggleClick(){return setIsToggled(!isToggled)},children:Object(jsx_runtime.jsx)(Icon.a,{type:isToggled?Icon.b.ArrowUp:Icon.b.ArrowDown,style:{width:15}})})]})]}),shouldRenderDetails&&Object(jsx_runtime.jsxs)(DetailedView,{children:[shouldRenderTrajectory&&Object(jsx_runtime.jsxs)("div",{children:[Object(jsx_runtime.jsxs)(Trajectory,{children:[_getTransaction(props.sender),props.sender&&props.receiver&&Object(jsx_runtime.jsx)(Arrow,{}),_getTransaction(props.receiver)]}),Object(jsx_runtime.jsxs)(TxFees,{children:[props.txFees," ",props.symbol," ",strs.fees]})]}),Object(jsx_runtime.jsx)(CustomComponent,{children:props.customDetailComponent})]}),props.date&&props.date.value&&Object(jsx_runtime.jsx)(style_Date,{children:Object(jsx_runtime.jsx)("span",{children:new Intl.DateTimeFormat(null!==(_props$date$locale=props.date.locale)&&void 0!==_props$date$locale?_props$date$locale:locale.locale,props.date.options).format(props.date.value)})})]})};TransactionStatus_TransactionStatus.displayName="TransactionStatus",TransactionStatus_TransactionStatus.defaultProps={date:{locale:"en-US",options:{day:"numeric",month:"numeric",hour:"numeric",minute:"numeric"}}};try{TransactionStatus_TransactionStatus.displayName="TransactionStatus",TransactionStatus_TransactionStatus.__docgenInfo={description:"",displayName:"TransactionStatus",props:{amount:{defaultValue:null,description:"",name:"amount",required:!0,type:{name:"string"}},symbol:{defaultValue:null,description:"",name:"symbol",required:!0,type:{name:"string"}},status:{defaultValue:null,description:"",name:"status",required:!1,type:{name:"TxStatus"}},animated:{defaultValue:null,description:"",name:"animated",required:!1,type:{name:"boolean"}},noShadow:{defaultValue:null,description:"",name:"noShadow",required:!1,type:{name:"boolean"}},date:{defaultValue:null,description:"",name:"date",required:!1,type:{name:"{ value?: Date; locale?: string | undefined; options?: DateTimeFormatOptions | undefined; } | undefined"}},txURL:{defaultValue:null,description:"",name:"txURL",required:!1,type:{name:"string"}},colorMap:{defaultValue:null,description:"",name:"colorMap",required:!1,type:{name:"Record<TxStatus, string>"}},uncapitalizeStatus:{defaultValue:null,description:"",name:"uncapitalizeStatus",required:!1,type:{name:"boolean"}},autoShowDetails:{defaultValue:null,description:"",name:"autoShowDetails",required:!1,type:{name:"boolean"}},sender:{defaultValue:null,description:"",name:"sender",required:!1,type:{name:"IAddress"}},receiver:{defaultValue:null,description:"",name:"receiver",required:!1,type:{name:"IAddress"}},txFees:{defaultValue:null,description:"",name:"txFees",required:!1,type:{name:"string"}},customDetailComponent:{defaultValue:null,description:"",name:"customDetailComponent",required:!1,type:{name:"ReactNode"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/TransactionStatus/index.tsx#TransactionStatus"]={docgenInfo:TransactionStatus_TransactionStatus.__docgenInfo,name:"TransactionStatus",path:"src/components/TransactionStatus/index.tsx#TransactionStatus"})}catch(__react_docgen_typescript_loader_error){}},59:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"b",(function(){return IconType})),__webpack_require__.d(__webpack_exports__,"a",(function(){return Icon_Icon}));__webpack_require__(9),__webpack_require__(0),__webpack_require__(25),__webpack_require__(94),__webpack_require__(85);var _templateObject,_templateObject2,styled_components_browser_esm=__webpack_require__(7),styleFetcher=__webpack_require__(8);function _taggedTemplateLiteral(strings,raw){return raw||(raw=strings.slice(0)),Object.freeze(Object.defineProperties(strings,{raw:{value:Object.freeze(raw)}}))}var IconType,Link=styled_components_browser_esm.c.a(_templateObject||(_templateObject=_taggedTemplateLiteral(["\n  color: ",";\n  text-decoration: none;\n"])),(function(_ref){var theme=_ref.theme,overrideTheme=_ref.overrideTheme;return Object(styleFetcher.a)(null!=overrideTheme?overrideTheme:theme,"primary","color")})),IconContainer=styled_components_browser_esm.c.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral(["\n  min-width: 0.5em;\n  margin: 3px;\n  display: inline-block;\n  vertical-align: middle;\n\n  ","\n\n  svg .fillable {\n    fill: ",";\n\n    ","\n  }\n"])),(function(_ref2){return void 0!==_ref2.onClick&&"\n    :hover, &:focus {\n      opacity: 0.6;\n    }\n  "}),(function(_ref3){var theme=_ref3.theme,overrideTheme=_ref3.overrideTheme;return Object(styleFetcher.a)(null!=overrideTheme?overrideTheme:theme,"primary","color")}),(function(_ref4){var theme=_ref4.theme;return _ref4.disabled&&"\n        fill: ".concat(Object(styleFetcher.a)(theme,"disabled","color"),"\n      ")})),jsx_runtime=__webpack_require__(1);!function(IconType){IconType.OutboundLink="outbound-link",IconType.HelpCircleO="help-circle-o",IconType.ArrowUp="arrow-up",IconType.ArrowDown="arrow-down"}(IconType||(IconType={}));var Icon_Icon=function Icon(props){var SelectedIcon={"help-circle-o":function _helpCircle(){return Object(jsx_runtime.jsx)("svg",{viewBox:"0 0 20 20",children:Object(jsx_runtime.jsx)("g",{stroke:"none",strokeWidth:"1",fill:"none",fillRule:"evenodd",children:Object(jsx_runtime.jsx)("g",{transform:"translate(-782.000000, -288.000000)",children:Object(jsx_runtime.jsx)("g",{transform:"translate(100.000000, 100.000000)",children:Object(jsx_runtime.jsx)("g",{transform:"translate(680.000000, 186.000000)",children:Object(jsx_runtime.jsxs)("g",{children:[Object(jsx_runtime.jsx)("polygon",{id:"Path",points:"0 0 24 0 24 24 0 24"}),Object(jsx_runtime.jsx)("path",{className:"fillable",d:"M11,18 L13,18 L13,16 L11,16 L11,18 Z M12,2 C6.48,2 2,6.48 2,12 C2,17.52 6.48,22 12,22 C17.52,22 22,17.52 22,12 C22,6.48 17.52,2 12,2 Z M12,20 C7.59,20 4,16.41 4,12 C4,7.59 7.59,4 12,4 C16.41,4 20,7.59 20,12 C20,16.41 16.41,20 12,20 Z M12,6 C9.79,6 8,7.79 8,10 L10,10 C10,8.9 10.9,8 12,8 C13.1,8 14,8.9 14,10 C14,12 11,11.75 11,15 L13,15 C13,12.75 16,12.5 16,10 C16,7.79 14.21,6 12,6 Z"})]})})})})})})},"outbound-link":function _outboundLink(){return Object(jsx_runtime.jsxs)("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24",fill:"none",stroke:"currentColor",strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round",children:[Object(jsx_runtime.jsx)("path",{d:"M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6"}),Object(jsx_runtime.jsx)("polyline",{points:"15 3 21 3 21 9"}),Object(jsx_runtime.jsx)("line",{x1:"10",y1:"14",x2:"21",y2:"3"})]})},"arrow-up":function _arrowUp(){return Object(jsx_runtime.jsx)("svg",{version:"1.1",xmlns:"http://www.w3.org/2000/svg",x:"0px",y:"0px",viewBox:"0 0 330 330",xmlSpace:"preserve",children:Object(jsx_runtime.jsx)("path",{className:"fillable",d:"M325.606,229.393l-150.004-150C172.79,76.58,168.974,75,164.996,75c-3.979,0-7.794,1.581-10.607,4.394 l-149.996,150c-5.858,5.858-5.858,15.355,0,21.213c5.857,5.857,15.355,5.858,21.213,0l139.39-139.393l139.397,139.393 C307.322,253.536,311.161,255,315,255c3.839,0,7.678-1.464,10.607-4.394C331.464,244.748,331.464,235.251,325.606,229.393z"})})},"arrow-down":function _arrowDown(){return Object(jsx_runtime.jsx)("svg",{version:"1.1",xmlns:"http://www.w3.org/2000/svg",x:"0px",y:"0px",viewBox:"0 0 330 330",children:Object(jsx_runtime.jsx)("path",{className:"fillable",d:"M325.607,79.393c-5.857-5.857-15.355-5.858-21.213,0.001l-139.39,139.393L25.607,79.393 c-5.857-5.857-15.355-5.858-21.213,0.001c-5.858,5.858-5.858,15.355,0,21.213l150.004,150c2.813,2.813,6.628,4.393,10.606,4.393 s7.794-1.581,10.606-4.394l149.996-150C331.465,94.749,331.465,85.251,325.607,79.393z"})})}}[props.type];return props.url?Object(jsx_runtime.jsx)(Link,Object.assign({href:props.url,title:props.url},function _getSpecProps(){var specProps={};return props.targetBlank&&(specProps=Object.assign({},specProps,{target:"_blank",rel:"noreferrer"})),specProps}(),{children:Object(jsx_runtime.jsx)(IconContainer,{style:props.style,children:Object(jsx_runtime.jsx)(SelectedIcon,{})})})):Object(jsx_runtime.jsx)(IconContainer,Object.assign({},props,{children:Object(jsx_runtime.jsx)(SelectedIcon,{})}))};Icon_Icon.displayName="Icon";try{Icon_Icon.displayName="Icon",Icon_Icon.__docgenInfo={description:"",displayName:"Icon",props:{type:{defaultValue:null,description:"",name:"type",required:!0,type:{name:"enum",value:[{value:'"outbound-link"'},{value:'"help-circle-o"'},{value:'"arrow-up"'},{value:'"arrow-down"'}]}},url:{defaultValue:null,description:"",name:"url",required:!1,type:{name:"string"}},style:{defaultValue:null,description:"",name:"style",required:!1,type:{name:"CSSProperties"}},targetBlank:{defaultValue:null,description:"",name:"targetBlank",required:!1,type:{name:"boolean"}},overrideTheme:{defaultValue:null,description:"",name:"overrideTheme",required:!1,type:{name:"ITheme"}},disabled:{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean"}},onClick:{defaultValue:null,description:"",name:"onClick",required:!1,type:{name:"(() => void)"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/common/Icon/index.tsx#Icon"]={docgenInfo:Icon_Icon.__docgenInfo,name:"Icon",path:"src/components/common/Icon/index.tsx#Icon"})}catch(__react_docgen_typescript_loader_error){}},600:function(module,exports,__webpack_require__){__webpack_require__(601),__webpack_require__(761),__webpack_require__(762),__webpack_require__(1084),__webpack_require__(1085),__webpack_require__(953),__webpack_require__(1046),__webpack_require__(1090),__webpack_require__(1089),__webpack_require__(1088),__webpack_require__(1091),__webpack_require__(1092),module.exports=__webpack_require__(1068)},673:function(module,exports){},762:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__(242)},77:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return PaymentRequest_PaymentRequest}));__webpack_require__(106),__webpack_require__(74),__webpack_require__(81),__webpack_require__(49),__webpack_require__(24),__webpack_require__(14),__webpack_require__(60),__webpack_require__(15);var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5,_templateObject6,_templateObject7,_templateObject8,_templateObject9,_templateObject10,react=__webpack_require__(0),useLocale=__webpack_require__(132),styled_components_browser_esm=(__webpack_require__(25),__webpack_require__(94),__webpack_require__(85),__webpack_require__(7)),dist_modules=__webpack_require__(580),styleFetcher=__webpack_require__(8),common_style=__webpack_require__(262);function _taggedTemplateLiteral(strings,raw){return raw||(raw=strings.slice(0)),Object.freeze(Object.defineProperties(strings,{raw:{value:Object.freeze(raw)}}))}var style_templateObject,style_templateObject2,style_templateObject3,style_templateObject4,style_templateObject5,Container=styled_components_browser_esm.c.div(_templateObject||(_templateObject=_taggedTemplateLiteral(["\n  color: ",";\n  background-color: ",";\n  width: 360px;\n  max-height: 600px;\n  padding: 40px;\n  text-align: left;\n  box-shadow: ",";\n  border-radius: 3px;\n  font-size: 12px;\n\n  ","\n\n  @media only screen and (max-width: 480px) {\n    padding: 0 0 25px 0;\n    width: 285px;\n  }\n"])),(function(p){return Object(styleFetcher.a)(p.theme,"primary","color")}),(function(p){return Object(styleFetcher.a)(p.theme,"primary","backgroundColor")}),(function(p){return Object(styleFetcher.a)(p.theme,"primary","boxShadow")}),(function(p){return p.noShadow&&"\n    box-shadow: none;\n  "})),Header=styled_components_browser_esm.c.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral(["\n  margin-bottom: 25px;\n  max-height: 150px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  img {\n    max-width: 150px;\n    max-height: 115px;\n\n    &:not(:first-of-type) {\n      float: right;\n    }\n  }\n\n  @media only screen and (max-width: 480px) {\n    padding: 15px 30px 0 30px;\n    img {\n      max-width: 100px;\n    }\n  }\n"]))),Spinner=styled_components_browser_esm.c.div(_templateObject3||(_templateObject3=_taggedTemplateLiteral(["\n  display: inline-block;\n  width: 6px;\n  height: 6px;\n  border: 2px solid rgba(0, 0, 0, 0.3);\n  border-radius: 50%;\n  border-top-color: ",";\n  animation: spin 1s ease-in-out infinite;\n  margin-right: 5px;\n\n  @keyframes spin {\n    to {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n\n  @-webkit-keyframes spin {\n    to {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n"])),(function(p){return Object(styleFetcher.a)(p.theme,"primary","backgroundColor")})),QRCode=Object(styled_components_browser_esm.c)(dist_modules.QRCode)(_templateObject4||(_templateObject4=_taggedTemplateLiteral(["\n  display: block;\n  margin: auto;\n"]))),DetailedView=styled_components_browser_esm.c.div(_templateObject5||(_templateObject5=_taggedTemplateLiteral(["\n  display: block;\n  margin: 15px 0 15px 0;\n"]))),Request=styled_components_browser_esm.c.div(_templateObject6||(_templateObject6=_taggedTemplateLiteral(["\n  text-align: center;\n  margin-bottom: 15px;\n\n  > div {\n    margin-top: 15px;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    border-top: 1px solid #dedede;\n    border-bottom: 1px solid #dedede;\n    font-weight: bold;\n    padding: 10px 0 10px 0;\n  }\n"]))),TransactionList=styled_components_browser_esm.c.ul(_templateObject7||(_templateObject7=_taggedTemplateLiteral(["\n  padding: 0;\n  margin: 0;\n  list-style: none;\n  max-height: 60px;\n  overflow-x: hidden;\n  overflow-y: auto;\n\n  li {\n    i {\n      margin-left: 5px;\n    }\n  }\n\n  ","\n"])),common_style.a),Visual=styled_components_browser_esm.c.div(_templateObject8||(_templateObject8=_taggedTemplateLiteral([""]))),CancelButton=styled_components_browser_esm.c.button(_templateObject9||(_templateObject9=_taggedTemplateLiteral(["\n  display: block;\n  cursor: pointer;\n  margin: 0 auto 5px auto;\n  padding: 0.35em 1.2em;\n  border: 0.1em solid ",";\n  border-radius: 0.12em;\n  box-sizing: border-box;\n  text-decoration: none;\n  font-weight: 300;\n  color: ",";\n  text-align: center;\n\n  &:hover,\n  &:focus {\n    color: ",";\n    background-color: #f7931a;\n  }\n\n  &:focus {\n    outline: none;\n  }\n"])),(function(p){return Object(styleFetcher.a)(p.theme,"primary","backgroundColor")}),(function(p){return Object(styleFetcher.a)(p.theme,"primary","color")}),(function(p){return Object(styleFetcher.a)(p.theme,"primary","backgroundColor")})),HelpLink=styled_components_browser_esm.c.a(_templateObject10||(_templateObject10=_taggedTemplateLiteral(["\n  display: block;\n  margin: auto;\n  cursor: pointer;\n  left: 0;\n  right: 0;\n  bottom: 15px;\n  text-align: center;\n  margin: 10px auto 0 auto;\n  text-align: center;\n  text-decoration: none;\n  font-weight: 700;\n  color: ",";\n"])),(function(p){return Object(styleFetcher.a)(p.theme,"primary","color")})),animations=__webpack_require__(147);function style_taggedTemplateLiteral(strings,raw){return raw||(raw=strings.slice(0)),Object.freeze(Object.defineProperties(strings,{raw:{value:Object.freeze(raw)}}))}var IconType,Circle=styled_components_browser_esm.c.circle(style_templateObject||(style_templateObject=style_taggedTemplateLiteral(["\n  stroke-dasharray: 166;\n  stroke-dashoffset: 166;\n  stroke-width: 2;\n  stroke-miterlimit: 10;\n  stroke: #4bb71b;\n  fill: ",";\n  animation: "," 0.6s cubic-bezier(0.65, 0, 0.45, 1) forwards;\n"])),(function(p){return Object(styleFetcher.a)(p.theme,"primary","backgroundColor")}),animations.c),style_Container=styled_components_browser_esm.c.svg(style_templateObject2||(style_templateObject2=style_taggedTemplateLiteral(["\n  width: 100px;\n  height: 100px;\n  display: block;\n  position: relative;\n  margin: 0 auto;\n"]))),CheckMark=styled_components_browser_esm.c.path(style_templateObject3||(style_templateObject3=style_taggedTemplateLiteral(["\n  stroke-width: 2;\n  stroke-miterlimit: 10;\n  box-shadow: inset 0px 0px 0px #4bb71b;\n  border-radius: 50%;\n  stroke: #4bb71b;\n  transform-origin: 50% 50%;\n  stroke-dasharray: 48;\n  stroke-dashoffset: 48;\n  animation: "," 0.3s cubic-bezier(0.65, 0, 0.45, 1) 0.8s forwards;\n"])),animations.c),Times=styled_components_browser_esm.c.g(style_templateObject4||(style_templateObject4=style_taggedTemplateLiteral(["\n  path {\n    stroke-width: 2;\n    stroke: #4bb71b;\n    stroke-dasharray: 48;\n    stroke-dashoffset: 48;\n    transform-origin: 50% 50% 0;\n    animation: 0.3s ease 0.8s normal forwards 1 running ",";\n  }\n"])),animations.c),IconContainer=styled_components_browser_esm.c.div(style_templateObject5||(style_templateObject5=style_taggedTemplateLiteral(["\n  display: inline-block;\n  vertical-align: middle;\n"]))),jsx_runtime=__webpack_require__(1);!function(IconType){IconType.Sucess="success",IconType.Failure="failure"}(IconType||(IconType={}));var AnimatedIcon_AnimatedIcon=function AnimatedIcon(_ref){var type=_ref.type,style=_ref.style,icons={success:Object(jsx_runtime.jsxs)(style_Container,{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 52 52",children:[Object(jsx_runtime.jsx)(Circle,{cx:"26",cy:"26",r:"25",fill:"none"}),Object(jsx_runtime.jsx)(CheckMark,{fill:"none",d:"M14.1 27.2l7.1 7.2 16.7-16.8"})]}),failure:Object(jsx_runtime.jsxs)(style_Container,{viewBox:"0 0 52 52",xmlns:"http://www.w3.org/2000/svg",children:[Object(jsx_runtime.jsx)(Circle,{cx:"26",cy:"26",r:"25",fill:"none"}),Object(jsx_runtime.jsxs)(Times,{children:[Object(jsx_runtime.jsx)("path",{fill:"none",d:"M16,16 l20,20"}),Object(jsx_runtime.jsx)("path",{fill:"none",d:"M16,36 l20,-20"})]})]})};return Object(jsx_runtime.jsx)(IconContainer,{style:style,children:icons[type]})};AnimatedIcon_AnimatedIcon.displayName="AnimatedIcon";try{AnimatedIcon_AnimatedIcon.displayName="AnimatedIcon",AnimatedIcon_AnimatedIcon.__docgenInfo={description:"",displayName:"AnimatedIcon",props:{type:{defaultValue:null,description:"",name:"type",required:!0,type:{name:"enum",value:[{value:'"success"'},{value:'"failure"'}]}},style:{defaultValue:null,description:"",name:"style",required:!1,type:{name:"CSSProperties"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/common/AnimatedIcon/index.tsx#AnimatedIcon"]={docgenInfo:AnimatedIcon_AnimatedIcon.__docgenInfo,name:"AnimatedIcon",path:"src/components/common/AnimatedIcon/index.tsx#AnimatedIcon"})}catch(__react_docgen_typescript_loader_error){}var item_templateObject,item_templateObject2,item_templateObject3,paymentStatus=__webpack_require__(48),defaultProps={symbol:"BTC",status:paymentStatus.a.PENDING,showQRCode:!0},AdaptiveSpan=__webpack_require__(209),padDigits=function padDigits(number,digits){var max=arguments.length>2&&void 0!==arguments[2]?arguments[2]:30,s=number.toString();for(0===number&&(s="0.".concat(s));s.length<digits&&s.length<max;)s+="0";return s},string=__webpack_require__(263),Icon=__webpack_require__(59);function item_taggedTemplateLiteral(strings,raw){return raw||(raw=strings.slice(0)),Object.freeze(Object.defineProperties(strings,{raw:{value:Object.freeze(raw)}}))}var item_Container=styled_components_browser_esm.c.div(item_templateObject||(item_templateObject=item_taggedTemplateLiteral(["\n\tpadding: 4px 0;\n\tdisplay: flex;\n\talign-items: baseline;\n"]))),Title=styled_components_browser_esm.c.div(item_templateObject2||(item_templateObject2=item_taggedTemplateLiteral(["\n\tdisplay: inline-block;\n\twidth: 50%;\n\tbox-sizing: border-box;\n\tvertical-align: top;\n\tfont-size: 12px;\n\topacity: .6;\n\ttext-align: right;\n\n\t@media only screen and (max-width: 480px) {\n\t\tpadding-right: 2px;\n\t}\n"]))),Value=styled_components_browser_esm.c.div(item_templateObject3||(item_templateObject3=item_taggedTemplateLiteral(["\n\tdisplay: inline-block;\n\tpadding-left: 8px;\n\twidth: 50%;\n\tbox-sizing: border-box;\n\toverflow: hidden;\n\ttext-overflow: ellipsis;\n\twhite-space: nowrap;\n\n\t@media only screen and (max-width: 480px) {\n\t\tpadding-left: 2px;\n\t}\n"]))),item_Item=function Item(_ref){var title=_ref.title,children=_ref.children;return Object(jsx_runtime.jsxs)(item_Container,{children:[Object(jsx_runtime.jsxs)(Title,{title:title,children:[title,":"]}),Object(jsx_runtime.jsx)(Value,{children:children})]})};item_Item.displayName="Item";try{item_Item.displayName="Item",item_Item.__docgenInfo={description:"",displayName:"Item",props:{title:{defaultValue:null,description:"",name:"title",required:!0,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/PaymentRequest/item.tsx#Item"]={docgenInfo:item_Item.__docgenInfo,name:"Item",path:"src/components/PaymentRequest/item.tsx#Item"})}catch(__react_docgen_typescript_loader_error){}var themeProvider=__webpack_require__(122),PaymentRequest_PaymentRequest=function PaymentRequest(props){var _props$amount$receive,_props$deadline$dateL2,_props$transactions,theme=function useTheme(){return Object(react.useContext)(themeProvider.a).currentTheme.palette}(),locale=Object(useLocale.a)(),strs=locale.strings.paymentRequest,remainingAmount=props.amount.toPay-(null!==(_props$amount$receive=props.amount.received)&&void 0!==_props$amount$receive?_props$amount$receive:0);return Object(jsx_runtime.jsxs)(Container,{noShadow:props.noShadow,children:[Object(jsx_runtime.jsxs)(Header,{children:[Object(jsx_runtime.jsx)("img",{src:props.logos.coin,alt:"".concat(props.symbol," logo")}),props.logos.company&&Object(jsx_runtime.jsx)("img",{src:props.logos.company,alt:"Company logo"})]}),Object(jsx_runtime.jsxs)("div",{children:[Object(jsx_runtime.jsxs)(Request,{children:[Object(jsx_runtime.jsx)(AdaptiveSpan.a,{text:strs.request,mapping:[{tag:"{amount}",value:props.amount.toPay,style:"bold"},{tag:"{symbol}",value:props.symbol}]}),Object(jsx_runtime.jsx)("div",{title:props.address,children:props.address})]}),Object(jsx_runtime.jsx)(Visual,{children:function _renderVisual(){return props.status&&[paymentStatus.a.FAILED,paymentStatus.a.COMPLETE].includes(props.status)?Object(jsx_runtime.jsx)(AnimatedIcon_AnimatedIcon,{type:props.status===paymentStatus.a.FAILED?IconType.Failure:IconType.Sucess,style:{display:"flex",margin:"auto"}},props.status):props.showQRCode?Object(jsx_runtime.jsx)(QRCode,{bgColor:"transparent",fgColor:theme.primary.color,level:"L",style:{width:100},value:props.address}):null}()}),Object(jsx_runtime.jsxs)(DetailedView,{children:[props.sellerName?Object(jsx_runtime.jsx)(item_Item,{title:strs.seller,children:Object(jsx_runtime.jsx)("span",{title:props.sellerName,children:props.sellerName})}):null,"number"==typeof props.amount.received?Object(jsx_runtime.jsxs)(react.Fragment,{children:[Object(jsx_runtime.jsxs)(item_Item,{title:strs.receivedAmount,children:[padDigits(props.amount.received,props.decimalPlaces)," ",props.symbol]}),Object(jsx_runtime.jsxs)(item_Item,{title:strs.remainingAmount,children:[padDigits(remainingAmount,props.decimalPlaces)," ",props.symbol]})]}):null,props.deadline&&remainingAmount>0?Object(jsx_runtime.jsxs)(item_Item,{title:strs.deadline,children:[new Intl.DateTimeFormat(null!==(_props$deadline$dateL2=props.deadline.dateLocale)&&void 0!==_props$deadline$dateL2?_props$deadline$dateL2:locale.locale).format(props.deadline.datetime),props.deadline.humanized&&Object(jsx_runtime.jsxs)("span",{children:[" (",function _getFromDate(date){var _props$deadline$dateL,_props$deadline,currentDate=new Date,dayCount=(date.getTime()-currentDate.getTime())/864e5,unit="day",value=dayCount;if(dayCount>=0&&dayCount<=1){var hoursCount=Math.abs(currentDate.getTime()-date.getTime())/36e5;if(unit="hours",value=hoursCount,hoursCount<=1){var minCount=Math.abs(currentDate.getTime()-date.getTime())/1e3/60;unit="minute",value=Math.ceil(minCount)}}return new Intl.RelativeTimeFormat(null!==(_props$deadline$dateL=null===(_props$deadline=props.deadline)||void 0===_props$deadline?void 0:_props$deadline.dateLocale)&&void 0!==_props$deadline$dateL?_props$deadline$dateL:locale.locale).format(Math.ceil(value),unit)}(props.deadline.datetime),")"]})]}):null,null!==(_props$transactions=props.transactions)&&void 0!==_props$transactions&&_props$transactions.length?Object(jsx_runtime.jsx)(item_Item,{title:strs.transactions.replace("{txAmount}",props.transactions.length.toString()),children:Object(jsx_runtime.jsx)(TransactionList,{children:props.transactions.map((function(transaction,index){return Object(jsx_runtime.jsxs)("li",{children:[Object(jsx_runtime.jsx)("a",{href:transaction.txUrl,title:"Transaction",rel:"noreferrer",target:"_blank",children:Object(string.a)(transaction.txHash,3)}),Object(jsx_runtime.jsxs)("i",{children:["(",padDigits(transaction.amount,props.decimalPlaces)," ",props.symbol,")"]})]},index)}))})}):null,Object(jsx_runtime.jsxs)(item_Item,{title:strs.status,children:[props.waitAnimation&&props.status===paymentStatus.a.PENDING&&Object(jsx_runtime.jsx)(Spinner,{}),Object(jsx_runtime.jsx)(AdaptiveSpan.a,{showTitle:!0,text:function _getStatus(){return remainingAmount<=0?strs.txStatus.complete:props.customStatusText?props.customStatusText:strs.txStatus[props.status]}(),style:"bold"})]})]})]}),Object(jsx_runtime.jsxs)("div",{children:[props.onCancel&&Object(jsx_runtime.jsx)(CancelButton,{onClick:props.onCancel,children:strs.cancel}),props.helpUrl&&Object(jsx_runtime.jsxs)(HelpLink,{href:props.helpUrl,title:strs.help,target:"blank",children:[Object(jsx_runtime.jsx)(Icon.a,{type:Icon.b.HelpCircleO,style:{width:13,lineHeight:"15px"}}),strs.help]})]})]})};PaymentRequest_PaymentRequest.displayName="PaymentRequest",PaymentRequest_PaymentRequest.defaultProps=defaultProps;try{PaymentRequest_PaymentRequest.displayName="PaymentRequest",PaymentRequest_PaymentRequest.__docgenInfo={description:"",displayName:"PaymentRequest",props:{address:{defaultValue:null,description:"",name:"address",required:!0,type:{name:"string"}},symbol:{defaultValue:null,description:"",name:"symbol",required:!0,type:{name:"string"}},amount:{defaultValue:null,description:"",name:"amount",required:!0,type:{name:"{ toPay: number; received?: number | undefined; }"}},logos:{defaultValue:null,description:"",name:"logos",required:!0,type:{name:"{ coin: string; company?: string | undefined; }"}},decimalPlaces:{defaultValue:null,description:"",name:"decimalPlaces",required:!0,type:{name:"number"}},waitAnimation:{defaultValue:null,description:"",name:"waitAnimation",required:!1,type:{name:"boolean"}},sellerName:{defaultValue:null,description:"",name:"sellerName",required:!1,type:{name:"string"}},helpUrl:{defaultValue:null,description:"",name:"helpUrl",required:!1,type:{name:"string"}},showQRCode:{defaultValue:null,description:"",name:"showQRCode",required:!1,type:{name:"boolean"}},noShadow:{defaultValue:null,description:"",name:"noShadow",required:!1,type:{name:"boolean"}},transactions:{defaultValue:null,description:"",name:"transactions",required:!1,type:{name:"ITransaction[]"}},customStatusText:{defaultValue:null,description:"",name:"customStatusText",required:!1,type:{name:"string"}},status:{defaultValue:null,description:"",name:"status",required:!1,type:{name:"PaymentStatus"}},deadline:{defaultValue:null,description:"",name:"deadline",required:!1,type:{name:"{ dateLocale?: string; datetime: Date; humanized?: boolean | undefined; } | undefined"}},onCancel:{defaultValue:null,description:"",name:"onCancel",required:!1,type:{name:"(() => void)"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/PaymentRequest/index.tsx#PaymentRequest"]={docgenInfo:PaymentRequest_PaymentRequest.__docgenInfo,name:"PaymentRequest",path:"src/components/PaymentRequest/index.tsx#PaymentRequest"})}catch(__react_docgen_typescript_loader_error){}},8:function(module,__webpack_exports__,__webpack_require__){"use strict";var _themeProvider__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(122);__webpack_exports__.a=function _(p,depth,name){return(!!p&&"primary"in p&&p?p:_themeProvider__WEBPACK_IMPORTED_MODULE_0__.c.palette)[depth][name]}},89:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return defaultLocale})),__webpack_require__.d(__webpack_exports__,"b",(function(){return defaultLocalization}));var defaultLocale="en-US",defaultLocalization={locale:defaultLocale,strings:{paymentRequest:{request:"Please send {amount} {symbol} to address:",status:"Current status",seller:"Merchant",txStatus:{complete:"Payment complete",pending:"Waiting for payment",failed:"Payment failed"},cancel:"Cancel",help:"Need help? Click here!",deadline:"Send before",receivedAmount:"Amount received",remainingAmount:"Amount remaining",transactions:"Transactions ({txAmount})"},transactionStatus:{fees:"(fees)",status:"Status",statuses:{completed:"completed",pending:"pending",unknown:"unknown",failed:"failed"}},currencySwap:{from:"From",to:"To",balance:"Balance:",swapBtnLabel:"Swap values",submitButton:{unlockWallet:"Unlock Wallet",insufficientBalance:"Insufficient balance",proceed:"Swap"}},protocolSelector:{selectProtocol:"Select a coin"}}}},954:function(module,exports){function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=function(){return[]},webpackEmptyContext.resolve=webpackEmptyContext,module.exports=webpackEmptyContext,webpackEmptyContext.id=954},959:function(module,exports){},961:function(module,exports){},972:function(module,exports){},974:function(module,exports){},999:function(module,exports){}},[[600,2,3]]]);